<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="62:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f2c3e019020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f2c3e206df0"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f2c3e206df0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f2c3e038590"/></to>
    </wire>
    <wire loc="64:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7f2c3e01e7f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c3dbf0370"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c3dbf0370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2c3dd91610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2c3e00f8d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2c3e007020"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2c3e007020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2c3e003a70"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c3e202320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c3d64ab20"/></to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c3e202320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c3cf95ca0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c3e202320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c3dad9bc0"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c3e202320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c3d672470"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c3e202320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c3dd89400"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f2c3e038c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f2c3e6f53a0"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f2c3e6f53a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f2c3e2a0140"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f2c3e0376c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c3e204300"/></to>
    </wire>
    <wire loc="48:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2c3e204300"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c3e1fd510"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c3e037dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c3e202320"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f2c3e1fdc20"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f2c3e1fe910"/></to>
    </wire>
    <wire loc="46:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f2c3e1fe910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c3e1de850"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f2c3e1fc380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c3e1ff6d0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f2c3e1fca60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c3dfda2e0"/></to>
    </wire>
    <wire loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2c3e1de850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c3e1c5c00"/></to>
    </wire>
    <wire loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2c3e1d5de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2c3e1c4350"/></to>
    </wire>
    <wire loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2c3e3784c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2c3e1c3680"/></to>
    </wire>
    <wire loc="113:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f2c3e1805a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2c3e0bd6d0"/></to>
    </wire>
    <wire loc="126:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f2c3e16e020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2c3e0b6b30"/></to>
    </wire>
    <wire loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f2c3e177700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2c3e0c3160"/></to>
    </wire>
    <wire loc="149:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f2c3e15ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2c3e09ccb0"/></to>
    </wire>
    <wire loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f2c3e17eaa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2c3e0c4480"/></to>
    </wire>
    <wire loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f2c3e161020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2c3e09c020"/></to>
    </wire>
    <wire loc="170:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f2c3e158a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2c3e085cb0"/></to>
    </wire>
    <wire loc="154:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f2c3e1685a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2c3e096220"/></to>
    </wire>
    <wire loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f2c3e181b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2c3e1139d0"/></to>
    </wire>
    <wire loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f2c3e15da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2c3e0ab2f0"/></to>
    </wire>
    <wire loc="134:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f2c3e1633e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2c3e0ac610"/></to>
    </wire>
    <wire loc="133:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f2c3e16d5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2c3e0ad220"/></to>
    </wire>
    <wire loc="115:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f2c3e176700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2c3e0bb7a0"/></to>
    </wire>
    <wire loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f2c3e15aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2c3e0942f0"/></to>
    </wire>
    <wire loc="140:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f2c3e16cbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2c3e0a66d0"/></to>
    </wire>
    <wire loc="114:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f2c3e17d890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2c3e0bcac0"/></to>
    </wire>
    <wire loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f2c3e191060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c3e121540"/></to>
    </wire>
    <wire loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f2c3e161da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2c3e095610"/></to>
    </wire>
    <wire loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f2c3e1870c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2c3e0c5020"/></to>
    </wire>
    <wire loc="161:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f2c3e167a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2c3e08e6d0"/></to>
    </wire>
    <wire loc="101:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f2c3e1716d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2c3e0cba90"/></to>
    </wire>
    <wire loc="142:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f2c3e15ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2c3e0a47a0"/></to>
    </wire>
    <wire loc="100:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f2c3e179cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2c3e0ccde0"/></to>
    </wire>
    <wire loc="141:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f2c3e1621f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2c3e0a5ac0"/></to>
    </wire>
    <wire loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f2c3e159a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2c3e08c7a0"/></to>
    </wire>
    <wire loc="147:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f2c3e1690c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2c3e09eb30"/></to>
    </wire>
    <wire loc="120:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f2c3e1706c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c3e1193e0"/></to>
    </wire>
    <wire loc="162:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f2c3e160b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2c3e08dac0"/></to>
    </wire>
    <wire loc="128:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f2c3e15ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2c3e0b4cb0"/></to>
    </wire>
    <wire loc="169:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f2c3e15fa20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2c3e085020"/></to>
    </wire>
    <wire loc="127:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f2c3e164570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2c3e0b4020"/></to>
    </wire>
    <wire loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f2c3e165020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2c3e087b30"/></to>
    </wire>
    <wire loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f2c3e11f450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2c3e120d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f2c3e11faa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f2c3e080aa0"/></to>
    </wire>
    <wire loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f2c3e11e120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f2c3e07c260"/></to>
    </wire>
    <wire loc="102:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c3e0ca930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c3e121540"/></to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2c3e0c8020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2c3e120d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c3e0c2020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c3e121540"/></to>
    </wire>
    <wire loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2c3e0c07a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2c3e120d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c3e0ba610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c3e121540"/></to>
    </wire>
    <wire loc="117:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2c3e0b9c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2c3e120d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f2c3e1172f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2c3e118bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f2c3e117940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f2c3e07c9f0"/></to>
    </wire>
    <wire loc="123:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f2c3e116020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f2c3e07b240"/></to>
    </wire>
    <wire loc="129:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c3e0b3b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c3e1193e0"/></to>
    </wire>
    <wire loc="130:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2c3e0b12f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2c3e118bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c3e0aa160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c3e1193e0"/></to>
    </wire>
    <wire loc="137:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2c3e0a97a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2c3e118bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c3e0a3610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c3e1193e0"/></to>
    </wire>
    <wire loc="144:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2c3e0a2c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2c3e118bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c3e09bb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c3e1193e0"/></to>
    </wire>
    <wire loc="151:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2c3e0992f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2c3e118bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c3e093160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c3e1193e0"/></to>
    </wire>
    <wire loc="158:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2c3e0927a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2c3e118bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c3e08b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c3e1193e0"/></to>
    </wire>
    <wire loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2c3e08ac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2c3e118bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2c3e084b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c3e1193e0"/></to>
    </wire>
    <wire loc="172:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2c3e0822f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2c3e118bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f2c3e7644f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c3e29e040"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f2c3e29a490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f2c3e68c3b0"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2c3dfda2e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c3e003470"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f2c3e000060"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f2c3e004af0"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f2c3e004af0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2c3ddc3020"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f2c3dfff340"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f2c3dfddcf0"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f2c3dfddcf0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2c3ddafb90"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f2c3dffa660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f2c3dfdb020"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f2c3dfdb020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2c3ddaa710"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2c3ddb22f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f2c3df839a0"/></to>
    </wire>
    <wire loc="486:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f2c3df839a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de60d10"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2c3ddaede0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f2c3df819a0"/></to>
    </wire>
    <wire loc="487:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f2c3df819a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de5b740"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2c3dda9930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f2c3df7f9a0"/></to>
    </wire>
    <wire loc="488:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f2c3df7f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de56100"/></to>
    </wire>
    <wire loc="442:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f2c3dfc5810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3def9740"/></to>
    </wire>
    <wire loc="455:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f2c3dfb0810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3dec9100"/></to>
    </wire>
    <wire loc="531:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f2c3df67ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3deba100"/></to>
    </wire>
    <wire loc="551:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f2c3df42cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de30740"/></to>
    </wire>
    <wire loc="532:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f2c3df65cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3deb6d10"/></to>
    </wire>
    <wire loc="460:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f2c3dfac810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3debf740"/></to>
    </wire>
    <wire loc="473:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f2c3df989a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de8f460"/></to>
    </wire>
    <wire loc="497:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f2c3df739a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de39100"/></to>
    </wire>
    <wire loc="535:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f2c3df5fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3deac100"/></to>
    </wire>
    <wire loc="545:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f2c3df4ecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de4c740"/></to>
    </wire>
    <wire loc="557:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f2c3df3acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de2a100"/></to>
    </wire>
    <wire loc="445:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f2c3dfbf810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3deeb740"/></to>
    </wire>
    <wire loc="536:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f2c3df5dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3dea8d10"/></to>
    </wire>
    <wire loc="450:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f2c3dfbb810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3dee1d10"/></to>
    </wire>
    <wire loc="463:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f2c3dfa6810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3deb1740"/></to>
    </wire>
    <wire loc="476:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f2c3df929a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de81100"/></to>
    </wire>
    <wire loc="489:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f2c3df7d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de51d10"/></to>
    </wire>
    <wire loc="500:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f2c3df6d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de2a100"/></to>
    </wire>
    <wire loc="440:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f2c3dfc9810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3df02100"/></to>
    </wire>
    <wire loc="453:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f2c3dfb4810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3ded3d80"/></to>
    </wire>
    <wire loc="466:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f2c3dfa0810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3dea3740"/></to>
    </wire>
    <wire loc="530:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f2c3df69cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3deba100"/></to>
    </wire>
    <wire loc="548:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f2c3df48cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de3e740"/></to>
    </wire>
    <wire loc="555:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f2c3df3ccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de2a100"/></to>
    </wire>
    <wire loc="541:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f2c3df54cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de64100"/></to>
    </wire>
    <wire loc="471:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f2c3df9c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de99e60"/></to>
    </wire>
    <wire loc="484:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f2c3df879a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de69740"/></to>
    </wire>
    <wire loc="495:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f2c3df779a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de43d10"/></to>
    </wire>
    <wire loc="549:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f2c3df46cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de39100"/></to>
    </wire>
    <wire loc="538:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f2c3df5acb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de72100"/></to>
    </wire>
    <wire loc="443:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f2c3dfc3810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3def4100"/></to>
    </wire>
    <wire loc="456:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f2c3dfae810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3dec5d10"/></to>
    </wire>
    <wire loc="493:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f2c3df7b9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de4c740"/></to>
    </wire>
    <wire loc="461:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f2c3dfaa810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3deba100"/></to>
    </wire>
    <wire loc="474:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f2c3df969a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de8be00"/></to>
    </wire>
    <wire loc="498:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f2c3df719a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de35d10"/></to>
    </wire>
    <wire loc="540:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f2c3df56cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de69740"/></to>
    </wire>
    <wire loc="438:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f2c3dfcb870"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3df33d10"/></to>
    </wire>
    <wire loc="451:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f2c3dfb8810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3dedc740"/></to>
    </wire>
    <wire loc="464:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f2c3dfa4810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3deac100"/></to>
    </wire>
    <wire loc="477:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f2c3df909a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de7dd10"/></to>
    </wire>
    <wire loc="542:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f2c3df52cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3dea3740"/></to>
    </wire>
    <wire loc="546:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f2c3df4ccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de47100"/></to>
    </wire>
    <wire loc="552:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f2c3df40cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de2a100"/></to>
    </wire>
    <wire loc="482:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f2c3df8c9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de72100"/></to>
    </wire>
    <wire loc="543:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f2c3df50cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de9e100"/></to>
    </wire>
    <wire loc="441:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f2c3dfc7810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3defed10"/></to>
    </wire>
    <wire loc="454:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f2c3dfb2810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3dece740"/></to>
    </wire>
    <wire loc="467:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f2c3df9e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de9e100"/></to>
    </wire>
    <wire loc="539:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f2c3df58cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de6ed10"/></to>
    </wire>
    <wire loc="550:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f2c3df44cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de35d10"/></to>
    </wire>
    <wire loc="472:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f2c3df9a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de949f0"/></to>
    </wire>
    <wire loc="485:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f2c3df859a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de64100"/></to>
    </wire>
    <wire loc="496:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f2c3df759a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de3e740"/></to>
    </wire>
    <wire loc="444:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f2c3dfc1810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3def0d10"/></to>
    </wire>
    <wire loc="494:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f2c3df799a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de47100"/></to>
    </wire>
    <wire loc="449:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f2c3dfbd810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3dee6100"/></to>
    </wire>
    <wire loc="462:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f2c3dfa8810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3deb6d10"/></to>
    </wire>
    <wire loc="475:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f2c3df949a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de86740"/></to>
    </wire>
    <wire loc="499:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f2c3df6f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de30740"/></to>
    </wire>
    <wire loc="439:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f2c3dfd5810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3df07740"/></to>
    </wire>
    <wire loc="452:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f2c3dfb6810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3ded7100"/></to>
    </wire>
    <wire loc="465:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f2c3dfa2810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3dea8d10"/></to>
    </wire>
    <wire loc="478:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f2c3df8e9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de78740"/></to>
    </wire>
    <wire loc="534:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f2c3df61ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3deb1740"/></to>
    </wire>
    <wire loc="547:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f2c3df4acb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de43d10"/></to>
    </wire>
    <wire loc="533:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f2c3df63cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3deb1740"/></to>
    </wire>
    <wire loc="483:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f2c3df899a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de6ed10"/></to>
    </wire>
    <wire loc="554:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f2c3df3ecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de30740"/></to>
    </wire>
    <wire loc="558:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f2c3df38cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3de51d10"/></to>
    </wire>
    <wire loc="529:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f2c3df6b9f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2c3debf740"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f2c3dd91610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2c3dd881d0"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f2c3dd881d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c3dc11150"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2c3dd89400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c3dc8c020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f2c3dd7fa80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f2c3dc02790"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2c3dc8c020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c3d170380"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f2c3dc0b640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2c3dc602f0"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2c3dc5b850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2c3dc8c870"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2c3dc8c870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2c3d16a020"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2c3dbf8a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2c3dd05900"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2c3dd05900"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2c3dce8cf0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2c3d170380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c3d155a30"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f2c3d164780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2c3d170bd0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2c3d170bd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2c3d154340"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2c3d1663d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2c3dd05900"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2c3d1504c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2c3d15a7b0"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2c3d15a7b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2c3dd5f8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2c3d14fa90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2c3d159da0"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2c3d159da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2c3dd5d560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2c3d14eda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f2c3d1570c0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2c3d1570c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f2c3dd5a020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2c3dd5f8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2c3e1706c0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2c3dd5d560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f2c3e16e020"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2c3dd5a020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f2c3e164570"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2c3dd5f8b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2c3e1706c0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2c3dd5d560"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f2c3e16cbe0"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2c3dd5a020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f2c3e1621f0"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2c3dd5f8b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2c3e1706c0"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2c3dd5d560"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f2c3e1690c0"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2c3dd5a020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f2c3e161020"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2c3dd5f8b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2c3e1706c0"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2c3dd5d560"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f2c3e1685a0"/></to>
    </wire>
    <wire loc="76:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2c3dd5a020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f2c3e161da0"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2c3dd5f8b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2c3e1706c0"/></to>
    </wire>
    <wire loc="79:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2c3dd5d560"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f2c3e167a50"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2c3dd5a020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f2c3e160b80"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2c3dd5f8b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2c3e1706c0"/></to>
    </wire>
    <wire loc="83:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2c3dd5d560"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f2c3e165020"/></to>
    </wire>
    <wire loc="84:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2c3dd5a020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f2c3e15fa20"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f2c3dcca0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f2c3dd03990"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f2c3dd03990"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2c3dcfcb80"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2c3dceec50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2c3e1706c0"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f2c3dc579c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c3e7644f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f2c3dc06a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c3e7644f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f2c3d6715a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f2c3d69c720"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c3d66a020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c3d6a3020"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c3d6a3020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c3d0bd390"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c3d66ac70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c3d6a3c30"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c3d6a3c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c3db3e7e0"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f2c3d64d7e0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f2c3d66fc90"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c3db3e7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c3dadd400"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c3d6a28b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c3db3d470"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c3db3d470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c3dae0cb0"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f2c3d6a0020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c3db3ab20"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c3db3ab20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c3dadc060"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c3d0bc060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c3db9bcf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c3d0bcc70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c3db3d470"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c3db9bcf0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c3db4e580"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c3db4d400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c3db443f0"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2c3db443f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2c3db347d0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2c3db4c060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2c3db3d470"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2c3db4b720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2c3db3e7e0"/></to>
    </wire>
    <wire loc="169:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f2c3db4a480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c3e7644f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f2c3db4ac60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c3e7644f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2c3db3f3b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2c3dad62f0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2c3dad62f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2c3dac6450"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c3db3e1d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c3dae06c0"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2c3dad9bc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2c3dac7d60"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2c3dad3940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2c3db38620"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2c3dadc9f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c3dad5e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2c3dadb760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c3dad5320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f2c3dad3020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f2c3d6bb8d0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2c3dad5e10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2c3d993830"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2c3dad5320"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2c3d993110"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f2c3d992760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f2c3dad3020"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2c3dabedc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2c3dad3940"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2c3d990590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2c3dad3940"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2c3d987cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2c3dad3940"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f2c3d9910e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f2c3dabcad0"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f2c3d9919d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f2c3dabf4a0"/></to>
    </wire>
    <wire loc="77:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f2c3dab6e30"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f2c3d98bb70"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f2c3dab1e00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2c3d961080"/></to>
    </wire>
    <wire loc="17:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f2c3d961080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2c3d6cd0c0"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f2c3d97cd20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f2c3d961890"/></to>
    </wire>
    <wire loc="13:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f2c3d961890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f2c3d6d3440"/></to>
    </wire>
    <wire loc="332:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f2c3da5ee40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c3e7644f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f2c3da96d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c3e7644f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f2c3da61400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c3e7644f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f2c3da5a0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c3e7644f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f2c3d98fc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c3e7644f0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f2c3d98e480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c3e7644f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f2c3d95f020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f2c3d6d2440"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f2c3d6d2440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f2c3d8f4210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f2c3d6d3440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f2c3d8f8b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2c3d6d1020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2c3d6cd920"/></to>
    </wire>
    <wire loc="19:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2c3d6cc020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c3d6d5020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2c3d6d5020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c3d8fb320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c3d6d5c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c3cfffa90"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c3cfffa90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c3d79cd50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2c3d8f2600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2c3d6d1020"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c3cff8be0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c3d8f6dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f2c3d8f3370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c3d000e00"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2c3d000e00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c3d79da60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2c3d8eebe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2c3cff8440"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2c3cff8440"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f2c3d7a2ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c3d8f6dd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c3d869e70"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f2c3d8f4210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f2c3d866890"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f2c3d8f8b50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f2c3d868790"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2c3d8fb320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c3d8690d0"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2c3d8643e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2c3d8f2600"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f2c3d8655b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f2c3d8f3370"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2c3d85f5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2c3d8eebe0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f2c3d864a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2c3d851550"/></to>
    </wire>
    <wire loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2c3d851550"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f2c3d847cc0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2c3d85e020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2c3d7ba110"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2c3d7ba110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f2c3dd03990"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2c3d85c120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2c3e007020"/></to>
    </wire>
    <wire loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2c3d84b080"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f2c3d842910"/></to>
    </wire>
    <wire loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c3d84fca0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c3d847410"/></to>
    </wire>
    <wire loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f2c3d841210"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f2c3df58cc0"/></to>
    </wire>
    <wire loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f2c3d83f1f0"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f2c3df56cc0"/></to>
    </wire>
    <wire loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f2c3d83d1f0"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f2c3df54cc0"/></to>
    </wire>
    <wire loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f2c3d83b1f0"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f2c3df50cc0"/></to>
    </wire>
    <wire loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f2c3d8391f0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f2c3df52cc0"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2c3cffea50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2c3d851550"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c3cffe2b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c3d79b590"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c3d79b590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c3d708060"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c3d79a370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c3cff8be0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c3d79cd50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c3d70abf0"/></to>
    </wire>
    <wire loc="106:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c3d70abf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c3cf903a0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f2c3d7a2ce0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f2c3d7975c0"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2c3d79da60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c3d70ce60"/></to>
    </wire>
    <wire loc="105:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2c3d70ce60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2c3cf91540"/></to>
    </wire>
    <wire loc="108:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c3d708060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c3cf8f8b0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f2c3d785690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2c3d84b080"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c3d708930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c3d79a370"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c3d7844b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c3d708060"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c3d6ee9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c3d709400"/></to>
    </wire>
    <wire loc="107:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c3d709400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c3cf90b20"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c3d703b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c3d84fca0"/></to>
    </wire>
    <wire loc="109:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c3cf8e210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c3d708930"/></to>
    </wire>
    <wire loc="111:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f2c3cf8e9d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f2c3cf93330"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f2c3cf8cc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c3e7644f0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c3cf5b3a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c3d703b20"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f2c3cf5bb00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f2c3d6ee400"/></to>
    </wire>
    <wire loc="84:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c3cf5a0f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c3d6ee9d0"/></to>
    </wire>
    <wire loc="85:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c3cf5ad00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c3d6ed720"/></to>
    </wire>
    <wire loc="114:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f2c3d664020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2c3e7644f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f2c3d646300"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f2c3d64d7e0"/></to>
    </wire>
    <wire loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f2c3d63e0f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f2c3e206df0"/></to>
    </wire>
    <wire loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f2c3d63e810"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2c3db3f3b0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/jyxk/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/jyxk/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/jyxk/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BlinkC" loc="51:BlinkC.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/jyxk/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e02b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2c3e02b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e02b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2c3e02b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e02b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2c3e02b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e02b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2c3e02b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2c3e21d550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/jyxk/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f2c3e153890" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f2c3e153c30" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f2c3e152020" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f2c3e1523a0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f2c3e152720" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f2c3e152a90" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f2c3e152e20" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f2c3e150200" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f2c3e1505d0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f2c3e115e80" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f2c3e112270" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f2c3df321d0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f2c3df32580" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f2c3df32930" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f2c3df32ce0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f2c3df300d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f2c3dd40cc0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f2c3dd40cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f2c3dcfda40" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f2c3dcfda40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f2c3dce7570" loc="55:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f2c3dce7570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f2c3dce7d40" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f2c3dce7d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f2c3dce6160" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f2c3dce6160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f2c3dce6940" loc="58:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f2c3dce6940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f2c3dce6d10" loc="59:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f2c3dce5540" loc="60:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f2c3dce5540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f2c3dcc66e0" loc="52:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f2c3dcc66e0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f2c3dcc3020" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f2c3dcc3020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f2c3dcc3410" loc="54:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f2c3dcc3410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f2c3dcc3bf0" loc="55:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f2c3dcc3bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f2c3dcc2020" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2c3dc87cd0" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2c3dc87cd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2c3dc52230" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2c3dc52230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f2c3dc52560" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2c3dc03de0" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2c3dc03de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f2c3dbe7480" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2c3e21d550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f2c3dbb70d0" loc="43:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2c3e21d550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f2c3db930d0" loc="45:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f2c3d77e020" loc="89:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f2c3d7720d0" loc="42:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f2c3d757800" loc="52:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/jyxk/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f2c3d69e4a0" loc="42:/home/jyxk/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f2c3d69e4a0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f2c3d69e820" loc="42:/home/jyxk/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f2c3e202320" loc="58:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c3e202320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3e2026a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f2c3e206df0" loc="57:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f2c3e206df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2c3e2051c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c3e204300" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2c3e204300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3e204680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f2c3e1fc380" loc="6:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f2c3e1fc380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3e1fc700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c3e1fd510" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2c3e1fd510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3e1fd890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f2c3e1fdc20" loc="5:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f2c3e1fdc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3e1fc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f2c3e1fca60" loc="7:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f2c3e1fca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3e1fcde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c3e1ff6d0" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2c3e1ff6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3e1ffa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f2c3e1fe910" loc="39:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f2c3e1fe910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3e1fec90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f2c3e1d5de0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2c3e1d5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f2c3e1dac70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f2c3e1da310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f2c3e1da4a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f2c3e1da630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f2c3e1da180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f2c3e1da7c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f2c3e1da950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f2c3e1daae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c3e1de850" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2c3e1de850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3e1debd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f2c3e1c4350" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2c3e1c4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f2c3e1c3340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f2c3e1c4860"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f2c3e1c49f0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f2c3e1c4b80"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f2c3e1c46d0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f2c3e1c4d10"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f2c3e1c3020"/>
        <function-ref name="initClocks" scoped="" ref="0x7f2c3e1c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f2c3e1c3680" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2c3e1c3680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f2c3e1c3a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c3e1c5c00" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2c3e1c5c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3e1c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f2c3e1805a0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f2c3e1805a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e180920"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e180ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e180c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e180dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e17f020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e17f1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e17f340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e17f4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e17f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f2c3e16e020" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f2c3e16e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e16e3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e16e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e16e6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e16e850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e16e9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e16eb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e16ed00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e16d020"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e16d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f2c3e177700" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f2c3e177700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e177a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e177c10"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e177da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e176020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e1761b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e176340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f2c3e15ba20" loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f2c3e15ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e15bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e15a020"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e15a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e15a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e15a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e15a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f2c3e17eaa0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f2c3e17eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e17ee20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e17d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e17d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e17d340"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e17d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f2c3e161020" loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f2c3e161020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e1613a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e161530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e1616c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e161850"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e1619e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f2c3e158a20" loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f2c3e158a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e158da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e157020"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e1571b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e157340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e1574d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e157660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f2c3e1685a0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f2c3e1685a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e168920"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e168ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e168c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e168dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e167020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e1671b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e167340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e1674d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e167660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f2c3e181b10" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f2c3e181b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e188020"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e1881b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e188340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e1884d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e188660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e1887f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e188980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e188b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e188ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f2c3e15da20" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f2c3e15da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e15dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e15c020"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e15c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e15c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e15c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e15c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f2c3e1633e0" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f2c3e1633e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e163760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e1638f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e163a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e163c10"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e163da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f2c3e16d5a0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f2c3e16d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e16da20"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e16dbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e16dd40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e16c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e16c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e16c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e16c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e16c660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e16c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f2c3e176700" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f2c3e176700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e176a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e176c10"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e176da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e170020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e1701b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e170340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f2c3e15aa20" loc="69:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f2c3e15aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e15ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e159020"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e1591b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e159340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e1594d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e159660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f2c3e16cbe0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f2c3e16cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e16b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e16b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e16b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e16b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e16b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e16b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e16b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e16bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e16bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f2c3e17d890" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f2c3e17d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e17dc10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e17dda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e178020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e1781b0"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e178340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f2c3e191060" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f2c3e191060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3e1913e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3e191570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e191700"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e191890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e191a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e191bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3e191d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e190020"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3e1901b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3e190340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3e1904d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f2c3e161da0" loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f2c3e161da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e160180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e160310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e1604a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e160630"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e1607c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f2c3e1870c0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f2c3e1870c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e187440"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e1875d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e187760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e1878f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e187a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e187c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e187da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e180020"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e1801b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f2c3e167a50" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f2c3e167a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e167dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e166020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e1661b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e166340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e1664d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e166660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e1667f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e166980"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e166b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f2c3e1716d0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f2c3e1716d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e171a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e171be0"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e171d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e177020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e1771b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e177340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f2c3e15ca20" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f2c3e15ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e15cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e15b020"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e15b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e15b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e15b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e15b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f2c3e179cf0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f2c3e179cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e17e0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e17e230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e17e3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e17e550"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e17e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f2c3e1621f0" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f2c3e1621f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e162570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e162700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e162890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e162a20"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e162bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f2c3e159a20" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f2c3e159a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e159da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e158020"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e1581b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e158340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e1584d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e158660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f2c3e1690c0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f2c3e1690c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e169440"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e1695d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e169760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e1698f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e169a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e169c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e169da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e168020"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e1681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f2c3e1706c0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f2c3e1706c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3e170a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3e170bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e170d60"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e16f020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e16f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e16f340"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3e16f4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e16f660"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3e16f7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3e16f980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3e16fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f2c3e160b80" loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f2c3e160b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e15f020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e15f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e15f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e15f4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e15f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f2c3e15ea20" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f2c3e15ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e15eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e15d020"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e15d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e15d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e15d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e15d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f2c3e15fa20" loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f2c3e15fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e15e020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e15e1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e15e340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e15e4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e15e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f2c3e164570" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f2c3e164570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e1648f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e164a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e164c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e164da0"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e163020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f2c3e165020" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f2c3e165020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e1653a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e165530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e1656c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e165850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e1659e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e165b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e165d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e164020"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e1641b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f2c3e11faa0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f2c3e11faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e11fe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f2c3e11f450" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f2c3e11f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e11f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f2c3e11e120" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f2c3e11e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e11e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f2c3e120d80" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2c3e120d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e11f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c3e121540" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2c3e121540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3e1218c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3e121a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e121be0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e121d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e120020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e1201b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3e120340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e1204d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3e120660"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3e1207f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3e120980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f2c3e117940" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f2c3e117940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e117cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f2c3e1172f0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f2c3e1172f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e117670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f2c3e116020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f2c3e116020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e1163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f2c3e118bf0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2c3e118bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e117020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c3e1193e0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2c3e1193e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3e119760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3e1198f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e119a80"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e119c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e119da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e118020"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3e1181b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e118340"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3e1184d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3e118660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3e1187f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2c3e0cba90" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2c3e0cba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e0cbe10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e0ca020"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e0ca1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e0ca340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e0ca4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e0ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2c3e1139d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2c3e1139d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e113d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e0cc020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e0cc1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e0cc340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e0cc4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e0cc660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e0cc7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e0cc980"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e0ccb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2c3e0c8020" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2c3e0c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e0c83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2c3e0ccde0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2c3e0ccde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e0cb180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e0cb310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e0cb4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e0cb630"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e0cb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2c3e0ca930" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2c3e0ca930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3e0cacb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3e0cae40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e0c9020"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e0c91b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e0c9340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e0c94d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3e0c9660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e0c97f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3e0c9980"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3e0c9b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3e0c9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2c3e0c3160" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2c3e0c3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e0c34e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e0c3670"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e0c3800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e0c3990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e0c3b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e0c3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2c3e0c5020" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2c3e0c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e0c53a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e0c5530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e0c56c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e0c5850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e0c59e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e0c5b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e0c5d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e0c4020"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e0c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2c3e0c07a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2c3e0c07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e0c0b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2c3e0c4480" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2c3e0c4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e0c4800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e0c4990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e0c4b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e0c4cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e0c4e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2c3e0c2020" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2c3e0c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3e0c23a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3e0c2530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e0c26c0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e0c2850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e0c29e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e0c2b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3e0c2d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e0c0020"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3e0c01b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3e0c0340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3e0c04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2c3e0bb7a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2c3e0bb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e0bbb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e0bbcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e0bbe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e0ba020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e0ba1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e0ba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2c3e0bd6d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2c3e0bd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e0bda50"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e0bdbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e0bdd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e0bc020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e0bc1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e0bc340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e0bc4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e0bc660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e0bc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2c3e0b9c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2c3e0b9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e0b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2c3e0bcac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2c3e0bcac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e0bce40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e0bb020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e0bb1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e0bb340"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e0bb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2c3e0ba610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2c3e0ba610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3e0ba990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3e0bab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e0bacb0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e0bae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e0b9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e0b91b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3e0b9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e0b94d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3e0b9660"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3e0b97f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3e0b9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2c3e0b4cb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2c3e0b4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e0b30a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e0b3230"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e0b33c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e0b3550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e0b36e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e0b3870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2c3e0b6b30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2c3e0b6b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e0b5020"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e0b51b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e0b5340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e0b54d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e0b5660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e0b57f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e0b5980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e0b5b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e0b5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2c3e0b12f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2c3e0b12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e0b1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2c3e0b4020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2c3e0b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e0b43a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e0b4530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e0b46c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e0b4850"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e0b49e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2c3e0b3b40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2c3e0b3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3e0b2020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3e0b21b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e0b2340"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e0b24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e0b2660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e0b27f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3e0b2980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e0b2b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3e0b2ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3e0b2e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3e0b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2c3e0ab2f0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2c3e0ab2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e0ab670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e0ab800"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e0ab990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e0abb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e0abcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e0abe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2c3e0ad220" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2c3e0ad220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e0ad5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e0ad730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e0ad8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e0ada50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e0adbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e0add70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e0ac020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e0ac1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e0ac340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2c3e0a97a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2c3e0a97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e0a9b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2c3e0ac610" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2c3e0ac610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e0ac990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e0acb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e0accb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e0ace40"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e0ab020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2c3e0aa160" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2c3e0aa160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3e0aa4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3e0aa670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e0aa800"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e0aa990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e0aab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e0aacb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3e0aae40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e0a9020"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3e0a91b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3e0a9340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3e0a94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2c3e0a47a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2c3e0a47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e0a4b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e0a4cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e0a4e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e0a3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e0a31b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e0a3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2c3e0a66d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2c3e0a66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e0a6a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e0a6be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e0a6d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e0a5020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e0a51b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e0a5340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e0a54d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e0a5660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e0a57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2c3e0a2c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2c3e0a2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e0a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2c3e0a5ac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2c3e0a5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e0a5e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e0a4020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e0a41b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e0a4340"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e0a44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2c3e0a3610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2c3e0a3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3e0a3990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3e0a3b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e0a3cb0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e0a3e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e0a2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e0a21b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3e0a2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e0a24d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3e0a2660"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3e0a27f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3e0a2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2c3e09ccb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2c3e09ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e09b0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e09b230"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e09b3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e09b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e09b6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e09b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2c3e09eb30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2c3e09eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e09d020"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e09d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e09d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e09d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e09d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e09d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e09d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e09db10"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e09dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2c3e0992f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2c3e0992f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e099670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2c3e09c020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2c3e09c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e09c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e09c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e09c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e09c850"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e09c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2c3e09bb40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2c3e09bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3e09a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3e09a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e09a340"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e09a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e09a660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e09a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3e09a980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e09ab10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3e09aca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3e09ae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3e099020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2c3e0942f0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2c3e0942f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e094670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e094800"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e094990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e094b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e094cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e094e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2c3e096220" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2c3e096220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e0965a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e096730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e0968c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e096a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e096be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e096d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e095020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e0951b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e095340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2c3e0927a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2c3e0927a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e092b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2c3e095610" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2c3e095610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e095990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e095b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e095cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e095e40"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e094020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2c3e093160" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2c3e093160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3e0934e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3e093670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e093800"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e093990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e093b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e093cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3e093e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e092020"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3e0921b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3e092340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3e0924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2c3e08c7a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2c3e08c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e08cb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e08ccb0"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e08ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e08b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e08b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e08b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2c3e08e6d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2c3e08e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e08ea50"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e08ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e08ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e08d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e08d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e08d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e08d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e08d660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e08d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2c3e08ac50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2c3e08ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e089020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2c3e08dac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2c3e08dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e08de40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e08c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e08c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e08c340"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e08c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2c3e08b610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2c3e08b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3e08b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3e08bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e08bcb0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e08be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e08a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e08a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3e08a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e08a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3e08a660"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3e08a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3e08a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2c3e085cb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2c3e085cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e0840a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2c3e084230"/>
        <function-ref name="captured" scoped="" ref="0x7f2c3e0843c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e084550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e0846e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2c3e084870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2c3e087b30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2c3e087b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3e086020"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3e0861b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e086340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3e0864d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3e086660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e0867f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3e086980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3e086b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3e086ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2c3e0822f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2c3e0822f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e082670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2c3e085020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2c3e085020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3e0853a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3e085530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3e0856c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3e085850"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e0859e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2c3e084b40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2c3e084b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3e083020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3e0831b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3e083340"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e0834d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3e083660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3e0837f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3e083980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3e083b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3e083ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3e083e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3e082020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f2c3e07b240" loc="7:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f2c3e07b240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e07b5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f2c3e080aa0" loc="4:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f2c3e080aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e080e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f2c3e07c260" loc="5:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f2c3e07c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e07c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f2c3e07c9f0" loc="6:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f2c3e07c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3e07cd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f2c3e3784c0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2c3e3784c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f2c3e378840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f2c3e68c3b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f2c3e68c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f2c3e68c730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f2c3e68c8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f2c3e68ca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f2c3e4b4be0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f2c3e4b4be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f2c3e5f0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f2c3e1dcb50" loc="39:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2c3e1dcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f2c3e044b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f2c3e0441b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f2c3e044340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f2c3e0444d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f2c3e044020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f2c3e044660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f2c3e0447f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f2c3e044980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f2c3e037dc0" loc="60:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f2c3e037dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3e036180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f2c3e038590" loc="57:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f2c3e038590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2c3e038910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f2c3e0376c0" loc="59:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f2c3e0376c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3e037a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f2c3e038c00" loc="58:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f2c3e038c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3e037020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f2c3e0371b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f2c3e037340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f2c3e7644f0" loc="48:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f2c3e7644f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c3e764870"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c3e764a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f2c3e6f53a0" loc="47:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f2c3e6f53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3e6f5720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f2c3e6f58b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f2c3e6f5a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f2c3e29e040" loc="56:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f2c3e29e040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c3e29e3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c3e29e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f2c3e29a490" loc="57:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f2c3e29a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f2c3e29a810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f2c3e29a9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f2c3e29ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f2c3e2a0140" loc="55:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f2c3e2a0140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3e2a04c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f2c3e2a0650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f2c3e2a07e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x7f2c3e01e7f0" loc="52:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer0" scoped="" ref="0x7f2c3e01e7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c3e01ccf0"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3e028300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c3e01c0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c3e028c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c3e01b660"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c3e01b1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c3e028780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c3e029480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c3e01c6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c3e029950"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3e029e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f2c3e019020" loc="54:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f2c3e019020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2c3e0193a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c3e00f8d0" loc="53:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2c3e00f8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c3e00fc50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c3e00fde0"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c3e01a020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c3e01a1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c3e01a340"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e01a4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c3e01a660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c3e01aca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3e01a7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c3e01a980"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c3e01ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f2c3e007020" loc="46:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2c3e007020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c3e0073a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c3e007530"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c3e0076c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c3e007850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c3e0079e0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e007b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c3e007d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c3e0064d0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3e006020"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c3e0061b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c3e006340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f2c3e000060" loc="50:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f2c3e000060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3e0003e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3e000570"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3e000700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3e000890"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e000a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3e000bb0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3e000d40"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c3e003470" loc="46:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2c3e003470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3e0037f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f2c3dfff340" loc="51:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f2c3dfff340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfff6c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfff850"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfff9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfffb70"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfffd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dffa020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dffa1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dffa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f2c3e003a70" loc="47:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2c3e003a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c3e003df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c3e002020"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c3e0021b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c3e002340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c3e0024d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3e002660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c3e0027f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c3e002e30"/>
        <function-ref name="set" scoped="" ref="0x7f2c3e002980"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c3e002b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c3e002ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f2c3dffa660" loc="52:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f2c3dffa660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dffa9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dffab70"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dffad00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dff9020"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dff91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dff9340"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dff94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dff9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f2c3e004af0" loc="41:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f2c3e004af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3e004e70"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfdd030"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfdd1c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfdd350"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfdd4e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfdd670"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfdd800"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfdd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f2c3dfddcf0" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f2c3dfddcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfdc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfdc230"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfdc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfdc550"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfdc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfdc870"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfdca00"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfdcb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f2c3dfda2e0" loc="44:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2c3dfda2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3dfda660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f2c3dfdb020" loc="43:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f2c3dfdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfdb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfdb530"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfdb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfdb850"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfdb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfdbb70"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfdbd00"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfda020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f2c3dfc5810" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f2c3dfc5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfc5b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfc5d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfc4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfc41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfc4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfc44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfc4660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfc47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfc4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfc4b10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfc4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfc4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfc3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfc32b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfc3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f2c3dfb0810" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f2c3dfb0810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfb0b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfb0d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfaf020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfaf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfaf340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfaf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfaf660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfaf7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfaf980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfafb10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfafca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfafe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfae020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfae2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfae440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f2c3df67ca0" loc="145:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f2c3df67ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df660a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df66230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df663c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df66550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df666e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df66870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df66a00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df66b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df66d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df65020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df651b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df65340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df654d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df65760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df658f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f2c3df42cb0" loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f2c3df42cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df410a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df41230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df413c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df41550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df416e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df41870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df41a00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df41b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df41d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df40020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df401b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df40340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df404d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df40760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df408f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f2c3df65cc0" loc="146:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f2c3df65cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df640a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df64230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df643c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df64550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df646e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df64870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df64a00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df64b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df64d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df63020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df631b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df63340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df634d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df63760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df638f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f2c3dfac810" loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f2c3dfac810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfacb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfacd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfab020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfab1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfab340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfab4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfab660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfab7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfab980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfabb10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfabca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfabe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfaa020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfaa2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfaa440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f2c3df989a0" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f2c3df989a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df98d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df97020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df971b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df97340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df974d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df97660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df977f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df97980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df97b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df97ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df97e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df96020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df961b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df96440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df965d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f2c3df839a0" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f2c3df839a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df83d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df82020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df821b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df82340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df824d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df82660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df827f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df82980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df82b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df82ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df82e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df81020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df811b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df81440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df815d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f2c3df739a0" loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f2c3df739a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df73d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df72020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df721b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df72340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df724d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df72660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df727f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df72980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df72b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df72ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df72e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df71020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df711b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df71440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df715d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f2c3df5fcc0" loc="149:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f2c3df5fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df5e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df5e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df5e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df5e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df5e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df5e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df5ea00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df5eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df5ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df5d020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df5d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df5d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df5d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df5d760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df5d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f2c3df4ecb0" loc="159:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f2c3df4ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df4d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df4d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df4d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df4d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df4d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df4d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df4da00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df4db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df4dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df4c020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df4c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df4c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df4c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df4c760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df4c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f2c3df3acc0" loc="171:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f2c3df3acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df390a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df39230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df393c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df39550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df396e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df39870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df39a00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df39b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df39d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df38020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df381b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df38340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df384d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df38760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df388f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f2c3dfbf810" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f2c3dfbf810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfbfb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfbfd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfbe020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfbe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfbe340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfbe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfbe660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfbe7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfbe980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfbeb10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfbeca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfbee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfbd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfbd2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfbd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f2c3df5dcc0" loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f2c3df5dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df5b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df5b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df5b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df5b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df5b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df5b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df5ba00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df5bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df5bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df5a020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df5a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df5a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df5a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df5a760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df5a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f2c3dfbb810" loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f2c3dfbb810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfbbb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfbbd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfb9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfb91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfb9340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfb94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfb9660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfb97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfb9980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfb9b10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfb9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfb9e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfb8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfb82b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfb8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f2c3dfa6810" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f2c3dfa6810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfa6b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfa6d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfa5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfa51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfa5340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfa54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfa5660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfa57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfa5980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfa5b10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfa5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfa5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfa4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfa42b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfa4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f2c3df929a0" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f2c3df929a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df92d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df91020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df911b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df91340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df914d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df91660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df917f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df91980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df91b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df91ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df91e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df90020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df901b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df90440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df905d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f2c3df7d9a0" loc="100:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f2c3df7d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df7dd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df7c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df7c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df7c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df7c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df7c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df7c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df7c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df7cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df7cca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df7ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df7b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df7b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df7b440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df7b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f2c3df6d9a0" loc="111:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f2c3df6d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df6dd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df6c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df6c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df6c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df6c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df6c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df6c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df6c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df6cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df6cca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df6ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df6b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df6b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df6b440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df6b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f2c3dfc9810" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f2c3dfc9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfc9b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfc9d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfc8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfc81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfc8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfc84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfc8660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfc87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfc8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfc8b10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfc8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfc8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfc7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfc72b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfc7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f2c3dfb4810" loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f2c3dfb4810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfb4c90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfb4e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfb3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfb31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfb3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfb34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfb3660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfb37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfb3980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfb3b10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfb3ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfb3e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfb2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfb22b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfb2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f2c3dfa0810" loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f2c3dfa0810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfa0b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfa0d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df9f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df9f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df9f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df9f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df9f660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df9f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df9f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df9fb10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df9fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df9fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df9e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df9e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df9e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f2c3df69cc0" loc="144:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f2c3df69cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df680a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df68230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df683c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df68550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df686e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df68870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df68a00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df68b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df68d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df67020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df671b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df67340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df674d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df67760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df678f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f2c3df48cb0" loc="162:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f2c3df48cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df470a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df47230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df473c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df47550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df476e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df47870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df47a00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df47b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df47d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df46020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df461b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df46340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df464d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df46760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df468f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f2c3df3ccb0" loc="169:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f2c3df3ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df3b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df3b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df3b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df3b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df3b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df3b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df3ba00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df3bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df3bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df3a020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df3a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df3a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df3a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df3a760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df3a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f2c3df54cc0" loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f2c3df54cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df530a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df53230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df533c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df53550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df536e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df53870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df53a00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df53b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df53d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df52020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df521b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df52340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df524d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df52760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df528f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f2c3df9c810" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f2c3df9c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df9cd90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df9b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df9b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df9b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df9b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df9b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df9b7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df9b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df9bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df9bca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df9be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df9a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df9a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df9a440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df9a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f2c3df879a0" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f2c3df879a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df87d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df86020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df861b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df86340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df864d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df86660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df867f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df86980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df86b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df86ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df86e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df85020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df851b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df85440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df855d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f2c3df779a0" loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f2c3df779a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df77d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df76020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df761b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df76340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df764d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df76660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df767f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df76980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df76b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df76ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df76e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df75020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df751b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df75440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df755d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f2c3df46cb0" loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f2c3df46cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df450a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df45230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df453c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df45550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df456e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df45870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df45a00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df45b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df45d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df44020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df441b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df44340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df444d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df44760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df448f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f2c3df5acb0" loc="152:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f2c3df5acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df590a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df59230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df593c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df59550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df596e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df59870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df59a00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df59b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df59d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df58020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df581b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df58340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df584d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df58760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df588f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f2c3dfc3810" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f2c3dfc3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfc3b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfc3d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfc2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfc21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfc2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfc24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfc2660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfc27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfc2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfc2b10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfc2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfc2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfc1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfc12b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfc1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f2c3dfae810" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f2c3dfae810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfaeb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfaed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfad020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfad1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfad340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfad4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfad660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfad7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfad980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfadb10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfadca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfade30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfac020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfac2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfac440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f2c3df7b9a0" loc="104:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f2c3df7b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df7bd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df7a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df7a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df7a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df7a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df7a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df7a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df7a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df7ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df7aca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df7ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df79020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df791b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df79440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df795d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f2c3dfaa810" loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f2c3dfaa810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfaab90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfaad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfa9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfa91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfa9340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfa94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfa9660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfa97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfa9980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfa9b10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfa9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfa9e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfa8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfa82b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfa8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f2c3df969a0" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f2c3df969a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df96d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df95020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df951b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df95340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df954d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df95660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df957f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df95980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df95b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df95ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df95e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df94020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df941b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df94440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df945d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f2c3df819a0" loc="98:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f2c3df819a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df81d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df80020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df801b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df80340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df804d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df80660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df807f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df80980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df80b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df80ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df80e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df7f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df7f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df7f440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df7f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f2c3df719a0" loc="109:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f2c3df719a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df71d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df70020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df701b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df70340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df704d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df70660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df707f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df70980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df70b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df70ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df70e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df6f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df6f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df6f440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df6f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f2c3df56cc0" loc="154:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f2c3df56cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df550a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df55230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df553c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df55550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df556e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df55870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df55a00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df55b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df55d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df54020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df541b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df54340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df544d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df54760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df548f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f2c3dfcb870" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f2c3dfcb870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfcbbf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfcbd80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfd6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfd61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfd6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfd64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfd6660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfd67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfd6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfd6b10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfd6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfd6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfd5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfd52b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfd5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f2c3dfb8810" loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f2c3dfb8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfb8b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfb8d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfb7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfb71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfb7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfb74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfb7660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfb77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfb7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfb7b10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfb7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfb7e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfb6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfb62b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfb6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f2c3dfa4810" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f2c3dfa4810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfa4b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfa4d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfa3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfa31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfa3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfa34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfa3660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfa37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfa3980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfa3b10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfa3ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfa3e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfa2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfa22b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfa2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f2c3df909a0" loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f2c3df909a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df90d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df8f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df8f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df8f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df8f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df8f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df8f7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df8f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df8fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df8fca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df8fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df8e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df8e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df8e440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df8e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f2c3df52cc0" loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f2c3df52cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df510a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df51230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df513c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df51550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df516e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df51870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df51a00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df51b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df51d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df50020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df501b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df50340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df504d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df50760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df508f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f2c3df4ccb0" loc="160:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f2c3df4ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df4b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df4b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df4b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df4b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df4b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df4b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df4ba00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df4bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df4bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df4a020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df4a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df4a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df4a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df4a760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df4a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f2c3df40cb0" loc="166:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f2c3df40cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df3f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df3f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df3f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df3f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df3f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df3f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df3fa00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df3fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df3fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df3e020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df3e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df3e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df3e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df3e760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df3e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f2c3df8c9a0" loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f2c3df8c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df8cd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df8a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df8a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df8a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df8a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df8a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df8a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df8a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df8ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df8aca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df8ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df89020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df891b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df89440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df895d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f2c3df50cc0" loc="157:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f2c3df50cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df4f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df4f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df4f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df4f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df4f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df4f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df4fa00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df4fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df4fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df4e020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df4e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df4e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df4e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df4e760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df4e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f2c3dfc7810" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f2c3dfc7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfc7b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfc7d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfc6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfc61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfc6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfc64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfc6660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfc67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfc6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfc6b10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfc6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfc6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfc5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfc52b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfc5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f2c3dfb2810" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f2c3dfb2810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfb2b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfb2d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfb1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfb11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfb1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfb14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfb1660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfb17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfb1980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfb1b10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfb1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfb1e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfb0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfb02b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfb0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f2c3df9e810" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f2c3df9e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df9eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df9ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df9d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df9d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df9d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df9d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df9d660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df9d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df9d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df9db10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df9dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df9de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df9c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df9c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df9c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f2c3df58cc0" loc="153:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f2c3df58cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df570a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df57230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df573c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df57550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df576e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df57870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df57a00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df57b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df57d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df56020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df561b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df56340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df564d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df56760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df568f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f2c3df44cb0" loc="164:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f2c3df44cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df430a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df43230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df433c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df43550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df436e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df43870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df43a00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df43b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df43d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df42020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df421b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df42340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df424d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df42760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df428f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f2c3df9a9a0" loc="83:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f2c3df9a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df9ad20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df99020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df991b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df99340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df994d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df99660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df997f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df99980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df99b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df99ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df99e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df98020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df981b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df98440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df985d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f2c3df859a0" loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f2c3df859a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df85d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df84020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df841b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df84340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df844d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df84660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df847f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df84980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df84b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df84ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df84e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df83020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df831b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df83440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df835d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f2c3df759a0" loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f2c3df759a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df75d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df74020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df741b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df74340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df744d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df74660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df747f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df74980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df74b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df74ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df74e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df73020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df731b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df73440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df735d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f2c3dfc1810" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f2c3dfc1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfc1b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfc1d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfc0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfc01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfc0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfc04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfc0660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfc07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfc0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfc0b10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfc0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfc0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfbf020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfbf2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfbf440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f2c3df799a0" loc="105:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f2c3df799a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df79d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df78020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df781b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df78340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df784d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df78660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df787f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df78980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df78b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df78ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df78e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df77020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df771b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df77440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df775d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f2c3dfbd810" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f2c3dfbd810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfbdb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfbdd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfbc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfbc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfbc340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfbc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfbc660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfbc7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfbc980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfbcb10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfbcca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfbce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfbb020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfbb2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfbb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f2c3dfa8810" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f2c3dfa8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfa8b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfa8d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfa7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfa71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfa7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfa74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfa7660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfa77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfa7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfa7b10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfa7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfa7e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfa6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfa62b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfa6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f2c3df949a0" loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f2c3df949a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df94d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df93020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df931b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df93340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df934d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df93660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df937f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df93980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df93b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df93ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df93e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df92020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df921b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df92440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df925d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f2c3df7f9a0" loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f2c3df7f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df7fd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df7e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df7e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df7e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df7e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df7e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df7e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df7e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df7eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df7eca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df7ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df7d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df7d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df7d440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df7d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f2c3df6f9a0" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f2c3df6f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df6fd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df6e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df6e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df6e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df6e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df6e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df6e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df6e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df6eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df6eca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df6ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df6d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df6d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df6d440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df6d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f2c3dfd5810" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f2c3dfd5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfd5b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfd5d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfca020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfca1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfca340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfca4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfca660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfca7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfca980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfcab10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfcaca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfcae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfc9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfc92b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfc9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f2c3dfb6810" loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f2c3dfb6810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfb6b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfb6d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfb5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfb51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfb5340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfb54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfb5660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfb57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfb5980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfb5b10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfb5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfb5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfb4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfb42b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfb4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f2c3dfa2810" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f2c3dfa2810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dfa2b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dfa2d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dfa1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dfa11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dfa1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dfa14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dfa1660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dfa17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dfa1980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dfa1b10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dfa1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dfa1e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dfa0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dfa02b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dfa0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f2c3df8e9a0" loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f2c3df8e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df8ed20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df8d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df8d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df8d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df8d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df8d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df8d7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df8d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df8db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df8dca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df8de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df8c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df8c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df8c440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df8c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f2c3df61ca0" loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f2c3df61ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df600a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df60230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df603c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df60550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df606e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df60870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df60a00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df60b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df60d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df5f020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df5f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df5f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df5f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df5f760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df5f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f2c3df4acb0" loc="161:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f2c3df4acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df490a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df49230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df493c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df49550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df496e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df49870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df49a00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df49b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df49d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df48020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df481b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df48340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df484d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df48760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df488f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f2c3df63cc0" loc="147:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f2c3df63cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df620a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df62230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df623c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df62550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df626e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df62870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df62a00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df62b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df62d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df61020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df611b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df61340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df614d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df61760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df618f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f2c3df899a0" loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f2c3df899a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df89d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df88020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df881b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df88340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df884d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df88660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df887f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df88980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df88b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df88ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df88e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df87020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df871b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df87440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df875d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f2c3df3ecb0" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f2c3df3ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df3d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df3d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df3d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df3d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df3d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df3d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df3da00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df3db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df3dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df3c020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df3c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df3c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df3c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df3c760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df3c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f2c3df38cc0" loc="172:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f2c3df38cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df370a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df37230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df373c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df37550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df376e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df37870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df37a00"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df37b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df37d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df36020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df361b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df36340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df364d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df36760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df368f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f2c3df6b9f0" loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f2c3df6b9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df6a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df6a350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df6a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df6a670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df6a800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df6a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df6ab20"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df6acb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df6ae40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df69020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df691b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df69340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df694d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df69760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df698f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3df33d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3df33d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df0b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df0b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df0b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df0b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df0b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df0b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df0ba40"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df0bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df0bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df0a020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df0a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df0a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df0a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df0a760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df0a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3df07740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3df07740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df07ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df07c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df07de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df06020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df061b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df06340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df064d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df06660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df067f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df06980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df06b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df06ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df06e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df05120"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df052b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3df02100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3df02100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3df02480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3df02610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3df027a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3df02930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3df02ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3df02c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3df02de0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3df01020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3df011b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3df01340"/>
        <function-ref name="set" scoped="" ref="0x7f2c3df014d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3df01660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3df017f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3df01a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3df01c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3defed10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3defed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3defd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3defd270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3defd400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3defd590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3defd720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3defd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3defda40"/>
        <function-ref name="get" scoped="" ref="0x7f2c3defdbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3defdd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3defc020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3defc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3defc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3defc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3defc760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3defc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3def9740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3def9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3def9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3def9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3def9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3def8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3def81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3def8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3def84d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3def8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3def87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3def8980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3def8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3def8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3def8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3def7120"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3def72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3def4100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3def4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3def4480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3def4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3def47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3def4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3def4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3def4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3def4de0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3def3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3def31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3def3340"/>
        <function-ref name="set" scoped="" ref="0x7f2c3def34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3def3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3def37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3def3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3def3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3def0d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3def0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3deef0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3deef270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3deef400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3deef590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3deef720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3deef8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3deefa40"/>
        <function-ref name="get" scoped="" ref="0x7f2c3deefbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3deefd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3deee020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3deee1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3deee340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3deee4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3deee760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3deee8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3deeb740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3deeb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3deebac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3deebc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3deebde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3deea020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3deea1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3deea340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3deea4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3deea660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3deea7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3deea980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3deeab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3deeaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3deeae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dee9120"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dee92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3dee6100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3dee6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dee6480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dee6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dee67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dee6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dee6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dee6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dee6de0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dee4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dee41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dee4340"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dee44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dee4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dee47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dee4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dee4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3dee1d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3dee1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dee00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dee0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dee0400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dee0590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dee0720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dee08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dee0a40"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dee0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dee0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dedf020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dedf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dedf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dedf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dedf760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dedf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3dedc740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3dedc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dedcac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dedcc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dedcde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dedb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dedb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dedb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dedb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dedb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dedb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dedb980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dedbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dedbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dedbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3deda120"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3deda2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3ded7100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3ded7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3ded7480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3ded7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3ded77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3ded7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3ded7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3ded7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3ded7de0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3ded6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3ded61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3ded6340"/>
        <function-ref name="set" scoped="" ref="0x7f2c3ded64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3ded6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3ded67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3ded6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3ded6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3ded3d80" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3ded3d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3ded2180"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3ded2310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3ded24a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3ded2630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3ded27c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3ded2950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3ded2ae0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3ded2c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3ded2e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3ded1020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3ded11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3ded1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3ded14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3ded1760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3ded18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3dece740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3dece740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3deceac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3decec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3decede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3decd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3decd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3decd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3decd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3decd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3decd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3decd980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3decdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3decdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3decde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3decc120"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3decc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3dec9100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3dec9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dec9480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dec9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dec97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dec9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dec9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dec9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dec9de0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dec8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dec81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dec8340"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dec84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dec8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dec87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dec8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dec8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3dec5d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3dec5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dec40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dec4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dec4400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dec4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dec4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dec48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dec4a40"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dec4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dec4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dec3020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dec31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dec3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dec34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dec3760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dec38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3debf740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3debf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3debfac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3debfc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3debfde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3debe020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3debe1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3debe340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3debe4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3debe660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3debe7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3debe980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3debeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3debeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3debee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3debd120"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3debd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3deba100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3deba100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3deba480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3deba610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3deba7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3deba930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3debaac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3debac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3debade0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3deb9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3deb91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3deb9340"/>
        <function-ref name="set" scoped="" ref="0x7f2c3deb94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3deb9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3deb97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3deb9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3deb9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3deb6d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3deb6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3deb50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3deb5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3deb5400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3deb5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3deb5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3deb58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3deb5a40"/>
        <function-ref name="get" scoped="" ref="0x7f2c3deb5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3deb5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3deb4020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3deb41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3deb4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3deb44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3deb4760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3deb48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3deb1740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3deb1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3deb1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3deb1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3deb1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3deb0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3deb01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3deb0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3deb04d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3deb0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3deb07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3deb0980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3deb0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3deb0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3deb0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3deaf120"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3deaf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3deac100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3deac100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3deac480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3deac610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3deac7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3deac930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3deacac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3deacc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3deacde0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3deab020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3deab1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3deab340"/>
        <function-ref name="set" scoped="" ref="0x7f2c3deab4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3deab660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3deab7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3deaba80"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3deabc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3dea8d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3dea8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dea70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dea7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dea7400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dea7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dea7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dea78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dea7a40"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dea7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dea7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dea6020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dea61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dea6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dea64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dea6760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dea68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3dea3740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3dea3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dea3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dea3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dea3de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dea2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dea21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dea2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dea24d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dea2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dea27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dea2980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dea2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dea2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dea2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dea1120"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dea12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de9e100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de9e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de9e480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de9e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de9e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de9e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de9eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de9ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de9ede0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de9c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de9c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de9c340"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de9c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de9c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de9c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de9ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de9cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de99e60" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de99e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de98210"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de983a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de98530"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de986c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de98850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de989e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de98b70"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de98d00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de97020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de971b0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de97340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de974d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de97660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de978f0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de97a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de949f0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de949f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de94d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de93020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de931b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de93340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de934d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de93660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de937f0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de93980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de93b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de93ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de93e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de92020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de921b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de92440"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de925d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de8f460" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de8f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de8f7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de8f970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de8fb00"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de8fc90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de8fe20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de8e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de8e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de8e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de8e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de8e660"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de8e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de8e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de8eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de8eda0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de8be00" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de8be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de8a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de8a350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de8a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de8a670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de8a800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de8a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de8ab20"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de8acb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de8ae40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de89020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de891b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de89340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de894d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de89760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de898f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de86740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de86740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de86ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de86c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de86de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de85020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de851b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de85340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de854d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de85660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de857f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de85980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de85b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de85ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de85e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de84120"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de842b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de81100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de81100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de81480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de81610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de817a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de81930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de81ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de81c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de81de0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de80020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de801b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de80340"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de804d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de80660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de807f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de80a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de80c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de7dd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de7dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de7c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de7c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de7c400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de7c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de7c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de7c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de7ca40"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de7cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de7cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de7b020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de7b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de7b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de7b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de7b760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de7b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de78740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de78740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de78ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de78c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de78de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de76020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de761b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de76340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de764d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de76660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de767f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de76980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de76b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de76ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de76e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de75120"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de752b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de72100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de72100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de72480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de72610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de727a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de72930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de72ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de72c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de72de0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de71020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de711b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de71340"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de714d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de71660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de717f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de71a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de71c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de6ed10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de6ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de6d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de6d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de6d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de6d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de6d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de6d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de6da40"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de6dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de6dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de6c020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de6c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de6c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de6c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de6c760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de6c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de69740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de69740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de69ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de69c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de69de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de68020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de681b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de68340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de684d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de68660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de687f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de68980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de68b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de68ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de68e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de67120"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de672b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de64100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de64100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de64480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de64610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de647a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de64930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de64ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de64c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de64de0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de63020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de631b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de63340"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de634d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de63660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de637f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de63a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de63c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de60d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de60d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de5f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de5f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de5f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de5f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de5f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de5f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de5fa40"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de5fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de5fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de5e020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de5e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de5e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de5e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de5e760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de5e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de5b740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de5b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de5bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de5bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de5bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de5a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de5a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de5a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de5a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de5a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de5a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de5a980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de5ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de5aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de5ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de59120"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de592b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de56100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de56100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de56480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de56610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de567a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de56930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de56ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de56c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de56de0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de55020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de551b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de55340"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de554d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de55660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de557f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de55a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de55c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de51d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de51d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de500e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de50270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de50400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de50590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de50720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de508b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de50a40"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de50bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de50d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de4f020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de4f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de4f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de4f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de4f760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de4f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de4c740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de4c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de4cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de4cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de4cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de4b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de4b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de4b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de4b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de4b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de4b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de4b980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de4bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de4bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de4be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de4a120"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de4a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de47100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de47100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de47480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de47610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de477a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de47930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de47ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de47c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de47de0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de46020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de461b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de46340"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de464d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de46660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de467f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de46a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de46c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de43d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de43d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de420e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de42270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de42400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de42590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de42720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de428b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de42a40"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de42bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de42d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de41020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de411b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de41340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de414d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de41760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de418f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de3e740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de3e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de3eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de3ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de3ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de3d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de3d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de3d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de3d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de3d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de3d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de3d980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de3db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de3dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de3de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de3c120"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de3c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de39100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de39100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de39480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de39610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de397a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de39930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de39ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de39c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de39de0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de38020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de381b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de38340"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de384d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de38660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de387f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de38a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de38c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de35d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de35d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de340e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de34270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de34400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de34590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de34720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de348b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de34a40"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de34bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de34d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de33020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de331b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de33340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de334d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de33760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de338f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de30740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de30740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de30ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de30c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de30de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de2e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de2e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de2e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de2e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de2e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de2e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de2e980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de2eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de2eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de2ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de2d120"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de2d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2c3de2a100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2c3de2a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3de2a480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3de2a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3de2a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3de2a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3de2aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3de2ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3de2ade0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3de29020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3de291b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3de29340"/>
        <function-ref name="set" scoped="" ref="0x7f2c3de294d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3de29660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3de297f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3de29a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3de29c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2c3ddb22f0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2c3ddb22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3ddb2670"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3ddb2800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3ddb2990"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3ddb2b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3ddb2cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3ddb2e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3ddb1020"/>
        <function-ref name="get" scoped="" ref="0x7f2c3ddb11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3ddb1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3ddb14d0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3ddb1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3ddb17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3ddb1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3ddb1c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3ddb1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2c3ddc3020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2c3ddc3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3ddc33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3ddc3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3ddc36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3ddc3850"/>
        <function-ref name="get" scoped="" ref="0x7f2c3ddc39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3ddc3b70"/>
        <function-ref name="set" scoped="" ref="0x7f2c3ddc3d00"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3ddb2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2c3ddaede0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2c3ddaede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3ddad180"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3ddad310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3ddad4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3ddad630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3ddad7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3ddad950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3ddadae0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3ddadc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3ddade00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3ddac020"/>
        <function-ref name="set" scoped="" ref="0x7f2c3ddac1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3ddac340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3ddac4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3ddac760"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3ddac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2c3ddafb90" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2c3ddafb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3ddae020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3ddae1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3ddae340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3ddae4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3ddae660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3ddae7f0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3ddae980"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3ddaeb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2c3dda9930" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2c3dda9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3dda9cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3dda9e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3dda8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3dda81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dda8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3dda84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dda8660"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dda87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3dda8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3dda8b10"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dda8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3dda8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3dda7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3dda72b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dda7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2c3ddaa710" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2c3ddaa710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3ddaaa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3ddaac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3ddaadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3dda9020"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dda91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3dda9340"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dda94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3dda9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c3dbf0370" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2c3dbf0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c3dbec870"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3dbefe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c3dbeec00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c3dbee780"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c3dbeb1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c3dbeccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c3dbee300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c3dbef020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c3dbec260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c3dbef4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3dbef9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f2c3dd91610" loc="49:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f2c3dd91610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c3dd8ec40"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3dd8f1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c3dd8e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c3dd8fae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c3dd8d590"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c3dd8d110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c3dd8f660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c3dd90390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c3dd8e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c3dd90860"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3dd90d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f2c3dd881d0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f2c3dd881d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c3dd84630"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3dd87c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c3dd859d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c3dd85550"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c3dd83020"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c3dd84ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c3dd850d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c3dd88dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c3dd84020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c3dd872e0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3dd877b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f2c3dd7fa80" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f2c3dd7fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c3dd816f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c3dd89400" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2c3dd89400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3dd89780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2c3dc8c870" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2c3dc8c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c3dc89090"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3dc8a090"/>
        <function-ref name="startAt" scoped="" ref="0x7f2c3dc8aa10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c3dc8a550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2c3dc89550"/>
        <function-ref name="start" scoped="" ref="0x7f2c3dc8b6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3dc8bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c3dc8c020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2c3dc8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3dc8c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2c3d170bd0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2c3d170bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e02b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2c3e02b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c3d16d4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3d16e4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2c3d16ee60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c3d16e9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2c3d16d9a0"/>
        <function-ref name="start" scoped="" ref="0x7f2c3d16fa80"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3d16e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c3d170380" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2c3d170380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3d170700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f2c3d1570c0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2c3d1570c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3d157440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3d1575d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3d157760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3d1578f0"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3d157a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f2c3d15a7b0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2c3d15a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3d15ab30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3d15acc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3d15ae50"/>
        <function-ref name="get" scoped="" ref="0x7f2c3d159020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3d1591b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3d159340"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3d1594d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3d159660"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3d1597f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3d159980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3d159b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f2c3d159da0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2c3d159da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3d158180"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3d158310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3d1584a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3d158630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3d1587c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3d158950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3d158ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3d158c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3d158e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f2c3dd5a020" loc="52:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2c3dd5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3dd5a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3dd5a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3dd5a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3dd5a850"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3dd5a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f2c3dd5f8b0" loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2c3dd5f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3dd5fc30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3dd5fdc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3dd5e020"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dd5e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3dd5e340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3dd5e4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3dd5e660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3dd5e7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3dd5e980"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3dd5eb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3dd5eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f2c3dd5d560" loc="51:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2c3dd5d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3dd5d8e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3dd5da70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3dd5dc00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3dd5dd90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3dd5c020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3dd5c1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3dd5c340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3dd5c4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3dd5c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f2c3d14eda0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2c3d14eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2c3d14d180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2c3d14d310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2c3d14d4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2c3d14d630"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3d14d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f2c3d1504c0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2c3d1504c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3d150840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3d1509d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3d150b60"/>
        <function-ref name="get" scoped="" ref="0x7f2c3d150cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3d150e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3d14f030"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3d14f1c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3d14f350"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3d14f4e0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3d14f670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3d14f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2c3d154340" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2c3d154340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e02b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2c3e02b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c3d151ba0"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3d153b80"/>
        <function-ref name="startAt" scoped="" ref="0x7f2c3d151550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c3d151090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2c3d150090"/>
        <function-ref name="start" scoped="" ref="0x7f2c3d1531b0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3d1536c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c3d155a30" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2c3d155a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3d155db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f2c3d14fa90" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2c3d14fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2c3d14fe10"/>
        <function-ref name="getControl" scoped="" ref="0x7f2c3d14e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3d14e1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2c3d14e340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2c3d14e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3d14e660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2c3d14e7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2c3d14e980"/>
        <function-ref name="setControl" scoped="" ref="0x7f2c3d14eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2c3dd05900" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2c3dd05900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c3dd09780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3dd04150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3dd09c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3dd04610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f2c3dd03990" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f2c3dd03990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e02b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2c3e02b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c3dd007c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3dcff170"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3dd00c80"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3dcff630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f2c3dceec50" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2c3dceec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3dced020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2c3dced1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2c3dced340"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dced4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2c3dced660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3dced7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3dced980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3dcedb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3dcedca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2c3dcede30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2c3dcec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2c3dcfcb80" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2c3dcfcb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e02b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2c3e02b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c3dcfb9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3dcee360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3dcfbe70"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3dcee820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f2c3dcca0f0" loc="63:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f2c3dcca0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e02b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2c3e02b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c3dcc9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3dcc99a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3dcc94e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3dcc9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2c3dce8cf0" loc="62:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2c3dce8cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c3dccdb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3dccc550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3dccc090"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3dccca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2c3d16a020" loc="61:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2c3d16a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c3d167870"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3d168840"/>
        <function-ref name="startAt" scoped="" ref="0x7f2c3d167220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c3d168d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2c3d167d30"/>
        <function-ref name="start" scoped="" ref="0x7f2c3d16ae30"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3d168380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f2c3d164780" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f2c3d164780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e02b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2c3e02b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c3d160020"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3d161020"/>
        <function-ref name="startAt" scoped="" ref="0x7f2c3d1619a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c3d1614e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2c3d1604e0"/>
        <function-ref name="start" scoped="" ref="0x7f2c3d1625d0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3d162ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2c3d1663d0" loc="68:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2c3d1663d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c3d165240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3d165bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3d165700"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3d1640d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f2c3dc579c0" loc="74:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f2c3dc579c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c3dc57d40"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c3dc56020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f2c3dc5b850" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2c3dc5b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c3dc57090"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3dc58090"/>
        <function-ref name="startAt" scoped="" ref="0x7f2c3dc58a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c3dc58550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2c3dc57550"/>
        <function-ref name="start" scoped="" ref="0x7f2c3dc5a6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3dc5abb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c3dc602f0" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2c3dc602f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c3dc5c870"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3dc5fe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c3dc5dc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c3dc5d780"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c3dc5b1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c3dc5ccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c3dc5d300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c3dc5f020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c3dc5c260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c3dc5f4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3dc5f9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f2c3dc06a00" loc="71:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f2c3dc06a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c3dc06d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c3dc04020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f2c3dc0b640" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f2c3dc0b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c3dc07c40"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3dc081e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c3dc07020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c3dc08ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c3dc06590"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c3dc06110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c3dc08660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c3dc09390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c3dc07630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c3dc09860"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3dc09d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2c3dc11150" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2c3dc11150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2c3dc0c700"/>
        <function-ref name="fired" scoped="" ref="0x7f2c3dc0fc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2c3dc0ea50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2c3dc0e5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f2c3dc0b090"/>
        <function-ref name="gett0" scoped="" ref="0x7f2c3dc0cba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2c3dc0e110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2c3dc11d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2c3dc0c0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2c3dc0f2a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3dc0f790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f2c3dc02790" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f2c3dc02790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c3dbf83f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2c3dbf8a60" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2c3dbf8a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e207ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2c3e02b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c3dbf7890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3dbf6260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3dbf7d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3dbf6720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c3d6a3020" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2c3d6a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3d6a33a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c3d6a3530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c3d6a36c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c3d6a3850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c3d6a39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c3d6a3c30" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2c3d6a3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3d6a2020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c3d6a21b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c3d6a2340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c3d6a24d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c3d6a2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c3d6a28b0" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2c3d6a28b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c3d6a2c30"/>
        <function-ref name="source" scoped="" ref="0x7f2c3d6a2dc0"/>
        <function-ref name="address" scoped="" ref="0x7f2c3d6a1020"/>
        <function-ref name="destination" scoped="" ref="0x7f2c3d6a11b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c3d6a1340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c3d6a14d0"/>
        <function-ref name="type" scoped="" ref="0x7f2c3d6a1660"/>
        <function-ref name="setType" scoped="" ref="0x7f2c3d6a17f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c3d6a1980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c3d6a1b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c3d6a1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2c3d6a0020" loc="52:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f2c3d6a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c3d6a03a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c3d6a0530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c3d6a06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c3d0bd390" loc="44:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2c3d0bd390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3d0bd710"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c3d0bd8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c3d0bda30"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c3d0bdbc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c3d0bdd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f2c3d0bc060" loc="46:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2c3d0bc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3d0bc3e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c3d0bc570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c3d0bc700"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c3d0bc890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c3d0bca20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2c3d0bcc70" loc="47:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2c3d0bcc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c3d0ba020"/>
        <function-ref name="source" scoped="" ref="0x7f2c3d0ba1b0"/>
        <function-ref name="address" scoped="" ref="0x7f2c3d0ba340"/>
        <function-ref name="destination" scoped="" ref="0x7f2c3d0ba4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c3d0ba660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c3d0ba7f0"/>
        <function-ref name="type" scoped="" ref="0x7f2c3d0ba980"/>
        <function-ref name="setType" scoped="" ref="0x7f2c3d0bab10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c3d0baca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c3d0bae30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c3d0b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c3db9bcf0" loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2c3db9bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3db980a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c3db98230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c3db983c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c3db98550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c3db986e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f2c3db4d400" loc="48:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2c3db4d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c3e21d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3db4d7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c3db4d930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c3db4dac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c3db4dc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c3db4dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c3db4e580" loc="46:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2c3db4e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3db4e920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c3db4eab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c3db4ec40"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c3db4edd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c3db4d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f2c3db4b720" loc="50:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2c3db4b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3db4baa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c3db4bc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c3db4bdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c3db4a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c3db4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f2c3db4a480" loc="169:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f2c3db4a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c3db4a800"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c3db4a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f2c3db4ac60" loc="126:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f2c3db4ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c3db49020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c3db491b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2c3db4c060" loc="49:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2c3db4c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c3db4c3e0"/>
        <function-ref name="source" scoped="" ref="0x7f2c3db4c570"/>
        <function-ref name="address" scoped="" ref="0x7f2c3db4c700"/>
        <function-ref name="destination" scoped="" ref="0x7f2c3db4c890"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c3db4ca20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c3db4cbb0"/>
        <function-ref name="type" scoped="" ref="0x7f2c3db4cd40"/>
        <function-ref name="setType" scoped="" ref="0x7f2c3db4b020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c3db4b1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c3db4b340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c3db4b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2c3db3f3b0" loc="46:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f2c3db3f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c3db3f730"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c3db3f8c0"/>
        <function-ref name="start" scoped="" ref="0x7f2c3db3fa50"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3db3fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c3db443f0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2c3db443f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c3e21d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3db44770"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c3db44900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c3db44a90"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c3db44c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c3db44db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c3db3e7e0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2c3db3e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3db3eb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c3db3ecf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c3db3ee80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c3db3d030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c3db3d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c3db3e1d0" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2c3db3e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c3e21d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c3db3e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c3db38620" loc="53:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2c3db38620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c3db389a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c3db38b30"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c3db38cc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c3db38e50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c3db37020"/>
        <function-ref name="get" scoped="" ref="0x7f2c3db371b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c3db37340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c3db37980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3db374d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c3db37660"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c3db377f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f2c3db3ab20" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c3db3ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c3db38020"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c3db381b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c3db38340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c3db3d470" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2c3db3d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c3db3d7f0"/>
        <function-ref name="source" scoped="" ref="0x7f2c3db3d980"/>
        <function-ref name="address" scoped="" ref="0x7f2c3db3db10"/>
        <function-ref name="destination" scoped="" ref="0x7f2c3db3dca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c3db3de30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c3db3a020"/>
        <function-ref name="type" scoped="" ref="0x7f2c3db3a1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f2c3db3a340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c3db3a4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c3db3a660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c3db3a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2c3dadc9f0" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f2c3dadc9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3dadcd70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c3dadb020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c3dadb1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c3dadb340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c3dadb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2c3dadb760" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f2c3dadb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c3dadbae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2c3db347d0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2c3db347d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c3e21d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3db34b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c3db34d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c3dae0020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c3dae01b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c3dae0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2c3dadd400" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2c3dadd400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3dadd780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c3dadd910"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c3daddaa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c3daddc30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c3dadddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c3dae06c0" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2c3dae06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2c3e21d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c3dae0a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f2c3dadc060" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2c3dadc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2c3dadc3e0"/>
        <function-ref name="noAck" scoped="" ref="0x7f2c3dadc570"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2c3dadc700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2c3dae0cb0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2c3dae0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2c3dade0a0"/>
        <function-ref name="source" scoped="" ref="0x7f2c3dade230"/>
        <function-ref name="address" scoped="" ref="0x7f2c3dade3c0"/>
        <function-ref name="destination" scoped="" ref="0x7f2c3dade550"/>
        <function-ref name="setSource" scoped="" ref="0x7f2c3dade6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2c3dade870"/>
        <function-ref name="type" scoped="" ref="0x7f2c3dadea00"/>
        <function-ref name="setType" scoped="" ref="0x7f2c3dadeb90"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2c3daded20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2c3dadd020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2c3dadd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2c3dad62f0" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f2c3dad62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c3dad6670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c3dad6800"/>
        <function-ref name="start" scoped="" ref="0x7f2c3dad6990"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3dad6b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c3dad5e10" loc="52:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2c3dad5e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2c3e21a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3dad41c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c3dad4350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c3dad44e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c3dad4670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c3dad4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c3dad9bc0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2c3dad9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3dad6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c3dad5320" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2c3dad5320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2c3e21a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c3dad56a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c3dad3940" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2c3dad3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c3dad3cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c3dad3e50"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c3dad2020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c3dad21b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c3dad2340"/>
        <function-ref name="get" scoped="" ref="0x7f2c3dad24d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c3dad2660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c3dad2ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dad27f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c3dad2980"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c3dad2b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f2c3dad3020" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f2c3dad3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2c3e21a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f2c3dad33a0"/>
        <function-ref name="offset" scoped="" ref="0x7f2c3dad3530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f2c3dad36c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2c3dac6450" loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f2c3dac6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c3dac67d0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c3dac6960"/>
        <function-ref name="start" scoped="" ref="0x7f2c3dac6af0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3dac6c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f2c3da5ee40" loc="332:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f2c3da5ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c3da5d1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c3da5d370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f2c3dab1e00" loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f2c3dab1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c3dab31c0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3dab3350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f2c3da96d10" loc="191:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f2c3da96d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c3da940e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c3da94270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c3dac7d60" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2c3dac7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3dac6180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f2c3daafa80" loc="75:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f2c3daafa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f2c3daafe00"/>
        <function-ref name="flush" scoped="" ref="0x7f2c3dab2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f2c3da61400" loc="322:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f2c3da61400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c3da61780"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c3da61910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f2c3dab6e30" loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f2c3dab6e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f2c3dabe1e0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f2c3dabe370"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f2c3dabe500"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f2c3dabe690"/>
        <function-ref name="putData" scoped="" ref="0x7f2c3dabe820"/>
        <function-ref name="putDone" scoped="" ref="0x7f2c3dabe9b0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f2c3dabeb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c3dabedc0" loc="73:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2c3dabedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c3daba180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c3daba310"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c3daba4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c3daba630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c3daba7c0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3daba950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c3dabaae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c3dab41b0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3dabac70"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c3dabae00"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c3dab4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f2c3da5a0c0" loc="341:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f2c3da5a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c3da5a440"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c3da5a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f2c3dabf4a0" loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f2c3dabf4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f2c3dabf820"/>
        <function-ref name="nextByte" scoped="" ref="0x7f2c3dabf9b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f2c3dabfb40"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f2c3dabfcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f2c3dabcad0" loc="68:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f2c3dabcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f2c3dabce50"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f2c3dac2020"/>
        <function-ref name="endPacket" scoped="" ref="0x7f2c3dac21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f2c3d98fc50" loc="275:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f2c3d98fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c3d98e020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c3d98e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2c3d993830" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2c3d993830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2c3e21a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3d993bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c3d993d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c3d992020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c3d9921b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c3d992340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f2c3d98e480" loc="158:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f2c3d98e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c3d98e800"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c3d98e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2c3d993110" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2c3d993110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2c3e21a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2c3d9934b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f2c3d992760" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f2c3d992760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2c3e21a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f2c3d992b00"/>
        <function-ref name="offset" scoped="" ref="0x7f2c3d992c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f2c3d992e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c3d990590" loc="57:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2c3d990590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c3d990910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c3d990aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c3d990c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c3d990dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c3d98f020"/>
        <function-ref name="get" scoped="" ref="0x7f2c3d98f1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c3d98f340"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c3d98f980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3d98f660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c3d98f4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c3d98f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f2c3d9919d0" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f2c3d9919d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f2c3d991d50"/>
        <function-ref name="nextByte" scoped="" ref="0x7f2c3d990020"/>
        <function-ref name="startSend" scoped="" ref="0x7f2c3d9901b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f2c3d990340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f2c3d9910e0" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f2c3d9910e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f2c3d991460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f2c3d9915f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f2c3d991780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f2c3d97cd20" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f2c3d97cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3d9870e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f2c3d987270"/>
        <function-ref name="receive" scoped="" ref="0x7f2c3d987400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f2c3d987590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f2c3d987720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f2c3d9878b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c3d987a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f2c3d98bb70" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f2c3d98bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f2c3d988020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f2c3d9881b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f2c3d988340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f2c3d9884d0"/>
        <function-ref name="putData" scoped="" ref="0x7f2c3d988660"/>
        <function-ref name="putDone" scoped="" ref="0x7f2c3d9887f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f2c3d988980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c3d987cc0" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2c3d987cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c3d9860a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c3d986230"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c3d9863c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c3d986550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c3d9866e0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3d986870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c3d986a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c3d97b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3d986b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c3d986d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c3d97b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f2c3d95f020" loc="6:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f2c3d95f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3d95f3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f2c3d95f530"/>
        <function-ref name="receive" scoped="" ref="0x7f2c3d95f6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f2c3d95f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f2c3d961890" loc="5:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f2c3d961890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3d961c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f2c3d961da0"/>
        <function-ref name="receive" scoped="" ref="0x7f2c3d960020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f2c3d9601b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f2c3d960340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f2c3d9604d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c3d960660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2c3d961080" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2c3d961080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c3d961400"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3d961590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2c3d6d5c70" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c3d6d5c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2c3d6d3020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c3d6d31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f2c3d6d2440" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f2c3d6d2440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3d6d27c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f2c3d6d2950"/>
        <function-ref name="receive" scoped="" ref="0x7f2c3d6d2ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f2c3d6d2c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f2c3d6d1020" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2c3d6d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f2c3d6d13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f2c3d6d3440" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f2c3d6d3440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3d6d37c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f2c3d6d3950"/>
        <function-ref name="receive" scoped="" ref="0x7f2c3d6d3ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f2c3d6d3c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f2c3d6d3e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f2c3d6d2020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c3d6d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2c3d6d5020" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2c3d6d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c3d6d53a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c3d6d5530"/>
        <function-ref name="request" scoped="" ref="0x7f2c3d6d56c0"/>
        <function-ref name="granted" scoped="" ref="0x7f2c3d6d5850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c3d6d59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f2c3d8f6dd0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c3d8f6dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2c3d8f8180"/>
        <function-ref name="configure" scoped="" ref="0x7f2c3d8f8310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f2c3d8f4210" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f2c3d8f4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3d8f4590"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f2c3d8f4720"/>
        <function-ref name="receive" scoped="" ref="0x7f2c3d8f48b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f2c3d8f4a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f2c3d8f2600" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2c3d8f2600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f2c3d8f2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f2c3d8f8b50" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f2c3d8f8b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3d8f7020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f2c3d8f71b0"/>
        <function-ref name="receive" scoped="" ref="0x7f2c3d8f7340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f2c3d8f74d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f2c3d8f7660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f2c3d8f77f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c3d8f7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f2c3d8f3370" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f2c3d8f3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c3d8f36f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c3d8f3880"/>
        <function-ref name="request" scoped="" ref="0x7f2c3d8f3a10"/>
        <function-ref name="granted" scoped="" ref="0x7f2c3d8f3ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c3d8f3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2c3d8fb320" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2c3d8fb320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c3d8fb6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c3d8fb830"/>
        <function-ref name="request" scoped="" ref="0x7f2c3d8fb9c0"/>
        <function-ref name="granted" scoped="" ref="0x7f2c3d8fbb50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c3d8fbce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f2c3d8eebe0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2c3d8eebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2c3d8f1020"/>
        <function-ref name="txDone" scoped="" ref="0x7f2c3d8f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f2c3d869e70" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c3d869e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2c3d868240"/>
        <function-ref name="configure" scoped="" ref="0x7f2c3d8683d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f2c3d866890" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f2c3d866890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3d866c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f2c3d866dc0"/>
        <function-ref name="receive" scoped="" ref="0x7f2c3d865020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f2c3d8651b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f2c3d8643e0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2c3d8643e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f2c3d864780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f2c3d864a50" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f2c3d864a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2c3d864dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2c3d863020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2c3d8631b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2c3d863340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2c3d8634d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2c3d863660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2c3d8637f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2c3d863980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2c3d863b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2c3d863ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2c3d863e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2c3d862020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2c3d8621b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2c3d862440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2c3d8625d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2c3d862760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2c3d8628f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f2c3d862a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2c3d862c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2c3d862da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2c3d861020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2c3d8611b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2c3d861340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2c3d8614d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3d861660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2c3d8619f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2c3d861b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2c3d861d10"/>
        <function-ref name="tx" scoped="" ref="0x7f2c3d860020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2c3d8601b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2c3d860340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2c3d8604d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2c3d860660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2c3d8607f0"/>
        <function-ref name="rx" scoped="" ref="0x7f2c3d860980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2c3d860b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2c3d860ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2c3d860e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2c3d85f020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2c3d85f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f2c3d868790" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f2c3d868790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3d868b30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f2c3d868cc0"/>
        <function-ref name="receive" scoped="" ref="0x7f2c3d868e50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f2c3d866020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f2c3d8661b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f2c3d866340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c3d8664d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2c3d85e020" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2c3d85e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e02b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2c3e02b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c3d85ee30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3d85d800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3d85d340"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3d85dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f2c3d8655b0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f2c3d8655b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c3d865950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c3d865ae0"/>
        <function-ref name="request" scoped="" ref="0x7f2c3d865c70"/>
        <function-ref name="granted" scoped="" ref="0x7f2c3d865e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c3d864020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2c3d8690d0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2c3d8690d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c3d869470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c3d869600"/>
        <function-ref name="request" scoped="" ref="0x7f2c3d869790"/>
        <function-ref name="granted" scoped="" ref="0x7f2c3d869920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c3d869ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f2c3d85f5b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2c3d85f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2c3d85f950"/>
        <function-ref name="txDone" scoped="" ref="0x7f2c3d85fae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c3d85c120" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2c3d85c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c3d85c4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c3d85c630"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c3d85c7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c3d85c950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c3d85cae0"/>
        <function-ref name="get" scoped="" ref="0x7f2c3d85cc70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c3d85ce00"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c3d85a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3d85a1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c3d85a020"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c3d85a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f2c3d84b080" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2c3d84b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2c3d84b400"/>
        <function-ref name="txDone" scoped="" ref="0x7f2c3d84b590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f2c3d84fca0" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c3d84fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c3d8510a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3d851230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f2c3d851550" loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2c3d851550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2c3d8518d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2c3d851a60"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2c3d851bf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2c3d851d80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2c3d850020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2c3d8501b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2c3d850340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2c3d8504d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2c3d850660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2c3d8507f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2c3d850980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2c3d850b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2c3d850ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2c3d84e020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2c3d84e1b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2c3d84e340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2c3d84e4d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f2c3d84e660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2c3d84e7f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2c3d84e980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2c3d84eb10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2c3d84eca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2c3d84ee30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2c3d84d020"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3d84d1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2c3d84d540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2c3d84d6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2c3d84d860"/>
        <function-ref name="tx" scoped="" ref="0x7f2c3d84d9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2c3d84db80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2c3d84dd10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2c3d84c020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2c3d84c1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2c3d84c340"/>
        <function-ref name="rx" scoped="" ref="0x7f2c3d84c4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2c3d84c660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2c3d84c7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2c3d84c980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2c3d84cb10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2c3d84cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f2c3d83d1f0" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f2c3d83d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3d83d570"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3d83d700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3d83d890"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3d83da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3d83dbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3d83dd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3d83c020"/>
        <function-ref name="get" scoped="" ref="0x7f2c3d83c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3d83c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3d83c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3d83c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3d83c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3d83c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3d83cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3d83cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f2c3d842910" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f2c3d842910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2c3d842c90"/>
        <function-ref name="txDone" scoped="" ref="0x7f2c3d842e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f2c3d83b1f0" loc="81:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f2c3d83b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3d83b570"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3d83b700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3d83b890"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3d83ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3d83bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3d83bd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3d83a020"/>
        <function-ref name="get" scoped="" ref="0x7f2c3d83a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3d83a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3d83a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3d83a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3d83a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3d83a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3d83ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3d83ada0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f2c3d8391f0" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f2c3d8391f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3d839570"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3d839700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3d839890"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3d839a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3d839bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3d839d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3d838020"/>
        <function-ref name="get" scoped="" ref="0x7f2c3d8381b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3d838340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3d8384d0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3d838660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3d8387f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3d838980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3d838c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3d838da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f2c3d847cc0" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f2c3d847cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2c3d8460a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2c3d846230"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2c3d8463c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2c3d846550"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2c3d8466e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2c3d846870"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2c3d846a00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2c3d846b90"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2c3d846d20"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2c3d845020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2c3d8451b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2c3d845340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2c3d8454d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2c3d845760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2c3d8458f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2c3d845a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2c3d845c10"/>
        <function-ref name="isUart" scoped="" ref="0x7f2c3d845da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2c3d844020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2c3d8441b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2c3d844340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2c3d8444d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2c3d844660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2c3d8447f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3d844980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2c3d844d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2c3d843020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2c3d8431b0"/>
        <function-ref name="tx" scoped="" ref="0x7f2c3d843340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2c3d8434d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2c3d843660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2c3d8437f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2c3d843980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2c3d843b10"/>
        <function-ref name="rx" scoped="" ref="0x7f2c3d843ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2c3d843e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2c3d842020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2c3d8421b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2c3d842340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2c3d8424d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f2c3d847410" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c3d847410"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c3d847790"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3d847920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f2c3d83f1f0" loc="79:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f2c3d83f1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3d83f570"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3d83f700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3d83f890"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3d83fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3d83fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3d83fd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3d83e020"/>
        <function-ref name="get" scoped="" ref="0x7f2c3d83e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3d83e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3d83e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3d83e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3d83e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3d83e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3d83ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3d83eda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f2c3d841210" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f2c3d841210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2c3d841590"/>
        <function-ref name="isInput" scoped="" ref="0x7f2c3d841720"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2c3d8418b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2c3d841a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2c3d841bd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2c3d841d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2c3d840020"/>
        <function-ref name="get" scoped="" ref="0x7f2c3d8401b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2c3d840340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2c3d8404d0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3d840660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2c3d8407f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2c3d840980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2c3d840c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2c3d840da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2c3d7ba110" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2c3d7ba110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2c3e02b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2c3e02b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2c3d7b9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2c3d7b99a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2c3d7b94e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2c3d7b9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2c3cfffa90" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c3cfffa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2c3cfffe10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c3cffe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2c3cff8be0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c3cff8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2c3cff7020"/>
        <function-ref name="configure" scoped="" ref="0x7f2c3cff71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f2c3cff8440" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2c3cff8440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2c3cff87c0"/>
        <function-ref name="txDone" scoped="" ref="0x7f2c3cff8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2c3d000e00" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2c3d000e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c3cfff1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c3cfff350"/>
        <function-ref name="request" scoped="" ref="0x7f2c3cfff4e0"/>
        <function-ref name="granted" scoped="" ref="0x7f2c3cfff670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c3cfff800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f2c3cffea50" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2c3cffea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2c3cffedd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2c3cffc020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2c3cffc1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2c3cffc340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2c3cffc4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2c3cffc660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2c3cffc7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2c3cffc980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2c3cffcb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2c3cffcca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2c3cffce30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2c3cffb020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2c3cffb1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2c3cffb440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2c3cffb5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2c3cffb760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2c3cffb8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f2c3cffba80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2c3cffbc10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2c3cffbda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2c3cffa020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2c3cffa1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2c3cffa340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2c3cffa4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2c3cffa660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2c3cffa9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2c3cffab80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2c3cffad10"/>
        <function-ref name="tx" scoped="" ref="0x7f2c3cff9020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2c3cff91b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2c3cff9340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2c3cff94d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2c3cff9660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2c3cff97f0"/>
        <function-ref name="rx" scoped="" ref="0x7f2c3cff9980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2c3cff9b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2c3cff9ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2c3cff9e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2c3cff8020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2c3cff81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2c3cffe2b0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c3cffe2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2c3cffe630"/>
        <function-ref name="userId" scoped="" ref="0x7f2c3cffe7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2c3d79cd50" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c3d79cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2c3d79b100"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c3d79b290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2c3d79a370" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c3d79a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2c3d79a6f0"/>
        <function-ref name="configure" scoped="" ref="0x7f2c3d79a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f2c3d7a2ce0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f2c3d7a2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2c3d79d0a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f2c3d79d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2c3d79da60" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2c3d79da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c3d79dde0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c3d79c020"/>
        <function-ref name="request" scoped="" ref="0x7f2c3d79c1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f2c3d79c340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c3d79c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2c3d79b590" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c3d79b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2c3d79b910"/>
        <function-ref name="userId" scoped="" ref="0x7f2c3d79baa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f2c3d7844b0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c3d7844b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2c3d784830"/>
        <function-ref name="userId" scoped="" ref="0x7f2c3d7849c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f2c3d7975c0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f2c3d7975c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2c3d797960"/>
        <function-ref name="txDone" scoped="" ref="0x7f2c3d797af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f2c3d785e70" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f2c3d785e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3d784220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f2c3d785020" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2c3d785020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2c3d7853c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f2c3d785690" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f2c3d785690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2c3d785a10"/>
        <function-ref name="txDone" scoped="" ref="0x7f2c3d785ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2c3d70abf0" loc="92:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c3d70abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2c3d709020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c3d7091b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2c3d708930" loc="96:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c3d708930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2c3d708cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f2c3d708e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f2c3d709400" loc="93:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c3d709400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c3d709780"/>
        <function-ref name="requested" scoped="" ref="0x7f2c3d709910"/>
        <function-ref name="granted" scoped="" ref="0x7f2c3d709aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c3d709c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c3d709dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2c3d70ce60" loc="91:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2c3d70ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c3d70a230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c3d70a3c0"/>
        <function-ref name="request" scoped="" ref="0x7f2c3d70a550"/>
        <function-ref name="granted" scoped="" ref="0x7f2c3d70a6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c3d70a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2c3d708060" loc="94:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c3d708060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2c3d7083e0"/>
        <function-ref name="userId" scoped="" ref="0x7f2c3d708570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c3cf95ca0" loc="44:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2c3cf95ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3cf930a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f2c3cf93330" loc="45:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f2c3cf93330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2c3cf936b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2c3cf93840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2c3cf939d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2c3cf93b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2c3cf903a0" loc="55:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2c3cf903a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2c3cf90740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c3cf908d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2c3cf8e210" loc="60:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2c3cf8e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2c3cf8e5b0"/>
        <function-ref name="configure" scoped="" ref="0x7f2c3cf8e740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f2c3cf8e9d0" loc="61:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f2c3cf8e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2c3cf8ed50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2c3cf8d020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2c3cf8d1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2c3cf8d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f2c3cf90b20" loc="56:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c3cf90b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c3cf8f020"/>
        <function-ref name="requested" scoped="" ref="0x7f2c3cf8f1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f2c3cf8f340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c3cf8f4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c3cf8f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c3cf8d590" loc="62:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2c3cf8d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c3cf8d910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c3cf8daa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c3cf8dc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c3cf8ddc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c3cf8c020"/>
        <function-ref name="get" scoped="" ref="0x7f2c3cf8c1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c3cf8c340"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c3cf8c980"/>
        <function-ref name="set" scoped="" ref="0x7f2c3cf8c660"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c3cf8c4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c3cf8c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2c3cf91540" loc="54:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2c3cf91540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c3cf918e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c3cf91a70"/>
        <function-ref name="request" scoped="" ref="0x7f2c3cf91c00"/>
        <function-ref name="granted" scoped="" ref="0x7f2c3cf91d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c3cf90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2c3cf8f8b0" loc="57:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c3cf8f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2c3cf8fc30"/>
        <function-ref name="userId" scoped="" ref="0x7f2c3cf8fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f2c3cf8cc50" loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f2c3cf8cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c3cf8a020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c3cf8a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f2c3d6ee400" loc="72:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f2c3d6ee400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f2c3d6ee780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f2c3d6ee9d0" loc="73:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c3d6ee9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c3d6eed50"/>
        <function-ref name="requested" scoped="" ref="0x7f2c3d6ed020"/>
        <function-ref name="granted" scoped="" ref="0x7f2c3d6ed1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c3d6ed340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c3d6ed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f2c3d703b20" loc="70:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c3d703b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c3d6ee020"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3d6ee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f2c3d6ed720" loc="74:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c3d6ed720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2c3d6edaa0"/>
        <function-ref name="userId" scoped="" ref="0x7f2c3d6edc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f2c3cf5bb00" loc="62:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f2c3cf5bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f2c3cf5be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f2c3cf5a0f0" loc="63:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2c3cf5a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c3cf5a470"/>
        <function-ref name="requested" scoped="" ref="0x7f2c3cf5a600"/>
        <function-ref name="granted" scoped="" ref="0x7f2c3cf5a790"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c3cf5a920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2c3cf5aab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f2c3cf5b3a0" loc="60:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2c3cf5b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c3cf5b720"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3cf5b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f2c3cf5ad00" loc="64:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2c3cf5ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2c3cf590a0"/>
        <function-ref name="userId" scoped="" ref="0x7f2c3cf59230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f2c3d6cd920" loc="3:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2c3d6cd920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f2c3d6cdca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f2c3d6cc020" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2c3d6cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2c3d6cc3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2c3d6cc530"/>
        <function-ref name="request" scoped="" ref="0x7f2c3d6cc6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f2c3d6cc850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2c3d6cc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2c3d6cd0c0" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2c3d6cd0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2c3d6cd440"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3d6cd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f2c3d6bb8d0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f2c3d6bb8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f2c3d6bbc50"/>
        <function-ref name="offset" scoped="" ref="0x7f2c3d6bbde0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f2c3d6b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f2c3d69c720" loc="43:/home/jyxk/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f2c3d69c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f2c3d6785f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f2c3d6763a0"/>
        <function-ref name="element" scoped="" ref="0x7f2c3d676a10"/>
        <function-ref name="full" scoped="" ref="0x7f2c3d679810"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c3d678170"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2c3d678ca0"/>
        <function-ref name="empty" scoped="" ref="0x7f2c3d679390"/>
        <function-ref name="size" scoped="" ref="0x7f2c3d679c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f2c3d6715a0" loc="93:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f2c3d6715a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f2c3d66d4a0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f2c3d66c260"/>
        <function-ref name="element" scoped="" ref="0x7f2c3d66c8d0"/>
        <function-ref name="full" scoped="" ref="0x7f2c3d66e680"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2c3d66d020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2c3d66db50"/>
        <function-ref name="empty" scoped="" ref="0x7f2c3d66e200"/>
        <function-ref name="size" scoped="" ref="0x7f2c3d66eb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f2c3d66a020" loc="94:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2c3d66a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2c3d66a3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c3d66a530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c3d66a6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2c3d66a850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2c3d66a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f2c3d66ac70" loc="95:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2c3d66ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2c3d669020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2c3d6691b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2c3d669340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2c3d6694d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2c3d669660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f2c3d664020" loc="114:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7f2c3d664020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2c3d6643a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2c3d664530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c3d672470" loc="89:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2c3d672470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3d6727f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2c3d6698e0" loc="96:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2c3d6698e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2c3d669c60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2c3d669df0"/>
        <function-ref name="led1On" scoped="" ref="0x7f2c3d668020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2c3d6681b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2c3d668340"/>
        <function-ref name="get" scoped="" ref="0x7f2c3d6684d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2c3d668660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2c3d668ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2c3d6687f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f2c3d668980"/>
        <function-ref name="led2On" scoped="" ref="0x7f2c3d668b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f2c3d66fc90" loc="90:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f2c3d66fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f2c3d6710a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f2c3d64d7e0" loc="43:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f2c3d64d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f2c3d64db60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2c3d64ab20" loc="94:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2c3d64ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2c3d646020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f2c3d646300" loc="95:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f2c3d646300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f2c3d646680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f2c3d63e0f0" loc="39:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f2c3d63e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2c3d63e470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f2c3d63e810" loc="40:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f2c3d63e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2c3d63eb90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2c3d63ed20"/>
        <function-ref name="start" scoped="" ref="0x7f2c3d63d020"/>
        <function-ref name="stop" scoped="" ref="0x7f2c3d63d1b0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f2c3e205e10" loc="62:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f2c3e206a20" loc="60:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f2c3e1d5b40" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f2c3e1d7de0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f2c3e1d5420" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f2c3e1d7700" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f2c3e1d65a0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f2c3e1db910" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f2c3e1d7020" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f2c3e1d6cc0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f2c3e378020" loc="62:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f2c3e63ddd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f2c3e182020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f2c3e183cc0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f2c3e186390" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c3e1cd5a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f2c3e1cb020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f2c3e182890" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f2c3e1817b0" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f2c3e183560" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f2c3e181020" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f2c3e186b30" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f2c3e185350" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f2c3e185da0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c3e1cd5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f2c3e1cb020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2c3e185b20" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2c3e1cd5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f2c3e1cb020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f2c3e1750e0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f2c3e172730" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f2c3e1724b0" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f2c3e1712e0" loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f2c3e171060" loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f2c3e173ca0" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f2c3e1733e0" loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f2c3e175a90" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f2c3e175810" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f2c3e17c3e0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f2c3e17cd60" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f2c3e17cae0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f2c3e17a790" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f2c3e17a510" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f2c3e1792a0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f2c3e179020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f2c3e179990" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f2c3e18c810" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f2c3e1892a0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f2c3e189020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f2c3e18b020" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2c3e192ab0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f2c3e18b760" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f2c3e18e9b0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f2c3e18c120" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f2c3e18e270" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f2c3e18d0e0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f2c3e18d9f0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f2c3e18d770" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f2c3e189cb0" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f2c3e189a30" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f2c3e14b1f0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f2c3e29ba80" loc="85:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f2c3e29a1f0" loc="86:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f2c3e29b2b0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f2c3e4b4830" loc="52:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f2c3e6f6020" loc="57:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f2c3e6f5020" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f2c3e6f6790" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f2c3e6ea350" loc="67:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f2c3e6eaba0" loc="75:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2c3e027350" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2c3e027350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f2c3e01f1f0" loc="136:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f2c3e024a60" loc="83:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f2c3e022820" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f2c3e022250" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f2c3e022590" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f2c3e023a60" loc="98:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f2c3e01e270" loc="151:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f2c3e01f980" loc="144:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f2c3e023270" loc="92:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f2c3e025020" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2c3e027c40" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f2c3e021820" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f2c3e021250" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f2c3e021590" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f2c3e025ae0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2c3e025860" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2c3e024350" loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f2c3e0157b0" loc="61:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f2c3e013020" loc="67:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f2c3e013800" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f2c3e0127d0" loc="83:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f2c3e010020" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2c3e010830" loc="117:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f2c3e012020" loc="77:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2c3e00f3f0" loc="134:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f2c3e00f170" loc="134:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f2c3e015020" loc="56:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f2c3e011020" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f2c3e0117b0" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f2c3dffc730" loc="44:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f2c3dffce60" loc="45:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f2c3dffe8e0" loc="42:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f2c3dffbcf0" loc="47:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2c3dffc020" loc="43:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f2c3dffb5b0" loc="46:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2c3e001aa0" loc="40:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f2c3dffe1f0" loc="41:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f2c3dfd17c0" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f2c3dfd0020" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f2c3dfccb10" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f2c3dfcc890" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f2c3dfd2020" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f2c3dfcf020" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f2c3dfcb490" loc="117:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f2c3dfd0760" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2c3dfd1020" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f2c3dfcd770" loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f2c3dfd27c0" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2c3dfd4020" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f2c3dfcf7a0" loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f2c3dfcc020" loc="101:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f2c3dfcd020" loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f2c3dfd4750" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2c3dd83c50" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2c3dd83c50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f2c3dd7f5a0" loc="61:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2c3ed56920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2c3dd7a5d0" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2c3dd7a5d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f2c3dd7a810" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c3dd7a810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f2c3dd75390" loc="109:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c3dd7a810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f2c3dd773b0" loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f2c3dd769d0" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c3dd7a810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c3dd7a810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f2c3dd76400" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c3dd7a810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f2c3dd76740" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c3dd7a810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f2c3dd77b90" loc="88:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f2c3dd75b80" loc="116:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c3dd7a810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f2c3dd79390" loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c3dd7a810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2c3dd79110" loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c3dd7a810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2c3dd79bc0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2c3dd0ce20" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2c3dd0ce20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f2c3dd070d0" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c3dd070d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f2c3dd079f0" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2c3dd070d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f2c3dd06b10" loc="76:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f2c3dd062b0" loc="71:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f2c3dd052b0" loc="82:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2c3dbe2c90" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c3e21dd10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f2c3dbe2340" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c3e21dd10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f2c3dbe26c0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c3dbe29f0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f2c3dbdb620" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c3dbdb020" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c3dbdb350" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f2c3dbdc6d0" loc="123:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f2c3dbe02a0" loc="96:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c3dbe0020" loc="96:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2c3dbde7f0" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c3dbde210" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f2c3dbde560" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f2c3dbd8020" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c3dbe4c60" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f2c3dbd7110" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c3dbd8e10" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f2c3dbd2490" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c3dbd4e50" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c3dbd21c0" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f2c3dbd4560" loc="106:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f2c3dbd55e0" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c3dbd5020" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c3dbd5350" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f2c3dbc3d30" loc="177:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f2c3e21d930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c3dbc3ab0" loc="177:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f2c3dbcca10" loc="88:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2c3e21dd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c3dbcc790" loc="88:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f2c3dbe3e60" loc="68:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2c3e21dd10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f2c3dbcf950" loc="78:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2c3e21dd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c3dbcf6d0" loc="78:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f2c3dbca3a0" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c3e21dd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c3dbcdd70" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2c3dbca110" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c3e21dd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f2c3dbcbe50" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c3e21dd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c3dbcb870" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2c3dbcbbc0" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2c3e21dd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f2c3dbc7810" loc="147:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2c3e21d550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c3dbc7590" loc="147:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f2c3dbc4b90" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2c3e21d550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c3dbc45e0" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f2c3dbc4900" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2c3e21d550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f2c3dbc8600" loc="136:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c3dbc8380" loc="136:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f2c3dbc22f0" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2c3e21d930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2c3dbc5cf0" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f2c3dbc2060" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2c3e21d930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f2c3dbc0190" loc="195:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f2c3e21d930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f2c3dbbdad0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c3dbbd850" loc="59:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f2c3dbbbcd0" loc="71:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c3dbbba50" loc="71:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f2c3dbb9020" loc="85:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c3dbbcce0" loc="85:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2c3dbb25e0" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c3dbb2020" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c3dbb2350" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f2c3dbadbb0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c3dbad5b0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c3dbad8e0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f2c3dbaed20" loc="112:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f2c3dbb0900" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c3dbb0680" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2c3dbafe00" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c3dbaf820" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f2c3dbafb70" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f2c3db42ab0" loc="113:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2c3db42830" loc="113:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f2c3db3f020" loc="138:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2c3db41d30" loc="138:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f2c3db45d70" loc="104:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2c3db41350" loc="130:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f2c3db3c410" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
              <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c3db43a90" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f2c3db43de0" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c3db3c130" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f2c3dace630" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c3dace020" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f2c3dace3a0" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f2c3dad1670" loc="15:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f2c3dacf620" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2c3dacf020" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2c3e20d720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2c3e20cd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f2c3dacf390" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f2c3dab10e0" loc="95:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2c3dab18f0" loc="105:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f2c3daaf790" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f2c3daaf020" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f2c3dab9120" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f2c3dab8560" loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f2c3dab62a0" loc="94:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c3dab6020" loc="94:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f2c3dab8de0" loc="79:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f2c3dab9c90" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c3dab9a10" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f2c3dab6b00" loc="100:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f2c3dab76e0" loc="85:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f2c3dac1990" loc="71:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f2c3dac0350" loc="81:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f2c3dac1020" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f2c3dac4c30" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f2c3dabf020" loc="91:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2c3dac0c50" loc="91:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f2c3dac3c60" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f2c3dabda60" loc="69:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c3dabd7e0" loc="69:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f2c3dabc5c0" loc="80:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f2c3dabc340" loc="80:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2c3d985c40" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f2c3d985670" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c3d9859b0" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f2c3d980a70" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f2c3d9807f0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f2c3d97f890" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f2c3d97f2c0" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c3d97f600" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f2c3d982610" loc="65:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f2c3d97c2c0" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f2c3d97d820" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c3d97db60" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f2c3d97c020" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f2c3d980020" loc="72:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2c3d984610" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f2c3d983bd0" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2c3d984020" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f2c3d984370" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2c3d95d5b0" loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f2c3d95d330" loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f2c3d95ddf0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f2c3d95ccf0" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f2c3d95c700" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f2c3d95ca60" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f2c3d959b50" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f2c3d901270" loc="53:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f2c3d901ba0" loc="61:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f2c3d8fd070" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f2c3d926450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f2c3d926870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f2c3d9059c0" loc="120:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f2c3d906990" loc="97:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f2c3d906020" loc="88:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f2c3d9051f0" loc="102:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f2c3d903470" loc="128:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f2c3d8f6510" loc="65:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f2c3d8f9cc0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f2c3d8ee2a0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c3d8ee020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f2c3d8ef780" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f2c3d8c9af0" loc="213:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f2c3d8d4790" loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f2c3d8e1530" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2c3d9553b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f2c3d955bf0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2c3d8e12b0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2c3d9553b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f2c3d955bf0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f2c3d8d7800" loc="123:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f2c3d8dea40" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2c3d950360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f2c3d950ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2c3d8de7c0" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2c3d950360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f2c3d950ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f2c3d8cee70" loc="180:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f2c3d8ca480" loc="197:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f2c3d8de020" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2c3d952290"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f2c3d952a20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f2c3d8dd270" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2c3d950360"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f2c3d950ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f2c3d8d9020" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f2c3d8dad30" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f2c3d8da610" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f2c3d8ce740" loc="179:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f2c3d8df780" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2c3d952290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f2c3d952a20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2c3d8df500" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2c3d952290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f2c3d952a20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f2c3d8dc420" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f2c3d8cc5d0" loc="181:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f2c3d8dce00" loc="90:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f2c3d8dcb80" loc="90:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f2c3d8d88c0" loc="113:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f2c3d8d7070" loc="118:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f2c3d8cf840" loc="177:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f2c3d8d1790" loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f2c3d8d57a0" loc="133:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f2c3d8ce020" loc="178:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f2c3d8d3020" loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f2c3d8cccf0" loc="182:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f2c3d8d9800" loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2c3d95e330"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f2c3d957a50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f2c3d8cb4c0" loc="187:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f2c3d8c9350" loc="207:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f2c3d8ddc10" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f2c3d8dd990" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2c3ed56520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f2c3d8c74d0" loc="224:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2c3d8c7250" loc="224:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f2c3d8e1d10" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2c3d9553b0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f2c3d955bf0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f2c3d8d5020" loc="128:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f2c3d8d3770" loc="153:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f2c3d8cf020" loc="174:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f2c3d926450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f2c3d926870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f2c3d8d0cf0" loc="174:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f2c3d926450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f2c3d926870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f2c3d8d02a0" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f2c3d938420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f2c3d938840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f2c3d8d0020" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f2c3d938420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f2c3d938840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f2c3d8c7d90" loc="231:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f2c3d8cbcb0" loc="192:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f2c3d8d8020" loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f2c3d8cabe0" loc="202:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f2c3d8d1020" loc="158:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f2c3d8d4020" loc="138:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f2c3d84f030" loc="95:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2c3d84f880" loc="105:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f2c3d7a9020" loc="90:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f2c3d7a9880" loc="98:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f2c3d7924a0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f2c3d779900" loc="56:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f2c3d778a20" loc="73:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f2c3d779070" loc="46:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f2c3d7781f0" loc="65:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f2c3d776390" loc="81:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f2c3d76cb60" loc="79:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2c3d775b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f2c3d76c8e0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2c3d775b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f2c3d771b90" loc="53:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f2c3d76d6f0" loc="62:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2c3d775b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f2c3d76d470" loc="62:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2c3d775b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f2c3d76c030" loc="70:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f2c3d775b40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f2c3d6ff4b0" loc="62:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f2c3d6991e0" loc="43:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c3d6991e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f2c3d6969e0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c3d6991e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f2c3d6954a0" loc="97:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2c3e6f1cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c3d6991e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f2c3d695220" loc="97:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c3d6991e0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f2c3ed5cc30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7f2c3ed5cc30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f2c3d692440" loc="108:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c3d6991e0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f2c3d6921c0" loc="108:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f2c3d697270" loc="57:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f2c3d696270" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f2c3d694610" loc="88:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2c3d6991e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f2c3d699a90" loc="50:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2c3e6fa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f2c3d6979f0" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2c3ed56160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f2c3d66f940" loc="49:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f2c3d66f6c0" loc="49:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
