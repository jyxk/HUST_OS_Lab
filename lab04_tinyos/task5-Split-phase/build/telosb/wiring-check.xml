<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="65:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7faa6eb70150"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7faa6edc8df0"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7faa6edc8df0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7faa6ec06590"/></to>
    </wire>
    <wire loc="67:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7faa6eb8b020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa6e73d370"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa6e73d370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faa6e8de610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7faa6eb7d670"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa6e737c90"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa6e737c90"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faa6e8de610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x7faa6eb78be0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa6e7306d0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa6e7306d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faa6e8de610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faa6eb66a80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faa6eb575a0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faa6eb575a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faa6eb50020"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa6edc3320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa6e18eb20"/></to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa6edc3320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa6dacdca0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa6edc3320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa6e619bc0"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa6edc3320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa6e1b8d70"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa6edc3320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa6e8d6400"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7faa6ec06c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7faa6f2583a0"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7faa6f2583a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7faa6ee03140"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7faa6ebf96c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa6edc5300"/></to>
    </wire>
    <wire loc="48:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faa6edc5300"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa6edbf510"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faa6ebf9dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7faa6edc3320"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7faa6edbfc20"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7faa6edc0910"/></to>
    </wire>
    <wire loc="46:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7faa6edc0910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa6eda0850"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7faa6edbe380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa6edc16d0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7faa6edbea60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa6eb28c40"/></to>
    </wire>
    <wire loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faa6eda0850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa6ed877e0"/></to>
    </wire>
    <wire loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7faa6ed97de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7faa6ed86020"/></to>
    </wire>
    <wire loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7faa6eedb4c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7faa6ed85360"/></to>
    </wire>
    <wire loc="113:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7faa6ed425a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa6ec7e6d0"/></to>
    </wire>
    <wire loc="126:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7faa6ed30020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa6ec77b30"/></to>
    </wire>
    <wire loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7faa6ed39700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa6ec84160"/></to>
    </wire>
    <wire loc="149:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7faa6ed1da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa6ec5dcb0"/></to>
    </wire>
    <wire loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7faa6ed40aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa6ec85480"/></to>
    </wire>
    <wire loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7faa6ed23020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa6ec5d020"/></to>
    </wire>
    <wire loc="170:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7faa6ed1aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa6ec46cb0"/></to>
    </wire>
    <wire loc="154:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7faa6ed2b5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa6ec57220"/></to>
    </wire>
    <wire loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7faa6ed43b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa6ecd59d0"/></to>
    </wire>
    <wire loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7faa6ed1fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa6ec6c2f0"/></to>
    </wire>
    <wire loc="134:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7faa6ed253e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa6ec6d610"/></to>
    </wire>
    <wire loc="133:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7faa6ed2f5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa6ec6e220"/></to>
    </wire>
    <wire loc="115:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7faa6ed38700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa6ec7c7a0"/></to>
    </wire>
    <wire loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7faa6ed1ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa6ec552f0"/></to>
    </wire>
    <wire loc="140:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7faa6ed2ebe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa6ec676d0"/></to>
    </wire>
    <wire loc="114:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7faa6ed3f890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa6ec7dac0"/></to>
    </wire>
    <wire loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7faa6ed53060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa6ece3540"/></to>
    </wire>
    <wire loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7faa6ed23da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa6ec56610"/></to>
    </wire>
    <wire loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7faa6ed490c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa6ec86020"/></to>
    </wire>
    <wire loc="161:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7faa6ed29a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa6ec506d0"/></to>
    </wire>
    <wire loc="101:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7faa6ed336d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa6ec8ca90"/></to>
    </wire>
    <wire loc="142:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7faa6ed1ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa6ec657a0"/></to>
    </wire>
    <wire loc="100:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7faa6ed3bcf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa6ec8dde0"/></to>
    </wire>
    <wire loc="141:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7faa6ed241f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa6ec66ac0"/></to>
    </wire>
    <wire loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7faa6ed1ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa6ec4d7a0"/></to>
    </wire>
    <wire loc="147:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7faa6ed2c0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa6ec5fb30"/></to>
    </wire>
    <wire loc="120:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7faa6ed326c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa6ecdb3e0"/></to>
    </wire>
    <wire loc="162:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7faa6ed22b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa6ec4eac0"/></to>
    </wire>
    <wire loc="128:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7faa6ed20a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faa6ec75cb0"/></to>
    </wire>
    <wire loc="169:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7faa6ed21a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa6ec46020"/></to>
    </wire>
    <wire loc="127:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7faa6ed26570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faa6ec75020"/></to>
    </wire>
    <wire loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7faa6ed27020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7faa6ec48b30"/></to>
    </wire>
    <wire loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7faa6ece1450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa6ece2d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7faa6ece1aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7faa6ec41aa0"/></to>
    </wire>
    <wire loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7faa6ece0120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7faa6ec3d260"/></to>
    </wire>
    <wire loc="102:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa6ec8b930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa6ece3540"/></to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa6ec89020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa6ece2d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa6ec83020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa6ece3540"/></to>
    </wire>
    <wire loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa6ec827a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa6ece2d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa6ec7b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa6ece3540"/></to>
    </wire>
    <wire loc="117:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa6ec7ac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa6ece2d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7faa6ecd92f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa6ecdabf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7faa6ecd9940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7faa6ec3d9f0"/></to>
    </wire>
    <wire loc="123:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7faa6ecd8020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7faa6ec3c240"/></to>
    </wire>
    <wire loc="129:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa6ec74b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa6ecdb3e0"/></to>
    </wire>
    <wire loc="130:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa6ec722f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa6ecdabf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa6ec6b160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa6ecdb3e0"/></to>
    </wire>
    <wire loc="137:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa6ec6a7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa6ecdabf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa6ec64610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa6ecdb3e0"/></to>
    </wire>
    <wire loc="144:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa6ec63c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa6ecdabf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa6ec5cb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa6ecdb3e0"/></to>
    </wire>
    <wire loc="151:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa6ec5a2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa6ecdabf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa6ec54160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa6ecdb3e0"/></to>
    </wire>
    <wire loc="158:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa6ec537a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa6ecdabf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa6ec4c610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa6ecdb3e0"/></to>
    </wire>
    <wire loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa6ec4bc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa6ecdabf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faa6ec45b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa6ecdb3e0"/></to>
    </wire>
    <wire loc="172:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7faa6ec432f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7faa6ecdabf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7faa6f2c74f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa6ee01040"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7faa6edfd490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7faa6f1ef3b0"/></to>
    </wire>
    <wire loc="68:BlinkC.nc">
      <from><interface-ref name="computeTask" scoped="" ref="0x7faa6eb64dd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa6f2c74f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faa6eb28c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa6eb538e0"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7faa6eb487b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7faa6eb2b360"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7faa6eb2b360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7faa6e910020"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7faa6eb4e980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7faa6eb2a6a0"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7faa6eb2a6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7faa6e8fcb90"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7faa6eb4dca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7faa6eb299c0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7faa6eb299c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7faa6e8f7710"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7faa6e8ff2f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7faa6ead0200"/></to>
    </wire>
    <wire loc="486:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7faa6ead0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9ad740"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7faa6e8fbde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7faa6eace200"/></to>
    </wire>
    <wire loc="487:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7faa6eace200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9a8100"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7faa6e8f6930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7faa6eacc200"/></to>
    </wire>
    <wire loc="488:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7faa6eacc200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9a4d10"/></to>
    </wire>
    <wire loc="442:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7faa6eb12020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea46100"/></to>
    </wire>
    <wire loc="455:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7faa6eafd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea17d10"/></to>
    </wire>
    <wire loc="531:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7faa6eab4560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea08d10"/></to>
    </wire>
    <wire loc="551:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7faa6ea8f570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e97c100"/></to>
    </wire>
    <wire loc="532:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7faa6eab2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea03740"/></to>
    </wire>
    <wire loc="460:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7faa6eaf9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea0c100"/></to>
    </wire>
    <wire loc="473:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7faa6eae5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9dde00"/></to>
    </wire>
    <wire loc="497:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7faa6eac0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e987d10"/></to>
    </wire>
    <wire loc="535:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7faa6eaab580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9fad10"/></to>
    </wire>
    <wire loc="545:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7faa6ea9b570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e999100"/></to>
    </wire>
    <wire loc="557:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7faa6ea87580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e978d10"/></to>
    </wire>
    <wire loc="445:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7faa6eb0b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea38100"/></to>
    </wire>
    <wire loc="536:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7faa6eaa9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9f5740"/></to>
    </wire>
    <wire loc="450:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7faa6eb07020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea2e740"/></to>
    </wire>
    <wire loc="463:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7faa6eaf3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9fe100"/></to>
    </wire>
    <wire loc="476:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7faa6eadf200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9cfd10"/></to>
    </wire>
    <wire loc="489:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7faa6eaca200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e99e740"/></to>
    </wire>
    <wire loc="500:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7faa6eaba200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e978d10"/></to>
    </wire>
    <wire loc="440:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7faa6eb16020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea50d10"/></to>
    </wire>
    <wire loc="453:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7faa6eb01020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea20860"/></to>
    </wire>
    <wire loc="466:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7faa6eaed020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9f0100"/></to>
    </wire>
    <wire loc="530:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7faa6eab6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea08d10"/></to>
    </wire>
    <wire loc="548:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7faa6ea95570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e98b100"/></to>
    </wire>
    <wire loc="555:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7faa6ea89570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e978d10"/></to>
    </wire>
    <wire loc="541:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7faa6eaa1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9b2d10"/></to>
    </wire>
    <wire loc="471:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7faa6eae9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9e6a60"/></to>
    </wire>
    <wire loc="484:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7faa6ead4200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9b6100"/></to>
    </wire>
    <wire loc="495:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7faa6eac4200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e990740"/></to>
    </wire>
    <wire loc="549:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7faa6ea93570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e987d10"/></to>
    </wire>
    <wire loc="538:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7faa6eaa7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9c0d10"/></to>
    </wire>
    <wire loc="443:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7faa6eb10020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea42d10"/></to>
    </wire>
    <wire loc="456:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7faa6eafb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea12740"/></to>
    </wire>
    <wire loc="493:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7faa6eac8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e999100"/></to>
    </wire>
    <wire loc="461:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7faa6eaf7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea08d10"/></to>
    </wire>
    <wire loc="474:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7faa6eae3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9d8740"/></to>
    </wire>
    <wire loc="498:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7faa6eabe200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e982740"/></to>
    </wire>
    <wire loc="540:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7faa6eaa3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9b6100"/></to>
    </wire>
    <wire loc="438:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7faa6eb23020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea596d0"/></to>
    </wire>
    <wire loc="451:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7faa6eb05020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea29100"/></to>
    </wire>
    <wire loc="464:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7faa6eaf1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9fad10"/></to>
    </wire>
    <wire loc="477:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7faa6eadc200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9ca740"/></to>
    </wire>
    <wire loc="542:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7faa6ea9f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9f0100"/></to>
    </wire>
    <wire loc="546:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7faa6ea99570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e995d10"/></to>
    </wire>
    <wire loc="552:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7faa6ea8d570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e978d10"/></to>
    </wire>
    <wire loc="482:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7faa6ead8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9c0d10"/></to>
    </wire>
    <wire loc="543:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7faa6ea9d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9ebd10"/></to>
    </wire>
    <wire loc="441:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7faa6eb14020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea4b740"/></to>
    </wire>
    <wire loc="454:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7faa6eaff020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea1b270"/></to>
    </wire>
    <wire loc="467:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7faa6eaeb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9ebd10"/></to>
    </wire>
    <wire loc="539:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7faa6eaa5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9bb740"/></to>
    </wire>
    <wire loc="550:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7faa6ea91570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e982740"/></to>
    </wire>
    <wire loc="472:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7faa6eae7200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9e1460"/></to>
    </wire>
    <wire loc="485:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7faa6ead2200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9b2d10"/></to>
    </wire>
    <wire loc="496:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7faa6eac2200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e98b100"/></to>
    </wire>
    <wire loc="444:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7faa6eb0e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea3d740"/></to>
    </wire>
    <wire loc="494:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7faa6eac6200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e995d10"/></to>
    </wire>
    <wire loc="449:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7faa6eb09020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea33d10"/></to>
    </wire>
    <wire loc="462:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7faa6eaf5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea03740"/></to>
    </wire>
    <wire loc="475:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7faa6eae1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9d3100"/></to>
    </wire>
    <wire loc="499:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7faa6eabc200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e97c100"/></to>
    </wire>
    <wire loc="439:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7faa6eb18020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea54100"/></to>
    </wire>
    <wire loc="452:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7faa6eb03020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea25d10"/></to>
    </wire>
    <wire loc="465:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7faa6eaef020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9f5740"/></to>
    </wire>
    <wire loc="478:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7faa6eada200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9c4100"/></to>
    </wire>
    <wire loc="534:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7faa6eaae560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9fe100"/></to>
    </wire>
    <wire loc="547:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7faa6ea97570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e990740"/></to>
    </wire>
    <wire loc="533:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7faa6eab0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9fe100"/></to>
    </wire>
    <wire loc="483:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7faa6ead6200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e9bb740"/></to>
    </wire>
    <wire loc="554:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7faa6ea8b570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e97c100"/></to>
    </wire>
    <wire loc="558:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7faa6ea85580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6e99e740"/></to>
    </wire>
    <wire loc="529:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7faa6eab81f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faa6ea0c100"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7faa6e8de610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faa6e8d51d0"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7faa6e8d51d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa6e75e150"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faa6e8d6400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa6e7d9020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7faa6e8cca80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7faa6e74f790"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faa6e7d9020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa6dcb0380"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7faa6e758640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faa6e7ad2f0"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7faa6e7a8850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7faa6e7d9870"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7faa6e7d9870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7faa6dca9020"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7faa6e745a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7faa6e852900"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7faa6e852900"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7faa6e835cf0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faa6dcb0380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa6dc94a30"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7faa6dca3780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7faa6dcb0bd0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7faa6dcb0bd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7faa6dc93340"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7faa6dca53d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7faa6e852900"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7faa6dc904c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7faa6dc9a7b0"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7faa6dc9a7b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7faa6e8ac8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7faa6dc8ea90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7faa6dc98da0"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7faa6dc98da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7faa6e8aa560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7faa6dc8dda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7faa6dc960c0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7faa6dc960c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7faa6e8a7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7faa6e8ac8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7faa6ed326c0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7faa6e8aa560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7faa6ed30020"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7faa6e8a7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7faa6ed26570"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7faa6e8ac8b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7faa6ed326c0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7faa6e8aa560"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7faa6ed2ebe0"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7faa6e8a7020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7faa6ed241f0"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7faa6e8ac8b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7faa6ed326c0"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7faa6e8aa560"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7faa6ed2c0c0"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7faa6e8a7020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7faa6ed23020"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7faa6e8ac8b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7faa6ed326c0"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7faa6e8aa560"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7faa6ed2b5a0"/></to>
    </wire>
    <wire loc="76:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7faa6e8a7020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7faa6ed23da0"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7faa6e8ac8b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7faa6ed326c0"/></to>
    </wire>
    <wire loc="79:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7faa6e8aa560"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7faa6ed29a50"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7faa6e8a7020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7faa6ed22b80"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7faa6e8ac8b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7faa6ed326c0"/></to>
    </wire>
    <wire loc="83:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7faa6e8aa560"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7faa6ed27020"/></to>
    </wire>
    <wire loc="84:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7faa6e8a7020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7faa6ed21a20"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7faa6e8170f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7faa6e850990"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7faa6e850990"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7faa6e849b80"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7faa6e83bc50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7faa6ed326c0"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7faa6e7a49c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa6f2c74f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7faa6e753a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa6f2c74f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7faa6e1b4020"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7faa6e1dc930"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7faa6e1af100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7faa6e1e3020"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7faa6e1e3020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7faa6dbf6750"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7faa6e1afd50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7faa6e1e3c30"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7faa6e1e3c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7faa6e67e7e0"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7faa6e1927e0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7faa6e1b25f0"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7faa6e67e7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7faa6e61d400"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7faa6e1e28b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7faa6e67d470"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7faa6e67d470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7faa6e61fcb0"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7faa6e1e0020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faa6e67ab20"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faa6e67ab20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faa6e61c060"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7faa6dbf5460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7faa6e6dacf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7faa6dbf30e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7faa6e67d470"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7faa6e6dacf0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7faa6e68e580"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7faa6e68d400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7faa6e6843f0"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7faa6e6843f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7faa6e6737d0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7faa6e68c060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7faa6e67d470"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7faa6e68b720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7faa6e67e7e0"/></to>
    </wire>
    <wire loc="169:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7faa6e68a480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa6f2c74f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7faa6e68ac60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa6f2c74f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7faa6e67f3b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7faa6e6162f0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7faa6e6162f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7faa6e605450"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7faa6e67e1d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7faa6e61f6c0"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faa6e619bc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faa6e607d60"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faa6e612940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faa6e677620"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7faa6e61c9f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7faa6e615e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7faa6e61b760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7faa6e615320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7faa6e612020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7faa6e1fa8d0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7faa6e615e10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7faa6e4d3830"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7faa6e615320"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7faa6e4d3110"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7faa6e4d2760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7faa6e612020"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faa6e5fedc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faa6e612940"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faa6e4cf590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faa6e612940"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faa6e4c7cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faa6e612940"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7faa6e4d10e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7faa6e5fbad0"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7faa6e4d19d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7faa6e5ff4a0"/></to>
    </wire>
    <wire loc="77:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7faa6e5f5e30"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7faa6e4cbb70"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7faa6e5f1e00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7faa6e4a1080"/></to>
    </wire>
    <wire loc="17:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7faa6e4a1080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7faa6e20d0c0"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7faa6e4bdd20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7faa6e4a1890"/></to>
    </wire>
    <wire loc="13:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7faa6e4a1890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7faa6e213440"/></to>
    </wire>
    <wire loc="332:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7faa6e59ee40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa6f2c74f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7faa6e5d5d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa6f2c74f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7faa6e5a0400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa6f2c74f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7faa6e5990c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa6f2c74f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7faa6e4cec50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa6f2c74f0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7faa6e4cd480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa6f2c74f0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7faa6e49f020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7faa6e212440"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7faa6e212440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7faa6e434210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7faa6e213440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7faa6e438b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7faa6e211020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7faa6e20d920"/></to>
    </wire>
    <wire loc="19:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faa6e20c020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faa6e214020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faa6e214020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faa6e43a320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7faa6e214c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7faa6db37020"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7faa6db37020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7faa6e2ded50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7faa6e432600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7faa6e211020"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7faa6db30440"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7faa6e436dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7faa6e433370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faa6db38340"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faa6db38340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faa6e2dfa60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7faa6e42dbe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7faa6db31c10"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7faa6db31c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7faa6e2e2ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7faa6e436dd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7faa6e3a8e70"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7faa6e434210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7faa6e3a6890"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7faa6e438b50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7faa6e3a7790"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faa6e43a320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faa6e3a80d0"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7faa6e3a43e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7faa6e432600"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7faa6e3a55b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7faa6e433370"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7faa6e39f5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7faa6e42dbe0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7faa6e3a4a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7faa6e391550"/></to>
    </wire>
    <wire loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7faa6e391550"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7faa6e387cc0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7faa6e39e020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7faa6e2fa110"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7faa6e2fa110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7faa6e850990"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faa6e39b120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faa6eb575a0"/></to>
    </wire>
    <wire loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7faa6e38b080"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7faa6e382910"/></to>
    </wire>
    <wire loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7faa6e38fca0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7faa6e387410"/></to>
    </wire>
    <wire loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7faa6e381210"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7faa6eaa5580"/></to>
    </wire>
    <wire loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7faa6e37f1f0"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7faa6eaa3580"/></to>
    </wire>
    <wire loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7faa6e37d1f0"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7faa6eaa1580"/></to>
    </wire>
    <wire loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7faa6e37a1f0"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7faa6ea9d580"/></to>
    </wire>
    <wire loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7faa6e3781f0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7faa6ea9f580"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7faa6db35020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7faa6e391550"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7faa6db377c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7faa6e2db590"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7faa6e2db590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7faa6e248060"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7faa6e2d9370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7faa6db30440"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7faa6e2ded50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7faa6e24abf0"/></to>
    </wire>
    <wire loc="106:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7faa6e24abf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7faa6dac83a0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7faa6e2e2ce0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7faa6e2d65c0"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faa6e2dfa60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faa6e24be60"/></to>
    </wire>
    <wire loc="105:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faa6e24be60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faa6dac9540"/></to>
    </wire>
    <wire loc="108:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7faa6e248060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7faa6dac78b0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7faa6e2c5690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7faa6e38b080"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7faa6e248930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7faa6e2d9370"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7faa6e2c34b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7faa6e248060"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faa6e22d9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faa6e249400"/></to>
    </wire>
    <wire loc="107:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faa6e249400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faa6dac8b20"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7faa6e243b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7faa6e38fca0"/></to>
    </wire>
    <wire loc="109:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7faa6dac6210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7faa6e248930"/></to>
    </wire>
    <wire loc="111:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7faa6dac69d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7faa6dacb330"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7faa6dac3c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa6f2c74f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7faa6da933a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7faa6e243b20"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7faa6da93b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7faa6e22d400"/></to>
    </wire>
    <wire loc="84:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faa6da920f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faa6e22d9d0"/></to>
    </wire>
    <wire loc="85:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7faa6da92d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7faa6e22c720"/></to>
    </wire>
    <wire loc="114:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7faa6e1a81d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faa6f2c74f0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7faa6e18a300"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7faa6e1927e0"/></to>
    </wire>
    <wire loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7faa6e1820f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7faa6edc8df0"/></to>
    </wire>
    <wire loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7faa6e182810"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7faa6e67f3b0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/jyxk/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/jyxk/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/jyxk/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BlinkC" loc="51:BlinkC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/jyxk/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6ebed680"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa6ebed9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6ebed680"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa6ebed9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6ebed680"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa6ebed9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6ebed680"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa6ebed9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7faa6eba1550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BigQueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7faa6ed15890" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7faa6ed15c30" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7faa6ed14020" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7faa6ed143a0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7faa6ed14720" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7faa6ed14a90" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7faa6ed14e20" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7faa6ed12200" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7faa6ed125d0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7faa6ecd7e80" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7faa6ecd3270" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7faa6ea80a10" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7faa6ea80dc0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7faa6ea7e1a0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7faa6ea7e550" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7faa6ea7e8c0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7faa6e88ccc0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7faa6e88ccc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7faa6e84aa40" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7faa6e84aa40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7faa6e834570" loc="55:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7faa6e834570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7faa6e834d40" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7faa6e834d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7faa6e833160" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7faa6e833160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7faa6e833940" loc="58:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7faa6e833940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7faa6e833d10" loc="59:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7faa6e832540" loc="60:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7faa6e832540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7faa6e8136e0" loc="52:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7faa6e8136e0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7faa6e810020" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7faa6e810020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7faa6e810410" loc="54:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7faa6e810410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7faa6e810bf0" loc="55:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7faa6e810bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7faa6e80f020" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faa6e7d4cd0" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faa6e7d4cd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faa6e79e230" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faa6e79e230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7faa6e79e560" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faa6e750de0" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faa6e750de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7faa6e7278c0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7faa6eba1550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7faa6e6f60d0" loc="43:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7faa6eba1550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7faa6e6d30d0" loc="45:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7faa6e2be020" loc="89:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7faa6e2b10d0" loc="42:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7faa6e296800" loc="52:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BigQueueC" loc="42:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7faa6e1de500" loc="42:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7faa6e1de500"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7faa6e1de890" loc="42:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7faa6edc3320" loc="58:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7faa6edc3320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6edc36a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7faa6edc8df0" loc="57:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7faa6edc8df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7faa6edc71c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa6edc5300" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa6edc5300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6edc5680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7faa6edbe380" loc="6:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7faa6edbe380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6edbe700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa6edbf510" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa6edbf510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6edbf890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7faa6edbfc20" loc="5:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7faa6edbfc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6edbe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7faa6edbea60" loc="7:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7faa6edbea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6edbede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa6edc16d0" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa6edc16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6edc1a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7faa6edc0910" loc="39:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7faa6edc0910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6edc0c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7faa6ed97de0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7faa6ed97de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7faa6ed9cc70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7faa6ed9c310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7faa6ed9c4a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7faa6ed9c630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7faa6ed9c180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7faa6ed9c7c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7faa6ed9c950"/>
        <function-ref name="initClocks" scoped="" ref="0x7faa6ed9cae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa6eda0850" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa6eda0850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6eda0bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7faa6ed86020" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7faa6ed86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7faa6ed85020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7faa6ed86530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7faa6ed866c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7faa6ed86850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7faa6ed863a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7faa6ed869e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7faa6ed86b70"/>
        <function-ref name="initClocks" scoped="" ref="0x7faa6ed86d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7faa6ed85360" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7faa6ed85360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7faa6ed856e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa6ed877e0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa6ed877e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6ed87b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7faa6ed425a0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7faa6ed425a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ed42920"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ed42ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ed42c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ed42dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ed41020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ed411b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ed41340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ed414d0"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ed41660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7faa6ed30020" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7faa6ed30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ed303a0"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ed30530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ed306c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ed30850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ed309e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ed30b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ed30d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ed2f020"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ed2f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7faa6ed39700" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7faa6ed39700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed39a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ed39c10"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ed39da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ed38020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ed381b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ed38340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7faa6ed1da20" loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7faa6ed1da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed1dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ed1c020"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ed1c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ed1c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ed1c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ed1c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7faa6ed40aa0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7faa6ed40aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed40e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ed3f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ed3f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ed3f340"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ed3f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7faa6ed23020" loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7faa6ed23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed233a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ed23530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ed236c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ed23850"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ed239e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7faa6ed1aa20" loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7faa6ed1aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed1ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ed19020"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ed191b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ed19340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ed194d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ed19660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7faa6ed2b5a0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7faa6ed2b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ed2b920"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ed2bab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ed2bc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ed2bdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ed29020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ed291b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ed29340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ed294d0"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ed29660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7faa6ed43b10" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7faa6ed43b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ed4a020"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ed4a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ed4a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ed4a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ed4a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ed4a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ed4a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ed4ab10"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ed4aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7faa6ed1fa20" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7faa6ed1fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed1fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ed1e020"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ed1e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ed1e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ed1e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ed1e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7faa6ed253e0" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7faa6ed253e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed25760"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ed258f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ed25a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ed25c10"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ed25da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7faa6ed2f5a0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7faa6ed2f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ed2fa20"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ed2fbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ed2fd40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ed2e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ed2e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ed2e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ed2e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ed2e660"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ed2e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7faa6ed38700" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7faa6ed38700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed38a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ed38c10"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ed38da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ed32020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ed321b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ed32340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7faa6ed1ca20" loc="69:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7faa6ed1ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed1cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ed1b020"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ed1b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ed1b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ed1b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ed1b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7faa6ed2ebe0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7faa6ed2ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ed2d020"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ed2d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ed2d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ed2d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ed2d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ed2d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ed2d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ed2db10"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ed2dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7faa6ed3f890" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7faa6ed3f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed3fc10"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ed3fda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ed3a020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ed3a1b0"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ed3a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7faa6ed53060" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7faa6ed53060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6ed533e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6ed53570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ed53700"/>
        <function-ref name="get" scoped="" ref="0x7faa6ed53890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ed53a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ed53bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6ed53d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ed52020"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6ed521b0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6ed52340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6ed524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7faa6ed23da0" loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7faa6ed23da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed22180"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ed22310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ed224a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ed22630"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ed227c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7faa6ed490c0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7faa6ed490c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ed49440"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ed495d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ed49760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ed498f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ed49a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ed49c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ed49da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ed42020"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ed421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7faa6ed29a50" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7faa6ed29a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ed29dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ed28020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ed281b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ed28340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ed284d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ed28660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ed287f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ed28980"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ed28b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7faa6ed336d0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7faa6ed336d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed33a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ed33be0"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ed33d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ed39020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ed391b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ed39340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7faa6ed1ea20" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7faa6ed1ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed1eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ed1d020"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ed1d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ed1d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ed1d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ed1d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7faa6ed3bcf0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7faa6ed3bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed400a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ed40230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ed403c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ed40550"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ed406e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7faa6ed241f0" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7faa6ed241f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed24570"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ed24700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ed24890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ed24a20"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ed24bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7faa6ed1ba20" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7faa6ed1ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed1bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ed1a020"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ed1a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ed1a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ed1a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ed1a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7faa6ed2c0c0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7faa6ed2c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ed2c440"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ed2c5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ed2c760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ed2c8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ed2ca80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ed2cc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ed2cda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ed2b020"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ed2b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7faa6ed326c0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7faa6ed326c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6ed32a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6ed32bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ed32d60"/>
        <function-ref name="get" scoped="" ref="0x7faa6ed31020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ed311b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ed31340"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6ed314d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ed31660"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6ed317f0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6ed31980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6ed31b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7faa6ed22b80" loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7faa6ed22b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed21020"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ed211b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ed21340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ed214d0"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ed21660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7faa6ed20a20" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7faa6ed20a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed20da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ed1f020"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ed1f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ed1f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ed1f4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ed1f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7faa6ed21a20" loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7faa6ed21a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed20020"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ed201b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ed20340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ed204d0"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ed20660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7faa6ed26570" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7faa6ed26570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ed268f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ed26a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ed26c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ed26da0"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ed25020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7faa6ed27020" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7faa6ed27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ed273a0"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ed27530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ed276c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ed27850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ed279e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ed27b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ed27d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ed26020"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ed261b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7faa6ece1aa0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7faa6ece1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ece1e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7faa6ece1450" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7faa6ece1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ece17d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7faa6ece0120" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7faa6ece0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ece04a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7faa6ece2d80" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa6ece2d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ece1180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faa6ece3540" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa6ece3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6ece38c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6ece3a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ece3be0"/>
        <function-ref name="get" scoped="" ref="0x7faa6ece3d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ece2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ece21b0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6ece2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ece24d0"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6ece2660"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6ece27f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6ece2980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7faa6ecd9940" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7faa6ecd9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ecd9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7faa6ecd92f0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7faa6ecd92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ecd9670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7faa6ecd8020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7faa6ecd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ecd83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7faa6ecdabf0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa6ecdabf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ecd9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faa6ecdb3e0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa6ecdb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6ecdb760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6ecdb8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ecdba80"/>
        <function-ref name="get" scoped="" ref="0x7faa6ecdbc10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ecdbda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ecda020"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6ecda1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ecda340"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6ecda4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6ecda660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6ecda7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa6ec8ca90" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa6ec8ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec8ce10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ec8b020"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ec8b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec8b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec8b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ec8b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa6ecd59d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa6ecd59d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ecd5d50"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ec8d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec8d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ec8d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ec8d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec8d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ec8d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ec8d980"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ec8db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa6ec89020" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa6ec89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ec893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa6ec8dde0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa6ec8dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec8c180"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ec8c310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ec8c4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ec8c630"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ec8c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa6ec8b930" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa6ec8b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6ec8bcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6ec8be40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec8a020"/>
        <function-ref name="get" scoped="" ref="0x7faa6ec8a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec8a340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec8a4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6ec8a660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec8a7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6ec8a980"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6ec8ab10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6ec8aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa6ec84160" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa6ec84160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec844e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ec84670"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ec84800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec84990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec84b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ec84cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa6ec86020" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa6ec86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ec863a0"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ec86530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec866c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ec86850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ec869e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec86b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ec86d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ec85020"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ec851b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa6ec827a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa6ec827a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ec82b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa6ec85480" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa6ec85480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec85800"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ec85990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ec85b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ec85cb0"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ec85e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa6ec83020" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa6ec83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6ec833a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6ec83530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec836c0"/>
        <function-ref name="get" scoped="" ref="0x7faa6ec83850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec839e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec83b70"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6ec83d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec82020"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6ec821b0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6ec82340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6ec824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa6ec7c7a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa6ec7c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec7cb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ec7ccb0"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ec7ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec7b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec7b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ec7b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa6ec7e6d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa6ec7e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ec7ea50"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ec7ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec7ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ec7d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ec7d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec7d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ec7d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ec7d660"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ec7d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa6ec7ac50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa6ec7ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ec79020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa6ec7dac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa6ec7dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec7de40"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ec7c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ec7c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ec7c340"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ec7c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa6ec7b610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa6ec7b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6ec7b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6ec7bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec7bcb0"/>
        <function-ref name="get" scoped="" ref="0x7faa6ec7be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec7a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec7a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6ec7a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec7a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6ec7a660"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6ec7a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6ec7a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa6ec75cb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa6ec75cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec740a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ec74230"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ec743c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec74550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec746e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ec74870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa6ec77b30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa6ec77b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ec76020"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ec761b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec76340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ec764d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ec76660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec767f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ec76980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ec76b10"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ec76ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa6ec722f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa6ec722f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ec72670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa6ec75020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa6ec75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec753a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ec75530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ec756c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ec75850"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ec759e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa6ec74b40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa6ec74b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6ec73020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6ec731b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec73340"/>
        <function-ref name="get" scoped="" ref="0x7faa6ec734d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec73660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec737f0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6ec73980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec73b10"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6ec73ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6ec73e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6ec72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa6ec6c2f0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa6ec6c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec6c670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ec6c800"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ec6c990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec6cb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec6ccb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ec6ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa6ec6e220" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa6ec6e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ec6e5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ec6e730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec6e8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ec6ea50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ec6ebe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec6ed70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ec6d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ec6d1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ec6d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa6ec6a7a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa6ec6a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ec6ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa6ec6d610" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa6ec6d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec6d990"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ec6db20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ec6dcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ec6de40"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ec6c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa6ec6b160" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa6ec6b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6ec6b4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6ec6b670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec6b800"/>
        <function-ref name="get" scoped="" ref="0x7faa6ec6b990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec6bb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec6bcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6ec6be40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec6a020"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6ec6a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6ec6a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6ec6a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa6ec657a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa6ec657a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec65b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ec65cb0"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ec65e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec64020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec641b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ec64340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa6ec676d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa6ec676d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ec67a50"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ec67be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec67d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ec66020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ec661b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec66340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ec664d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ec66660"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ec667f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa6ec63c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa6ec63c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ec62020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa6ec66ac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa6ec66ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec66e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ec65020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ec651b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ec65340"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ec654d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa6ec64610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa6ec64610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6ec64990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6ec64b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec64cb0"/>
        <function-ref name="get" scoped="" ref="0x7faa6ec64e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec63020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec631b0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6ec63340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec634d0"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6ec63660"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6ec637f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6ec63980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa6ec5dcb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa6ec5dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec5c0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ec5c230"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ec5c3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec5c550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec5c6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ec5c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa6ec5fb30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa6ec5fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ec5e020"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ec5e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec5e340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ec5e4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ec5e660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec5e7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ec5e980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ec5eb10"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ec5eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa6ec5a2f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa6ec5a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ec5a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa6ec5d020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa6ec5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec5d3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ec5d530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ec5d6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ec5d850"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ec5d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa6ec5cb40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa6ec5cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6ec5b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6ec5b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec5b340"/>
        <function-ref name="get" scoped="" ref="0x7faa6ec5b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec5b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec5b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6ec5b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec5bb10"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6ec5bca0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6ec5be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6ec5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa6ec552f0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa6ec552f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec55670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ec55800"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ec55990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec55b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec55cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ec55e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa6ec57220" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa6ec57220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ec575a0"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ec57730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec578c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ec57a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ec57be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec57d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ec56020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ec561b0"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ec56340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa6ec537a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa6ec537a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ec53b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa6ec56610" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa6ec56610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec56990"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ec56b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ec56cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ec56e40"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ec55020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa6ec54160" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa6ec54160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6ec544e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6ec54670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec54800"/>
        <function-ref name="get" scoped="" ref="0x7faa6ec54990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec54b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec54cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6ec54e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec53020"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6ec531b0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6ec53340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6ec534d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa6ec4d7a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa6ec4d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec4db20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ec4dcb0"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ec4de40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec4c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec4c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ec4c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa6ec506d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa6ec506d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ec50a50"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ec50be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec50d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ec4e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ec4e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec4e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ec4e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ec4e660"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ec4e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa6ec4bc50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa6ec4bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ec4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa6ec4eac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa6ec4eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec4ee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ec4d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ec4d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ec4d340"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ec4d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa6ec4c610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa6ec4c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6ec4c990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6ec4cb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec4ccb0"/>
        <function-ref name="get" scoped="" ref="0x7faa6ec4ce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec4b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec4b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6ec4b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec4b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6ec4b660"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6ec4b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6ec4b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faa6ec46cb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7faa6ec46cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec450a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7faa6ec45230"/>
        <function-ref name="captured" scoped="" ref="0x7faa6ec453c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec45550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec456e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7faa6ec45870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7faa6ec48b30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7faa6ec48b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6ec47020"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6ec471b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec47340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6ec474d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6ec47660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec477f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6ec47980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6ec47b10"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6ec47ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7faa6ec432f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7faa6ec432f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ec43670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faa6ec46020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7faa6ec46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6ec463a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6ec46530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6ec466c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6ec46850"/>
        <function-ref name="fired" scoped="" ref="0x7faa6ec469e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faa6ec45b40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa6ec45b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6ec44020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6ec441b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6ec44340"/>
        <function-ref name="get" scoped="" ref="0x7faa6ec444d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6ec44660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6ec447f0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6ec44980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6ec44b10"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6ec44ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6ec44e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6ec43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7faa6ec3c240" loc="7:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7faa6ec3c240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ec3c5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7faa6ec41aa0" loc="4:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7faa6ec41aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ec41e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7faa6ec3d260" loc="5:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7faa6ec3d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ec3d5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7faa6ec3d9f0" loc="6:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7faa6ec3d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6ec3dd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7faa6eedb4c0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7faa6eedb4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7faa6eedb840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7faa6f1ef3b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7faa6f1ef3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7faa6f1ef730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7faa6f1ef8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7faa6f1efa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7faa6f017be0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7faa6f017be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7faa6f153020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7faa6ed9eb50" loc="39:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7faa6ed9eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7faa6ec05b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7faa6ec051b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7faa6ec05340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7faa6ec054d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7faa6ec05020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7faa6ec05660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7faa6ec057f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7faa6ec05980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7faa6ebf9dc0" loc="60:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7faa6ebf9dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6ebf8180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7faa6ec06590" loc="57:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7faa6ec06590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7faa6ec06910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7faa6ebf96c0" loc="59:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7faa6ebf96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6ebf9a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7faa6ec06c00" loc="58:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7faa6ec06c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6ebf9020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7faa6ebf91b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7faa6ebf9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7faa6f2c74f0" loc="48:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7faa6f2c74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa6f2c7870"/>
        <function-ref name="runTask" scoped="" ref="0x7faa6f2c7a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7faa6f2583a0" loc="47:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7faa6f2583a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6f258720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7faa6f2588b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7faa6f258a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7faa6ee01040" loc="56:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7faa6ee01040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa6ee013c0"/>
        <function-ref name="runTask" scoped="" ref="0x7faa6ee01550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7faa6edfd490" loc="57:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7faa6edfd490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7faa6edfd810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7faa6edfd9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7faa6edfdb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7faa6ee03140" loc="55:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7faa6ee03140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6ee034c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7faa6ee03650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7faa6ee037e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x7faa6eb8b020" loc="53:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer0" scoped="" ref="0x7faa6eb8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa6eb7e630"/>
        <function-ref name="fired" scoped="" ref="0x7faa6eb8aa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faa6eb7f920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faa6eb7f4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7faa6eb7d020"/>
        <function-ref name="gett0" scoped="" ref="0x7faa6eb7eab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa6eb7f020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faa6eb8bc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faa6eb7e020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faa6eb8a110"/>
        <function-ref name="stop" scoped="" ref="0x7faa6eb8a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7faa6eb70150" loc="57:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7faa6eb70150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7faa6eb704d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="computeTask" ref="0x7faa6eb64dd0" loc="68:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="computeTask" scoped="" ref="0x7faa6eb64dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa6eb63180"/>
        <function-ref name="runTask" scoped="" ref="0x7faa6eb63310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7faa6eb7d670" loc="54:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x7faa6eb7d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa6eb79c40"/>
        <function-ref name="fired" scoped="" ref="0x7faa6eb7a1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faa6eb79020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faa6eb7aae0"/>
        <function-ref name="getdt" scoped="" ref="0x7faa6eb78590"/>
        <function-ref name="gett0" scoped="" ref="0x7faa6eb78110"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa6eb7a660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faa6eb7c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faa6eb79630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faa6eb7c860"/>
        <function-ref name="stop" scoped="" ref="0x7faa6eb7cd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faa6eb66a80" loc="56:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7faa6eb66a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faa6eb66e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faa6eb71020"/>
        <function-ref name="led1On" scoped="" ref="0x7faa6eb711b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faa6eb71340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faa6eb714d0"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb71660"/>
        <function-ref name="led1Off" scoped="" ref="0x7faa6eb717f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7faa6eb71e30"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb71980"/>
        <function-ref name="led0On" scoped="" ref="0x7faa6eb71b10"/>
        <function-ref name="led2On" scoped="" ref="0x7faa6eb71ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x7faa6eb78be0" loc="55:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer2" scoped="" ref="0x7faa6eb78be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa6eb73110"/>
        <function-ref name="fired" scoped="" ref="0x7faa6eb756a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faa6eb744a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faa6eb74020"/>
        <function-ref name="getdt" scoped="" ref="0x7faa6eb73a10"/>
        <function-ref name="gett0" scoped="" ref="0x7faa6eb73590"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa6eb75b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faa6eb77860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faa6eb74ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faa6eb77d30"/>
        <function-ref name="stop" scoped="" ref="0x7faa6eb75220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7faa6eb575a0" loc="46:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7faa6eb575a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faa6eb57920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faa6eb57ab0"/>
        <function-ref name="led1On" scoped="" ref="0x7faa6eb57c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faa6eb57dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faa6eb54020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb541b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7faa6eb54340"/>
        <function-ref name="led2Off" scoped="" ref="0x7faa6eb54980"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb544d0"/>
        <function-ref name="led0On" scoped="" ref="0x7faa6eb54660"/>
        <function-ref name="led2On" scoped="" ref="0x7faa6eb547f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7faa6eb487b0" loc="50:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7faa6eb487b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb48b30"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb48cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb48e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb4e020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb4e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb4e340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb4e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb4e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa6eb538e0" loc="46:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa6eb538e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6eb53c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7faa6eb4e980" loc="51:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7faa6eb4e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb4ed00"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb4d020"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb4d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb4d340"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb4d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb4d660"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb4d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb4d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7faa6eb50020" loc="47:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7faa6eb50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faa6eb503a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faa6eb50530"/>
        <function-ref name="led1On" scoped="" ref="0x7faa6eb506c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faa6eb50850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faa6eb509e0"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb50b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7faa6eb50d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7faa6eb4f4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb4f020"/>
        <function-ref name="led0On" scoped="" ref="0x7faa6eb4f1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7faa6eb4f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7faa6eb4dca0" loc="52:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7faa6eb4dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb470a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb47230"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb473c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb47550"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb476e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb47870"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb47a00"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb47b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7faa6eb2b360" loc="41:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7faa6eb2b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb2b6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb2b870"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb2ba00"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb2bb90"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb2bd20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb2a020"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb2a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb2a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7faa6eb2a6a0" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7faa6eb2a6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb2aa20"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb2abb0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb2ad40"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb29020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb291b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb29340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb294d0"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb29660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7faa6eb28c40" loc="44:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa6eb28c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6eb27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7faa6eb299c0" loc="43:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7faa6eb299c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb29d40"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb28020"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb281b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb28340"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb284d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb28660"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb287f0"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb28980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7faa6eb12020" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7faa6eb12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb123a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb12530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eb126c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb12850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb129e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eb12b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb12d00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb11020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eb111b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eb11340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb114d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eb11660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eb117f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eb11a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb11c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7faa6eafd020" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7faa6eafd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eafd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eafd530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eafd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eafd850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eafd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eafdb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eafdd00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eafc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eafc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eafc340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eafc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eafc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eafc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eafca80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eafcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7faa6eab4560" loc="145:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7faa6eab4560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eab48e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eab4a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eab4c00"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eab4d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eab3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eab31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eab3340"/>
        <function-ref name="get" scoped="" ref="0x7faa6eab34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eab3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eab37f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eab3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eab3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eab3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eab2020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eab21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7faa6ea8f570" loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7faa6ea8f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea8f8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea8fa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea8fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea8fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea8e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea8e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea8e340"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea8e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea8e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea8e7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea8e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea8eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea8eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea8d020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7faa6eab2580" loc="146:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7faa6eab2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eab2900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eab2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eab2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eab2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eab1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eab11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eab1340"/>
        <function-ref name="get" scoped="" ref="0x7faa6eab14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eab1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eab17f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eab1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eab1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eab1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eab0020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eab01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7faa6eaf9020" loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7faa6eaf9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaf93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaf9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaf96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eaf9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaf99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaf9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eaf9d00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eaf8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eaf81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eaf8340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eaf84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eaf8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eaf87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eaf8a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eaf8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7faa6eae5200" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7faa6eae5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eae5580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eae5710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eae58a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eae5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eae5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eae5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eae4020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eae41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eae4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eae44d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eae4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eae47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eae4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eae4c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eae4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7faa6ead0200" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7faa6ead0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ead0580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ead0710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ead08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ead0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ead0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ead0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eacf020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eacf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eacf340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eacf4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eacf660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eacf7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eacf980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eacfc10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eacfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7faa6eac0200" loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7faa6eac0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eac0580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eac0710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eac08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eac0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eac0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eac0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eabf020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eabf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eabf340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eabf4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eabf660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eabf7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eabf980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eabfc10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eabfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7faa6eaab580" loc="149:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7faa6eaab580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaab900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaaba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaabc20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eaabdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaaa020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaaa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eaaa340"/>
        <function-ref name="get" scoped="" ref="0x7faa6eaaa4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eaaa660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eaaa7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eaaa980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eaaab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eaaaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eaa9020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eaa91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7faa6ea9b570" loc="159:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7faa6ea9b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea9b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea9ba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea9bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea9bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea9a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea9a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea9a340"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea9a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea9a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea9a7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea9a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea9ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea9aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea99020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7faa6ea87580" loc="171:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7faa6ea87580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea87900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea87a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea87c20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea87db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea86020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea861b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea86340"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea864d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea86660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea867f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea86980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea86b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea86ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea85020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7faa6eb0b020" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7faa6eb0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb0b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb0b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eb0b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb0b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb0b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eb0bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb0bd00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb0a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eb0a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eb0a340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb0a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eb0a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eb0a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eb0aa80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb0ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7faa6eaa9580" loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7faa6eaa9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaa9900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaa9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaa9c20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eaa9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaa8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaa81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eaa8340"/>
        <function-ref name="get" scoped="" ref="0x7faa6eaa84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eaa8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eaa87f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eaa8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eaa8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eaa8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eaa7020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eaa71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7faa6eb07020" loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7faa6eb07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb073a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb07530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eb076c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb07850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb079e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eb07b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb07d00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb06020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eb061b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eb06340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb064d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eb06660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eb067f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eb06a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb06c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7faa6eaf3020" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7faa6eaf3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaf33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaf3530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaf36c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eaf3850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaf39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaf3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eaf3d00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eaf2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eaf21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eaf2340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eaf24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eaf2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eaf27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eaf2a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eaf2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7faa6eadf200" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7faa6eadf200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eadf580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eadf710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eadf8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eadfa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eadfbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eadfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eade020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eade1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eade340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eade4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eade660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eade7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eade980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eadec10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eadeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7faa6eaca200" loc="100:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7faa6eaca200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaca580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaca710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaca8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eacaa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eacabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eacad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eac9020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eac91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eac9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eac94d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eac9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eac97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eac9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eac9c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eac9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7faa6eaba200" loc="111:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7faa6eaba200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaba580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaba710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaba8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eabaa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eababc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eabad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eab9020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eab91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eab9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eab94d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eab9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eab97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eab9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eab9c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eab9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7faa6eb16020" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7faa6eb16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb163a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb16530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eb166c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb16850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb169e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eb16b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb16d00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb15020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eb151b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eb15340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb154d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eb15660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eb157f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eb15a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb15c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7faa6eb01020" loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7faa6eb01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb014a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb01630"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eb017c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb01950"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb01ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eb01c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb01e00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb00020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eb001b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eb00340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb004d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eb00660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eb007f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eb00a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb00c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7faa6eaed020" loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7faa6eaed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaed3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaed530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaed6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eaed850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaed9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaedb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eaedd00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eaec020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eaec1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eaec340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eaec4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eaec660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eaec7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eaeca80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eaecc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7faa6eab6580" loc="144:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7faa6eab6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eab6900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eab6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eab6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eab6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eab5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eab51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eab5340"/>
        <function-ref name="get" scoped="" ref="0x7faa6eab54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eab5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eab57f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eab5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eab5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eab5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eab4020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eab41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7faa6ea95570" loc="162:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7faa6ea95570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea958f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea95a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea95c10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea95da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea94020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea941b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea94340"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea944d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea94660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea947f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea94980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea94b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea94ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea93020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea931b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7faa6ea89570" loc="169:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7faa6ea89570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea898f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea89a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea89c10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea89da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea88020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea881b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea88340"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea884d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea88660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea887f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea88980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea88b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea88ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea87020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7faa6eaa1580" loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7faa6eaa1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaa1900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaa1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaa1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eaa1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaa0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaa01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eaa0340"/>
        <function-ref name="get" scoped="" ref="0x7faa6eaa04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eaa0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eaa07f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eaa0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eaa0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eaa0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea9f020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea9f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7faa6eae9020" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7faa6eae9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eae95a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eae9730"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eae98c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eae9a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eae9be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eae9d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eae8020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eae81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eae8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eae84d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eae8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eae87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eae8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eae8c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eae8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7faa6ead4200" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7faa6ead4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ead4580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ead4710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ead48a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ead4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ead4bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ead4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ead3020"/>
        <function-ref name="get" scoped="" ref="0x7faa6ead31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ead3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ead34d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ead3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ead37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ead3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ead3c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ead3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7faa6eac4200" loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7faa6eac4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eac4580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eac4710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eac48a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eac4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eac4bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eac4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eac3020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eac31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eac3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eac34d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eac3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eac37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eac3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eac3c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eac3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7faa6ea93570" loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7faa6ea93570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea938f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea93a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea93c10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea93da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea92020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea921b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea92340"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea924d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea92660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea927f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea92980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea92b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea92ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea91020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7faa6eaa7570" loc="152:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7faa6eaa7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaa78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaa7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaa7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eaa7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaa6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaa61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eaa6340"/>
        <function-ref name="get" scoped="" ref="0x7faa6eaa64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eaa6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eaa67f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eaa6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eaa6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eaa6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eaa5020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eaa51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7faa6eb10020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7faa6eb10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb103a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb10530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eb106c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb10850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb109e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eb10b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb10d00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb0f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eb0f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eb0f340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb0f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eb0f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eb0f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eb0fa80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb0fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7faa6eafb020" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7faa6eafb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eafb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eafb530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eafb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eafb850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eafb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eafbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eafbd00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eafa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eafa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eafa340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eafa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eafa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eafa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eafaa80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eafac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7faa6eac8200" loc="104:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7faa6eac8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eac8580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eac8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eac88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eac8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eac8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eac8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eac7020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eac71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eac7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eac74d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eac7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eac77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eac7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eac7c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eac7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7faa6eaf7020" loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7faa6eaf7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaf73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaf7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaf76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eaf7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaf79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaf7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eaf7d00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eaf6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eaf61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eaf6340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eaf64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eaf6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eaf67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eaf6a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eaf6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7faa6eae3200" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7faa6eae3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eae3580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eae3710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eae38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eae3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eae3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eae3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eae2020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eae21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eae2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eae24d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eae2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eae27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eae2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eae2c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eae2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7faa6eace200" loc="98:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7faa6eace200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eace580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eace710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eace8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eacea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eacebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaced50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eacd020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eacd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eacd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eacd4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eacd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eacd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eacd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eacdc10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eacdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7faa6eabe200" loc="109:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7faa6eabe200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eabe580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eabe710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eabe8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eabea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eabebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eabed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eabd020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eabd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eabd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eabd4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eabd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eabd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eabd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eabdc10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eabdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7faa6eaa3580" loc="154:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7faa6eaa3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaa3900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaa3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaa3c20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eaa3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaa2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaa21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eaa2340"/>
        <function-ref name="get" scoped="" ref="0x7faa6eaa24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eaa2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eaa27f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eaa2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eaa2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eaa2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eaa1020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eaa11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7faa6eb23020" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7faa6eb23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb233a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb23530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eb236c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb23850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb239e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eb23b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb23d00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb22020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eb221b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eb22340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb224d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eb22660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eb227f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eb22a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb22c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7faa6eb05020" loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7faa6eb05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb053a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb05530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eb056c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb05850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb059e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eb05b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb05d00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb04020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eb041b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eb04340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb044d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eb04660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eb047f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eb04a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb04c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7faa6eaf1020" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7faa6eaf1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaf13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaf1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaf16c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eaf1850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaf19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaf1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eaf1d00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eaf0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eaf01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eaf0340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eaf04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eaf0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eaf07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eaf0a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eaf0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7faa6eadc200" loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7faa6eadc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eadc580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eadc710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eadc8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eadca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eadcbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eadcd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eadb020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eadb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eadb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eadb4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eadb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eadb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eadb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eadbc10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eadbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7faa6ea9f580" loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7faa6ea9f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea9f900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea9fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea9fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea9fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea9e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea9e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea9e340"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea9e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea9e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea9e7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea9e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea9eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea9eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea9d020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea9d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7faa6ea99570" loc="160:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7faa6ea99570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea998f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea99a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea99c10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea99da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea98020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea981b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea98340"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea984d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea98660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea987f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea98980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea98b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea98ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea97020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7faa6ea8d570" loc="166:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7faa6ea8d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea8d8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea8da80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea8dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea8dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea8c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea8c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea8c340"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea8c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea8c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea8c7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea8c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea8cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea8cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea8b020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea8b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7faa6ead8200" loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7faa6ead8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ead8580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ead8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ead88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ead8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ead8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ead8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ead7020"/>
        <function-ref name="get" scoped="" ref="0x7faa6ead71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ead7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ead74d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ead7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ead77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ead7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ead7c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ead7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7faa6ea9d580" loc="157:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7faa6ea9d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea9d900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea9da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea9dc20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea9ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea9c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea9c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea9c340"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea9c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea9c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea9c7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea9c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea9cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea9cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea9b020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea9b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7faa6eb14020" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7faa6eb14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb143a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb14530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eb146c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb14850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb149e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eb14b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb14d00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb13020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eb131b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eb13340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb134d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eb13660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eb137f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eb13a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb13c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7faa6eaff020" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7faa6eaff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaff3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaff530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaff6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eaff850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaff9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaffb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eaffd00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eafe020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eafe1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eafe340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eafe4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eafe660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eafe7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eafea80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eafec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7faa6eaeb020" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7faa6eaeb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaeb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaeb530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaeb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eaeb850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaeb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaebb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eaebd00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eaea020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eaea1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eaea340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eaea4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eaea660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eaea7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eaeaa80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eaeac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7faa6eaa5580" loc="153:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7faa6eaa5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaa5900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaa5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaa5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eaa5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaa4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaa41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eaa4340"/>
        <function-ref name="get" scoped="" ref="0x7faa6eaa44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eaa4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eaa47f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eaa4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eaa4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eaa4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eaa3020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eaa31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7faa6ea91570" loc="164:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7faa6ea91570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea918f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea91a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea91c10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea91da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea90020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea901b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea90340"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea904d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea90660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea907f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea90980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea90b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea90ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea8f020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea8f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7faa6eae7200" loc="83:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7faa6eae7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eae7580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eae7710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eae78a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eae7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eae7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eae7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eae6020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eae61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eae6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eae64d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eae6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eae67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eae6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eae6c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eae6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7faa6ead2200" loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7faa6ead2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ead2580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ead2710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ead28a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ead2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ead2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ead2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ead1020"/>
        <function-ref name="get" scoped="" ref="0x7faa6ead11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ead1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ead14d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ead1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ead17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ead1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ead1c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ead1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7faa6eac2200" loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7faa6eac2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eac2580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eac2710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eac28a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eac2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eac2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eac2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eac1020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eac11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eac1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eac14d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eac1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eac17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eac1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eac1c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eac1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7faa6eb0e020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7faa6eb0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb0e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb0e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eb0e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb0e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb0e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eb0eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb0ed00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb0d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eb0d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eb0d340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb0d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eb0d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eb0d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eb0da80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb0dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7faa6eac6200" loc="105:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7faa6eac6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eac6580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eac6710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eac68a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eac6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eac6bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eac6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eac5020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eac51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eac5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eac54d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eac5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eac57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eac5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eac5c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eac5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7faa6eb09020" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7faa6eb09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb093a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb09530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eb096c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb09850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb099e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eb09b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb09d00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb08020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eb081b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eb08340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb084d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eb08660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eb087f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eb08a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb08c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7faa6eaf5020" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7faa6eaf5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaf53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaf5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaf56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eaf5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaf59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaf5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eaf5d00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eaf4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eaf41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eaf4340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eaf44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eaf4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eaf47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eaf4a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eaf4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7faa6eae1200" loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7faa6eae1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eae1580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eae1710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eae18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eae1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eae1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eae1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eae0020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eae01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eae0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eae04d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eae0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eae07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eae0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eae0c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eae0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7faa6eacc200" loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7faa6eacc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eacc580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eacc710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eacc8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eacca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaccbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaccd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eacb020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eacb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eacb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eacb4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eacb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eacb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eacb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eacbc10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eacbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7faa6eabc200" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7faa6eabc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eabc580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eabc710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eabc8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eabca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eabcbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eabcd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eabb020"/>
        <function-ref name="get" scoped="" ref="0x7faa6eabb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eabb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eabb4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eabb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eabb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eabb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eabbc10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eabbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7faa6eb18020" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7faa6eb18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb183a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb18530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eb186c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb18850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb189e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eb18b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb18d00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb17020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eb171b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eb17340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb174d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eb17660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eb177f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eb17a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb17c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7faa6eb03020" loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7faa6eb03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eb033a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eb03530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eb036c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eb03850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eb039e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eb03b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eb03d00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eb02020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eb021b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eb02340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eb024d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eb02660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eb027f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eb02a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eb02c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7faa6eaef020" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7faa6eaef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaef3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaef530"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaef6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eaef850"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaef9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaefb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eaefd00"/>
        <function-ref name="get" scoped="" ref="0x7faa6eaee020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eaee1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eaee340"/>
        <function-ref name="set" scoped="" ref="0x7faa6eaee4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eaee660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eaee7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eaeea80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eaeec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7faa6eada200" loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7faa6eada200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eada580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eada710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eada8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eadaa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eadabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eadad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ead9020"/>
        <function-ref name="get" scoped="" ref="0x7faa6ead91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ead9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ead94d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ead9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ead97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ead9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ead9c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ead9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7faa6eaae560" loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7faa6eaae560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eaae8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eaaea70"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eaaec00"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eaaed90"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaac020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaac1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eaac340"/>
        <function-ref name="get" scoped="" ref="0x7faa6eaac4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eaac660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eaac7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eaac980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eaacb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eaacca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eaab020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eaab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7faa6ea97570" loc="161:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7faa6ea97570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea978f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea97a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea97c10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea97da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea96020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea961b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea96340"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea964d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea96660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea967f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea96980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea96b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea96ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea95020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7faa6eab0580" loc="147:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7faa6eab0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eab0900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eab0a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eab0c20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eab0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eaaf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eaaf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eaaf340"/>
        <function-ref name="get" scoped="" ref="0x7faa6eaaf4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eaaf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eaaf7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eaaf980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eaafb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eaafca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eaae020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eaae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7faa6ead6200" loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7faa6ead6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ead6580"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ead6710"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ead68a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ead6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ead6bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ead6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ead5020"/>
        <function-ref name="get" scoped="" ref="0x7faa6ead51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ead5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ead54d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ead5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ead57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ead5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ead5c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ead5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7faa6ea8b570" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7faa6ea8b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea8b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea8ba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea8bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea8bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea8a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea8a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea8a340"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea8a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea8a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea8a7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea8a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea8ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea8aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea89020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7faa6ea85580" loc="172:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7faa6ea85580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea85900"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea85a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea85c20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea85db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea84020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea841b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea84340"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea844d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea84660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea847f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea84980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea84b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea84ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea83020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7faa6eab81f0" loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7faa6eab81f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6eab8970"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6eab8b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6eab8c90"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6eab8e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6eab7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6eab71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6eab7340"/>
        <function-ref name="get" scoped="" ref="0x7faa6eab74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6eab7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6eab77f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6eab7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6eab7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6eab7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6eab6020"/>
        <function-ref name="clr" scoped="" ref="0x7faa6eab61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea596d0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea596d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea59a50"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea59be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea59d70"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea58020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea581b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea58340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea584d0"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea58660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea587f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea58980"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea58b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea58ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea58e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea57120"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea572b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea54100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea54100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea54480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea54610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea547a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea54930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea54ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea54c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea54de0"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea53020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea531b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea53340"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea534d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea53660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea537f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea53a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea53c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea50d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea50d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea4f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea4f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea4f400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea4f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea4f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea4f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea4fa40"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea4fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea4fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea4e020"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea4e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea4e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea4e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea4e760"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea4e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea4b740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea4b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea4bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea4bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea4bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea4a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea4a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea4a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea4a4d0"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea4a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea4a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea4a980"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea4ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea4aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea4ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea49120"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea492b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea46100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea46100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea46480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea46610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea467a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea46930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea46ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea46c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea46de0"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea45020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea451b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea45340"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea454d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea45660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea457f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea45a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea45c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea42d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea42d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea410e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea41270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea41400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea41590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea41720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea418b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea41a40"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea41bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea41d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea40020"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea401b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea40340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea404d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea40760"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea408f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea3d740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea3d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea3dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea3dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea3dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea3c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea3c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea3c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea3c4d0"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea3c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea3c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea3c980"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea3cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea3cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea3ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea3b120"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea3b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea38100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea38100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea38480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea38610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea387a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea38930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea38ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea38c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea38de0"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea36020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea361b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea36340"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea364d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea36660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea367f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea36a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea36c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea33d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea33d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea320e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea32270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea32400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea32590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea32720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea328b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea32a40"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea32bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea32d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea31020"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea311b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea31340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea314d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea31760"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea318f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea2e740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea2e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea2eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea2ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea2ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea2d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea2d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea2d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea2d4d0"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea2d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea2d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea2d980"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea2db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea2dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea2de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea2c120"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea2c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea29100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea29100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea29480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea29610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea297a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea29930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea29ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea29c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea29de0"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea28020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea281b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea28340"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea284d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea28660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea287f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea28a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea28c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea25d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea25d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea240e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea24270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea24400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea24590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea24720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea248b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea24a40"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea24bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea24d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea23020"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea231b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea23340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea234d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea23760"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea238f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea20860" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea20860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea20be0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea20d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea1f020"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea1f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea1f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea1f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea1f660"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea1f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea1f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea1fb10"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea1fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea1fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea1e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea1e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea1e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea1b270" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea1b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea1b5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea1b780"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea1b910"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea1baa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea1bc30"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea1bdc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea1a020"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea1a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea1a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea1a4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea1a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea1a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea1a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea1ac10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea1ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea17d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea17d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea160e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea16270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea16400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea16590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea16720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea168b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea16a40"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea16bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea16d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea15020"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea151b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea15340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea154d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea15760"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea158f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea12740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea12740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea12ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea12c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea12de0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea10020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea101b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea10340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea104d0"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea10660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea107f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea10980"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea10b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea10ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea10e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea0f120"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea0f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea0c100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea0c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea0c480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea0c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea0c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea0c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea0cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea0cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea0cde0"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea0b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea0b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea0b340"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea0b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea0b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea0b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea0ba80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea0bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea08d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea08d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea070e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea07270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea07400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea07590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea07720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea078b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea07a40"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea07bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea07d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea06020"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea061b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea06340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea064d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea06760"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea068f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6ea03740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6ea03740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6ea03ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6ea03c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6ea03de0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6ea02020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6ea021b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6ea02340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6ea024d0"/>
        <function-ref name="get" scoped="" ref="0x7faa6ea02660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6ea027f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6ea02980"/>
        <function-ref name="set" scoped="" ref="0x7faa6ea02b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6ea02ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6ea02e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6ea01120"/>
        <function-ref name="clr" scoped="" ref="0x7faa6ea012b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9fe100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9fe100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9fe480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9fe610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9fe7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9fe930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9feac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9fec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9fede0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9fd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9fd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9fd340"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9fd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9fd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9fd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9fda80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9fdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9fad10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9fad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9f90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9f9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9f9400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9f9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9f9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9f98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9f9a40"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9f9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9f9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9f8020"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9f81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9f8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9f84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9f8760"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9f88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9f5740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9f5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9f5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9f5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9f5de0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9f4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9f41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9f4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9f44d0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9f4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9f47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9f4980"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9f4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9f4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9f4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9f3120"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9f32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9f0100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9f0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9f0480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9f0610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9f07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9f0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9f0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9f0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9f0de0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9ef020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9ef1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9ef340"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9ef4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9ef660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9ef7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9efa80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9efc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9ebd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9ebd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9ea0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9ea270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9ea400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9ea590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9ea720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9ea8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9eaa40"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9eabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9ead60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9e9020"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9e91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9e9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9e94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9e9760"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9e98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9e6a60" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9e6a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9e6de0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9e5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9e51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9e5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9e54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9e5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9e57f0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9e5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9e5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9e5ca0"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9e5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9e4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9e41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9e4440"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9e45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9e1460" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9e1460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9e17e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9e1970"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9e1b00"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9e1c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9e1e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9e0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9e01b0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9e0340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9e04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9e0660"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9e07f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9e0980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9e0b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9e0da0"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9dde00" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9dde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9dc1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9dc350"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9dc4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9dc670"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9dc800"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9dc990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9dcb20"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9dccb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9dce40"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9db020"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9db1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9db340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9db4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9db760"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9db8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9d8740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9d8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9d8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9d8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9d8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9d7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9d71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9d7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9d74d0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9d7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9d77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9d7980"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9d7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9d7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9d7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9d6120"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9d62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9d3100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9d3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9d3480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9d3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9d37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9d3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9d3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9d3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9d3de0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9d2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9d21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9d2340"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9d24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9d2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9d27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9d2a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9d2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9cfd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9cfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9ce0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9ce270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9ce400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9ce590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9ce720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9ce8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9cea40"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9cebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9ced60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9cd020"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9cd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9cd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9cd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9cd760"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9cd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9ca740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9ca740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9caac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9cac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9cade0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9c8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9c81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9c8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9c84d0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9c8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9c87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9c8980"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9c8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9c8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9c8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9c7120"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9c72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9c4100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9c4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9c4480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9c4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9c47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9c4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9c4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9c4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9c4de0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9c3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9c31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9c3340"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9c34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9c3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9c37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9c3a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9c3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9c0d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9c0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9bf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9bf270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9bf400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9bf590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9bf720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9bf8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9bfa40"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9bfbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9bfd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9be020"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9be1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9be340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9be4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9be760"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9be8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9bb740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9bb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9bbac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9bbc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9bbde0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9ba020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9ba1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9ba340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9ba4d0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9ba660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9ba7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9ba980"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9bab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9baca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9bae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9b9120"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9b92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9b6100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9b6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9b6480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9b6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9b67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9b6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9b6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9b6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9b6de0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9b5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9b51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9b5340"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9b54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9b5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9b57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9b5a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9b5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9b2d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9b2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9b10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9b1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9b1400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9b1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9b1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9b18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9b1a40"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9b1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9b1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9b0020"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9b01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9b0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9b04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9b0760"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9b08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9ad740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9ad740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9adac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9adc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9adde0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9ac020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9ac1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9ac340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9ac4d0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9ac660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9ac7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9ac980"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9acb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9acca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9ace30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9ab120"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9ab2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9a8100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9a8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9a8480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9a8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9a87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9a8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9a8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9a8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9a8de0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9a7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9a71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9a7340"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9a74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9a7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9a77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9a7a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9a7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e9a4d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e9a4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9a20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e9a2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9a2400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9a2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9a2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9a28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9a2a40"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9a2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9a2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e9a1020"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9a11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e9a1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9a14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e9a1760"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9a18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e99e740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e99e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e99eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e99ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e99ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e99d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e99d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e99d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e99d4d0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e99d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e99d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e99d980"/>
        <function-ref name="set" scoped="" ref="0x7faa6e99db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e99dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e99de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e99c120"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e99c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e999100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e999100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e999480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e999610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e9997a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e999930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e999ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e999c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e999de0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e998020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9981b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e998340"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9984d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e998660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9987f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e998a80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e998c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e995d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e995d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9940e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e994270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e994400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e994590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e994720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9948b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e994a40"/>
        <function-ref name="get" scoped="" ref="0x7faa6e994bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e994d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e993020"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9931b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e993340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9934d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e993760"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9938f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e990740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e990740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e990ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e990c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e990de0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e98f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e98f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e98f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e98f4d0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e98f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e98f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e98f980"/>
        <function-ref name="set" scoped="" ref="0x7faa6e98fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e98fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e98fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e98e120"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e98e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e98b100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e98b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e98b480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e98b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e98b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e98b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e98bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e98bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e98bde0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e98a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e98a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e98a340"/>
        <function-ref name="set" scoped="" ref="0x7faa6e98a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e98a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e98a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e98aa80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e98ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e987d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e987d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9860e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e986270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e986400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e986590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e986720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9868b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e986a40"/>
        <function-ref name="get" scoped="" ref="0x7faa6e986bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e986d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e985020"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9851b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e985340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9854d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e985760"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9858f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e982740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e982740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e982ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e982c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e982de0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e981020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e9811b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e981340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e9814d0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e981660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e9817f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e981980"/>
        <function-ref name="set" scoped="" ref="0x7faa6e981b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e981ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e981e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e980120"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9802b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e97c100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e97c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e97c480"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e97c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e97c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e97c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e97cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e97cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e97cde0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e97b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e97b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e97b340"/>
        <function-ref name="set" scoped="" ref="0x7faa6e97b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e97b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e97b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e97ba80"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e97bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faa6e978d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7faa6e978d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9770e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e977270"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e977400"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e977590"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e977720"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e9778b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e977a40"/>
        <function-ref name="get" scoped="" ref="0x7faa6e977bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e977d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e976020"/>
        <function-ref name="set" scoped="" ref="0x7faa6e9761b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e976340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e9764d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e976760"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e9768f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7faa6e8ff2f0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7faa6e8ff2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e8ff670"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e8ff800"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e8ff990"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e8ffb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e8ffcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e8ffe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e8fe020"/>
        <function-ref name="get" scoped="" ref="0x7faa6e8fe1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e8fe340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e8fe4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6e8fe660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e8fe7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e8fe980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e8fec10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e8feda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7faa6e910020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7faa6e910020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e9103a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e910530"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e9106c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e910850"/>
        <function-ref name="get" scoped="" ref="0x7faa6e9109e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e910b70"/>
        <function-ref name="set" scoped="" ref="0x7faa6e910d00"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e8ff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7faa6e8fbde0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7faa6e8fbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e8fa180"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e8fa310"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e8fa4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e8fa630"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e8fa7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e8fa950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e8faae0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e8fac70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e8fae00"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e8f9020"/>
        <function-ref name="set" scoped="" ref="0x7faa6e8f91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e8f9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e8f94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e8f9760"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e8f98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7faa6e8fcb90" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7faa6e8fcb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e8fb020"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e8fb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e8fb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e8fb4d0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e8fb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e8fb7f0"/>
        <function-ref name="set" scoped="" ref="0x7faa6e8fb980"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e8fbb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7faa6e8f6930" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7faa6e8f6930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e8f6cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e8f6e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e8f5020"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e8f51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e8f5340"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e8f54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e8f5660"/>
        <function-ref name="get" scoped="" ref="0x7faa6e8f57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e8f5980"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e8f5b10"/>
        <function-ref name="set" scoped="" ref="0x7faa6e8f5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e8f5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e8f4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e8f42b0"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e8f4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7faa6e8f7710" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7faa6e8f7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e8f7a90"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e8f7c20"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e8f7db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e8f6020"/>
        <function-ref name="get" scoped="" ref="0x7faa6e8f61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e8f6340"/>
        <function-ref name="set" scoped="" ref="0x7faa6e8f64d0"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e8f6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faa6e73d370" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa6e73d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa6e739870"/>
        <function-ref name="fired" scoped="" ref="0x7faa6e73ce40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faa6e73bc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faa6e73b780"/>
        <function-ref name="getdt" scoped="" ref="0x7faa6e7381e0"/>
        <function-ref name="gett0" scoped="" ref="0x7faa6e739cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa6e73b300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faa6e73c020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faa6e739260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faa6e73c4f0"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e73c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7faa6e8de610" loc="49:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7faa6e8de610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa6e8dbc40"/>
        <function-ref name="fired" scoped="" ref="0x7faa6e8dc1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faa6e8db020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faa6e8dcae0"/>
        <function-ref name="getdt" scoped="" ref="0x7faa6e8d9590"/>
        <function-ref name="gett0" scoped="" ref="0x7faa6e8d9110"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa6e8dc660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faa6e8dd390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faa6e8db630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faa6e8dd860"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e8ddd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7faa6e8d51d0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7faa6e8d51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa6e8d1630"/>
        <function-ref name="fired" scoped="" ref="0x7faa6e8d3c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faa6e8d29d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faa6e8d2550"/>
        <function-ref name="getdt" scoped="" ref="0x7faa6e8d0020"/>
        <function-ref name="gett0" scoped="" ref="0x7faa6e8d1ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa6e8d20d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faa6e8d5dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faa6e8d1020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faa6e8d32e0"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e8d37b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7faa6e8cca80" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7faa6e8cca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faa6e8ce6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa6e8d6400" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa6e8d6400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6e8d6780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7faa6e7d9870" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7faa6e7d9870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa6e7d5090"/>
        <function-ref name="fired" scoped="" ref="0x7faa6e7d7090"/>
        <function-ref name="startAt" scoped="" ref="0x7faa6e7d7a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa6e7d7550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7faa6e7d5550"/>
        <function-ref name="start" scoped="" ref="0x7faa6e7d86a0"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e7d8bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa6e7d9020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa6e7d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6e7d93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7faa6dcb0bd0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7faa6dcb0bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6ebed680"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa6ebed9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa6dcac4e0"/>
        <function-ref name="fired" scoped="" ref="0x7faa6dcae4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7faa6dcaee60"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa6dcae9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7faa6dcac9a0"/>
        <function-ref name="start" scoped="" ref="0x7faa6dcafa80"/>
        <function-ref name="stop" scoped="" ref="0x7faa6dcae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa6dcb0380" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa6dcb0380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6dcb0700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7faa6dc960c0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7faa6dc960c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6dc96440"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6dc965d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6dc96760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6dc968f0"/>
        <function-ref name="fired" scoped="" ref="0x7faa6dc96a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7faa6dc9a7b0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7faa6dc9a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6dc9ab30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6dc9acc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6dc9ae50"/>
        <function-ref name="get" scoped="" ref="0x7faa6dc98020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6dc981b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6dc98340"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6dc984d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6dc98660"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6dc987f0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6dc98980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6dc98b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7faa6dc98da0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7faa6dc98da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6dc97180"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6dc97310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6dc974a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6dc97630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6dc977c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6dc97950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6dc97ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6dc97c70"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6dc97e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7faa6e8a7020" loc="52:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7faa6e8a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6e8a73a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6e8a7530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6e8a76c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6e8a7850"/>
        <function-ref name="fired" scoped="" ref="0x7faa6e8a79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7faa6e8ac8b0" loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7faa6e8ac8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6e8acc30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6e8acdc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6e8ab020"/>
        <function-ref name="get" scoped="" ref="0x7faa6e8ab1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6e8ab340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6e8ab4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6e8ab660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6e8ab7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6e8ab980"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6e8abb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6e8abca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7faa6e8aa560" loc="51:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7faa6e8aa560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6e8aa8e0"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6e8aaa70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6e8aac00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6e8aad90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6e8a9020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6e8a91b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6e8a9340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6e8a94d0"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6e8a9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7faa6dc8dda0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7faa6dc8dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7faa6dc8c180"/>
        <function-ref name="setEvent" scoped="" ref="0x7faa6dc8c310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7faa6dc8c4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7faa6dc8c630"/>
        <function-ref name="fired" scoped="" ref="0x7faa6dc8c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7faa6dc904c0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7faa6dc904c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6dc90840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6dc909d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6dc90b60"/>
        <function-ref name="get" scoped="" ref="0x7faa6dc90cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6dc90e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6dc8e030"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6dc8e1c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6dc8e350"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6dc8e4e0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6dc8e670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6dc8e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7faa6dc93340" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7faa6dc93340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6ebed680"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa6ebed9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa6dc91ba0"/>
        <function-ref name="fired" scoped="" ref="0x7faa6dc92b80"/>
        <function-ref name="startAt" scoped="" ref="0x7faa6dc91550"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa6dc91090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7faa6dc90090"/>
        <function-ref name="start" scoped="" ref="0x7faa6dc921b0"/>
        <function-ref name="stop" scoped="" ref="0x7faa6dc926c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa6dc94a30" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa6dc94a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6dc94db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7faa6dc8ea90" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7faa6dc8ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7faa6dc8ee10"/>
        <function-ref name="getControl" scoped="" ref="0x7faa6dc8d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6dc8d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7faa6dc8d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7faa6dc8d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6dc8d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faa6dc8d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7faa6dc8d980"/>
        <function-ref name="setControl" scoped="" ref="0x7faa6dc8db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7faa6e852900" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7faa6e852900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faa6e856780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6e851150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6e856c40"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6e851610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7faa6e850990" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7faa6e850990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6ebed680"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa6ebed9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faa6e84d7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6e84c170"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6e84dc80"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6e84c630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7faa6e83bc50" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7faa6e83bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6e839020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7faa6e8391b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7faa6e839340"/>
        <function-ref name="get" scoped="" ref="0x7faa6e8394d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7faa6e839660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6e8397f0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6e839980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6e839b10"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6e839ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7faa6e839e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7faa6e838020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7faa6e849b80" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7faa6e849b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6ebed680"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa6ebed9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faa6e8489b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6e83b360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6e848e70"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6e83b820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7faa6e8170f0" loc="63:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7faa6e8170f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6ebed680"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa6ebed9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faa6e816020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6e8169a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6e8164e0"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6e816e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7faa6e835cf0" loc="62:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7faa6e835cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faa6e81ab60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6e819550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6e819090"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6e819a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7faa6dca9020" loc="61:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7faa6dca9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa6dca7870"/>
        <function-ref name="fired" scoped="" ref="0x7faa6dca8840"/>
        <function-ref name="startAt" scoped="" ref="0x7faa6dca7220"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa6dca8d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7faa6dca7d30"/>
        <function-ref name="start" scoped="" ref="0x7faa6dca9e30"/>
        <function-ref name="stop" scoped="" ref="0x7faa6dca8380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7faa6dca3780" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7faa6dca3780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6ebed680"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa6ebed9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa6dc9f020"/>
        <function-ref name="fired" scoped="" ref="0x7faa6dca1020"/>
        <function-ref name="startAt" scoped="" ref="0x7faa6dca19a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa6dca14e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7faa6dc9f4e0"/>
        <function-ref name="start" scoped="" ref="0x7faa6dca25d0"/>
        <function-ref name="stop" scoped="" ref="0x7faa6dca2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7faa6dca53d0" loc="68:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7faa6dca53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faa6dca4240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6dca4bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6dca4700"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6dca30d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7faa6e7a49c0" loc="74:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7faa6e7a49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa6e7a4d40"/>
        <function-ref name="runTask" scoped="" ref="0x7faa6e7a3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7faa6e7a8850" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7faa6e7a8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa6e7a4090"/>
        <function-ref name="fired" scoped="" ref="0x7faa6e7a5090"/>
        <function-ref name="startAt" scoped="" ref="0x7faa6e7a5a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa6e7a5550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7faa6e7a4550"/>
        <function-ref name="start" scoped="" ref="0x7faa6e7a66a0"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e7a6bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faa6e7ad2f0" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa6e7ad2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa6e7a9870"/>
        <function-ref name="fired" scoped="" ref="0x7faa6e7ace40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faa6e7aac00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faa6e7aa780"/>
        <function-ref name="getdt" scoped="" ref="0x7faa6e7a81e0"/>
        <function-ref name="gett0" scoped="" ref="0x7faa6e7a9cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa6e7aa300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faa6e7ac020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faa6e7a9260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faa6e7ac4f0"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e7ac9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7faa6e753a00" loc="71:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7faa6e753a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa6e753d80"/>
        <function-ref name="runTask" scoped="" ref="0x7faa6e751020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7faa6e758640" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7faa6e758640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa6e754c40"/>
        <function-ref name="fired" scoped="" ref="0x7faa6e7551e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faa6e754020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faa6e755ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7faa6e753590"/>
        <function-ref name="gett0" scoped="" ref="0x7faa6e753110"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa6e755660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faa6e756390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faa6e754630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faa6e756860"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e756d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faa6e75e150" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa6e75e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa6e759700"/>
        <function-ref name="fired" scoped="" ref="0x7faa6e75cc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faa6e75ba50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faa6e75b5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7faa6e758090"/>
        <function-ref name="gett0" scoped="" ref="0x7faa6e759ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa6e75b110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faa6e75ed60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faa6e7590d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faa6e75c2a0"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e75c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7faa6e74f790" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7faa6e74f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faa6e7453f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7faa6e745a60" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7faa6e745a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faa6e744890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6e743260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6e744d50"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6e743720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faa6e737c90" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa6e737c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa6e732170"/>
        <function-ref name="fired" scoped="" ref="0x7faa6e735720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faa6e733510"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faa6e733090"/>
        <function-ref name="getdt" scoped="" ref="0x7faa6e732a70"/>
        <function-ref name="gett0" scoped="" ref="0x7faa6e7325f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa6e735ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faa6e7368a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faa6e733b20"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faa6e736d70"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e7352a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faa6e7306d0" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7faa6e7306d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6eda1ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faa6ebed240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faa6e72cc40"/>
        <function-ref name="fired" scoped="" ref="0x7faa6e72d1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faa6e72c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faa6e72dae0"/>
        <function-ref name="getdt" scoped="" ref="0x7faa6e72b590"/>
        <function-ref name="gett0" scoped="" ref="0x7faa6e72b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7faa6e72d660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faa6e72f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faa6e72c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faa6e72f860"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e72fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7faa6e1e3020" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7faa6e1e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e1e33a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa6e1e3530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa6e1e36c0"/>
        <function-ref name="cancel" scoped="" ref="0x7faa6e1e3850"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa6e1e39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7faa6e1e3c30" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7faa6e1e3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6e1e2020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faa6e1e21b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa6e1e2340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa6e1e24d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faa6e1e2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7faa6e1e28b0" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7faa6e1e28b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7faa6e1e2c30"/>
        <function-ref name="source" scoped="" ref="0x7faa6e1e2dc0"/>
        <function-ref name="address" scoped="" ref="0x7faa6e1e1020"/>
        <function-ref name="destination" scoped="" ref="0x7faa6e1e11b0"/>
        <function-ref name="setSource" scoped="" ref="0x7faa6e1e1340"/>
        <function-ref name="setDestination" scoped="" ref="0x7faa6e1e14d0"/>
        <function-ref name="type" scoped="" ref="0x7faa6e1e1660"/>
        <function-ref name="setType" scoped="" ref="0x7faa6e1e17f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7faa6e1e1980"/>
        <function-ref name="setGroup" scoped="" ref="0x7faa6e1e1b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7faa6e1e1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7faa6e1e0020" loc="52:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7faa6e1e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7faa6e1e03a0"/>
        <function-ref name="noAck" scoped="" ref="0x7faa6e1e0530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7faa6e1e06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7faa6dbf6750" loc="44:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7faa6dbf6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6dbf6ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa6dbf6c60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa6dbf6df0"/>
        <function-ref name="cancel" scoped="" ref="0x7faa6dbf5020"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa6dbf51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7faa6dbf5460" loc="46:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7faa6dbf5460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6dbf57e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa6dbf5970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa6dbf5b00"/>
        <function-ref name="cancel" scoped="" ref="0x7faa6dbf5c90"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa6dbf5e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7faa6dbf30e0" loc="47:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7faa6dbf30e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7faa6dbf3460"/>
        <function-ref name="source" scoped="" ref="0x7faa6dbf35f0"/>
        <function-ref name="address" scoped="" ref="0x7faa6dbf3780"/>
        <function-ref name="destination" scoped="" ref="0x7faa6dbf3910"/>
        <function-ref name="setSource" scoped="" ref="0x7faa6dbf3aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x7faa6dbf3c30"/>
        <function-ref name="type" scoped="" ref="0x7faa6dbf3dc0"/>
        <function-ref name="setType" scoped="" ref="0x7faa6dbf2020"/>
        <function-ref name="isForMe" scoped="" ref="0x7faa6dbf21b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7faa6dbf2340"/>
        <function-ref name="localGroup" scoped="" ref="0x7faa6dbf24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7faa6e6dacf0" loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7faa6e6dacf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e6d70a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa6e6d7230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa6e6d73c0"/>
        <function-ref name="cancel" scoped="" ref="0x7faa6e6d7550"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa6e6d76e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7faa6e68d400" loc="48:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7faa6e68d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa6eba1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e68d7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa6e68d930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa6e68dac0"/>
        <function-ref name="cancel" scoped="" ref="0x7faa6e68dc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa6e68dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7faa6e68e580" loc="46:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7faa6e68e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e68e920"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa6e68eab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa6e68ec40"/>
        <function-ref name="cancel" scoped="" ref="0x7faa6e68edd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa6e68d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7faa6e68b720" loc="50:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7faa6e68b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6e68baa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faa6e68bc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa6e68bdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa6e68a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faa6e68a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7faa6e68a480" loc="169:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7faa6e68a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa6e68a800"/>
        <function-ref name="runTask" scoped="" ref="0x7faa6e68a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7faa6e68ac60" loc="126:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7faa6e68ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa6e689020"/>
        <function-ref name="runTask" scoped="" ref="0x7faa6e6891b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7faa6e68c060" loc="49:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7faa6e68c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7faa6e68c3e0"/>
        <function-ref name="source" scoped="" ref="0x7faa6e68c570"/>
        <function-ref name="address" scoped="" ref="0x7faa6e68c700"/>
        <function-ref name="destination" scoped="" ref="0x7faa6e68c890"/>
        <function-ref name="setSource" scoped="" ref="0x7faa6e68ca20"/>
        <function-ref name="setDestination" scoped="" ref="0x7faa6e68cbb0"/>
        <function-ref name="type" scoped="" ref="0x7faa6e68cd40"/>
        <function-ref name="setType" scoped="" ref="0x7faa6e68b020"/>
        <function-ref name="isForMe" scoped="" ref="0x7faa6e68b1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7faa6e68b340"/>
        <function-ref name="localGroup" scoped="" ref="0x7faa6e68b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7faa6e67f3b0" loc="46:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7faa6e67f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faa6e67f730"/>
        <function-ref name="stopDone" scoped="" ref="0x7faa6e67f8c0"/>
        <function-ref name="start" scoped="" ref="0x7faa6e67fa50"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e67fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7faa6e6843f0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7faa6e6843f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa6eba1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e684770"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa6e684900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa6e684a90"/>
        <function-ref name="cancel" scoped="" ref="0x7faa6e684c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa6e684db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7faa6e67e7e0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7faa6e67e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6e67eb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faa6e67ecf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa6e67ee80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa6e67d030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faa6e67d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7faa6e67e1d0" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7faa6e67e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa6eba1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faa6e67e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faa6e677620" loc="53:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7faa6e677620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faa6e6779a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faa6e677b30"/>
        <function-ref name="led1On" scoped="" ref="0x7faa6e677cc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faa6e677e50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faa6e676020"/>
        <function-ref name="get" scoped="" ref="0x7faa6e6761b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7faa6e676340"/>
        <function-ref name="led2Off" scoped="" ref="0x7faa6e676980"/>
        <function-ref name="set" scoped="" ref="0x7faa6e6764d0"/>
        <function-ref name="led0On" scoped="" ref="0x7faa6e676660"/>
        <function-ref name="led2On" scoped="" ref="0x7faa6e6767f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7faa6e67ab20" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faa6e67ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7faa6e677020"/>
        <function-ref name="noAck" scoped="" ref="0x7faa6e6771b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7faa6e677340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7faa6e67d470" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7faa6e67d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7faa6e67d7f0"/>
        <function-ref name="source" scoped="" ref="0x7faa6e67d980"/>
        <function-ref name="address" scoped="" ref="0x7faa6e67db10"/>
        <function-ref name="destination" scoped="" ref="0x7faa6e67dca0"/>
        <function-ref name="setSource" scoped="" ref="0x7faa6e67de30"/>
        <function-ref name="setDestination" scoped="" ref="0x7faa6e67a020"/>
        <function-ref name="type" scoped="" ref="0x7faa6e67a1b0"/>
        <function-ref name="setType" scoped="" ref="0x7faa6e67a340"/>
        <function-ref name="isForMe" scoped="" ref="0x7faa6e67a4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7faa6e67a660"/>
        <function-ref name="localGroup" scoped="" ref="0x7faa6e67a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7faa6e61c9f0" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7faa6e61c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e61cd70"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa6e61b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa6e61b1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7faa6e61b340"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa6e61b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7faa6e61b760" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7faa6e61b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faa6e61bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7faa6e6737d0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7faa6e6737d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa6eba1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e673b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa6e673d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa6e61f020"/>
        <function-ref name="cancel" scoped="" ref="0x7faa6e61f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa6e61f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7faa6e61d400" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7faa6e61d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6e61d780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faa6e61d910"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa6e61daa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa6e61dc30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faa6e61ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7faa6e61f6c0" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7faa6e61f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faa6eba1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faa6e61fa60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7faa6e61c060" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faa6e61c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7faa6e61c3e0"/>
        <function-ref name="noAck" scoped="" ref="0x7faa6e61c570"/>
        <function-ref name="wasAcked" scoped="" ref="0x7faa6e61c700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7faa6e61fcb0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7faa6e61fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7faa6e61e0a0"/>
        <function-ref name="source" scoped="" ref="0x7faa6e61e230"/>
        <function-ref name="address" scoped="" ref="0x7faa6e61e3c0"/>
        <function-ref name="destination" scoped="" ref="0x7faa6e61e550"/>
        <function-ref name="setSource" scoped="" ref="0x7faa6e61e6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7faa6e61e870"/>
        <function-ref name="type" scoped="" ref="0x7faa6e61ea00"/>
        <function-ref name="setType" scoped="" ref="0x7faa6e61eb90"/>
        <function-ref name="isForMe" scoped="" ref="0x7faa6e61ed20"/>
        <function-ref name="setGroup" scoped="" ref="0x7faa6e61d020"/>
        <function-ref name="localGroup" scoped="" ref="0x7faa6e61d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7faa6e6162f0" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7faa6e6162f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faa6e616670"/>
        <function-ref name="stopDone" scoped="" ref="0x7faa6e616800"/>
        <function-ref name="start" scoped="" ref="0x7faa6e616990"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e616b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7faa6e615e10" loc="52:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7faa6e615e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faa6eb9f0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e6141c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa6e614350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa6e6144e0"/>
        <function-ref name="cancel" scoped="" ref="0x7faa6e614670"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa6e614800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa6e619bc0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa6e619bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6e616020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7faa6e615320" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7faa6e615320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faa6eb9f0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faa6e6156a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faa6e612940" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7faa6e612940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faa6e612cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faa6e612e50"/>
        <function-ref name="led1On" scoped="" ref="0x7faa6e60d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faa6e60d1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faa6e60d340"/>
        <function-ref name="get" scoped="" ref="0x7faa6e60d4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7faa6e60d660"/>
        <function-ref name="led2Off" scoped="" ref="0x7faa6e60dca0"/>
        <function-ref name="set" scoped="" ref="0x7faa6e60d7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7faa6e60d980"/>
        <function-ref name="led2On" scoped="" ref="0x7faa6e60db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7faa6e612020" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7faa6e612020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faa6eb9f0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7faa6e6123a0"/>
        <function-ref name="offset" scoped="" ref="0x7faa6e612530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7faa6e6126c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7faa6e605450" loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7faa6e605450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faa6e6057d0"/>
        <function-ref name="stopDone" scoped="" ref="0x7faa6e605960"/>
        <function-ref name="start" scoped="" ref="0x7faa6e605af0"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e605c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7faa6e59ee40" loc="332:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7faa6e59ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa6e59d1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7faa6e59d370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7faa6e5f1e00" loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7faa6e5f1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faa6e5f31c0"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e5f3350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7faa6e5d5d10" loc="191:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7faa6e5d5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa6e5d40e0"/>
        <function-ref name="runTask" scoped="" ref="0x7faa6e5d4270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa6e607d60" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa6e607d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6e605180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7faa6e5efa80" loc="75:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7faa6e5efa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7faa6e5efe00"/>
        <function-ref name="flush" scoped="" ref="0x7faa6e5f2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7faa6e5a0400" loc="322:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7faa6e5a0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa6e5a0780"/>
        <function-ref name="runTask" scoped="" ref="0x7faa6e5a0910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7faa6e5f5e30" loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7faa6e5f5e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7faa6e5fe1e0"/>
        <function-ref name="resetSend" scoped="" ref="0x7faa6e5fe370"/>
        <function-ref name="dataReceived" scoped="" ref="0x7faa6e5fe500"/>
        <function-ref name="resetReceive" scoped="" ref="0x7faa6e5fe690"/>
        <function-ref name="putData" scoped="" ref="0x7faa6e5fe820"/>
        <function-ref name="putDone" scoped="" ref="0x7faa6e5fe9b0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7faa6e5feb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faa6e5fedc0" loc="73:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7faa6e5fedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faa6e5fa180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faa6e5fa310"/>
        <function-ref name="led1On" scoped="" ref="0x7faa6e5fa4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faa6e5fa630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faa6e5fa7c0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e5fa950"/>
        <function-ref name="led1Off" scoped="" ref="0x7faa6e5faae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7faa6e5f41b0"/>
        <function-ref name="set" scoped="" ref="0x7faa6e5fac70"/>
        <function-ref name="led0On" scoped="" ref="0x7faa6e5fae00"/>
        <function-ref name="led2On" scoped="" ref="0x7faa6e5f4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7faa6e5990c0" loc="341:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7faa6e5990c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa6e599440"/>
        <function-ref name="runTask" scoped="" ref="0x7faa6e5995d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7faa6e5ff4a0" loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7faa6e5ff4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7faa6e5ff820"/>
        <function-ref name="nextByte" scoped="" ref="0x7faa6e5ff9b0"/>
        <function-ref name="startSend" scoped="" ref="0x7faa6e5ffb40"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7faa6e5ffcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7faa6e5fbad0" loc="68:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7faa6e5fbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7faa6e5fbe50"/>
        <function-ref name="byteReceived" scoped="" ref="0x7faa6e602020"/>
        <function-ref name="endPacket" scoped="" ref="0x7faa6e6021b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7faa6e4cec50" loc="275:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7faa6e4cec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa6e4cd020"/>
        <function-ref name="runTask" scoped="" ref="0x7faa6e4cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7faa6e4d3830" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7faa6e4d3830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faa6eb9f0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e4d3bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa6e4d3d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa6e4d2020"/>
        <function-ref name="cancel" scoped="" ref="0x7faa6e4d21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa6e4d2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7faa6e4cd480" loc="158:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7faa6e4cd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa6e4cd800"/>
        <function-ref name="runTask" scoped="" ref="0x7faa6e4cd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7faa6e4d3110" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7faa6e4d3110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faa6eb9f0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faa6e4d34b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7faa6e4d2760" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7faa6e4d2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faa6eb9f0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7faa6e4d2b00"/>
        <function-ref name="offset" scoped="" ref="0x7faa6e4d2c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7faa6e4d2e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faa6e4cf590" loc="57:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7faa6e4cf590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faa6e4cf910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faa6e4cfaa0"/>
        <function-ref name="led1On" scoped="" ref="0x7faa6e4cfc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faa6e4cfdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faa6e4ce020"/>
        <function-ref name="get" scoped="" ref="0x7faa6e4ce1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7faa6e4ce340"/>
        <function-ref name="led2On" scoped="" ref="0x7faa6e4ce980"/>
        <function-ref name="set" scoped="" ref="0x7faa6e4ce660"/>
        <function-ref name="led2Off" scoped="" ref="0x7faa6e4ce4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7faa6e4ce7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7faa6e4d19d0" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7faa6e4d19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7faa6e4d1d50"/>
        <function-ref name="nextByte" scoped="" ref="0x7faa6e4cf020"/>
        <function-ref name="startSend" scoped="" ref="0x7faa6e4cf1b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7faa6e4cf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7faa6e4d10e0" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7faa6e4d10e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7faa6e4d1460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7faa6e4d15f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7faa6e4d1780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7faa6e4bdd20" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7faa6e4bdd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e4c70e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7faa6e4c7270"/>
        <function-ref name="receive" scoped="" ref="0x7faa6e4c7400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7faa6e4c7590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7faa6e4c7720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7faa6e4c78b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa6e4c7a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7faa6e4cbb70" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7faa6e4cbb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7faa6e4c8020"/>
        <function-ref name="resetSend" scoped="" ref="0x7faa6e4c81b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7faa6e4c8340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7faa6e4c84d0"/>
        <function-ref name="putData" scoped="" ref="0x7faa6e4c8660"/>
        <function-ref name="putDone" scoped="" ref="0x7faa6e4c87f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7faa6e4c8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faa6e4c7cc0" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7faa6e4c7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faa6e4c60a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faa6e4c6230"/>
        <function-ref name="led1On" scoped="" ref="0x7faa6e4c63c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faa6e4c6550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faa6e4c66e0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e4c6870"/>
        <function-ref name="led1Off" scoped="" ref="0x7faa6e4c6a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7faa6e4bb1b0"/>
        <function-ref name="set" scoped="" ref="0x7faa6e4c6b90"/>
        <function-ref name="led0On" scoped="" ref="0x7faa6e4c6d20"/>
        <function-ref name="led2On" scoped="" ref="0x7faa6e4bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7faa6e49f020" loc="6:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7faa6e49f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e49f3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7faa6e49f530"/>
        <function-ref name="receive" scoped="" ref="0x7faa6e49f6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7faa6e49f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7faa6e4a1890" loc="5:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7faa6e4a1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e4a1c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7faa6e4a1da0"/>
        <function-ref name="receive" scoped="" ref="0x7faa6e4a0020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7faa6e4a01b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7faa6e4a0340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7faa6e4a04d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa6e4a0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7faa6e4a1080" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7faa6e4a1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faa6e4a1400"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e4a1590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7faa6e214c70" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7faa6e214c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7faa6e213020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faa6e2131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7faa6e212440" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7faa6e212440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e2127c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7faa6e212950"/>
        <function-ref name="receive" scoped="" ref="0x7faa6e212ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7faa6e212c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7faa6e211020" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7faa6e211020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7faa6e2113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7faa6e213440" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7faa6e213440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e2137c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7faa6e213950"/>
        <function-ref name="receive" scoped="" ref="0x7faa6e213ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7faa6e213c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7faa6e213e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7faa6e212020"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa6e2121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faa6e214020" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7faa6e214020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faa6e2143a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faa6e214530"/>
        <function-ref name="request" scoped="" ref="0x7faa6e2146c0"/>
        <function-ref name="granted" scoped="" ref="0x7faa6e214850"/>
        <function-ref name="isOwner" scoped="" ref="0x7faa6e2149e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7faa6e436dd0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faa6e436dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faa6e438180"/>
        <function-ref name="configure" scoped="" ref="0x7faa6e438310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7faa6e434210" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7faa6e434210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e434590"/>
        <function-ref name="sendAvail" scoped="" ref="0x7faa6e434720"/>
        <function-ref name="receive" scoped="" ref="0x7faa6e4348b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7faa6e434a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7faa6e432600" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7faa6e432600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7faa6e432980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7faa6e438b50" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7faa6e438b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e437020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7faa6e4371b0"/>
        <function-ref name="receive" scoped="" ref="0x7faa6e437340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7faa6e4374d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7faa6e437660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7faa6e4377f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa6e437980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7faa6e433370" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7faa6e433370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faa6e4336f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faa6e433880"/>
        <function-ref name="request" scoped="" ref="0x7faa6e433a10"/>
        <function-ref name="granted" scoped="" ref="0x7faa6e433ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7faa6e433d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faa6e43a320" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7faa6e43a320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faa6e43a6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faa6e43a830"/>
        <function-ref name="request" scoped="" ref="0x7faa6e43a9c0"/>
        <function-ref name="granted" scoped="" ref="0x7faa6e43ab50"/>
        <function-ref name="isOwner" scoped="" ref="0x7faa6e43ace0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7faa6e42dbe0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7faa6e42dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7faa6e430020"/>
        <function-ref name="txDone" scoped="" ref="0x7faa6e4301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7faa6e3a8e70" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faa6e3a8e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faa6e3a7240"/>
        <function-ref name="configure" scoped="" ref="0x7faa6e3a73d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7faa6e3a6890" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7faa6e3a6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e3a6c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7faa6e3a6dc0"/>
        <function-ref name="receive" scoped="" ref="0x7faa6e3a5020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7faa6e3a51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7faa6e3a43e0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7faa6e3a43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7faa6e3a4780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7faa6e3a4a50" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7faa6e3a4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7faa6e3a4dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7faa6e3a3020"/>
        <function-ref name="setUctl" scoped="" ref="0x7faa6e3a31b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7faa6e3a3340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7faa6e3a34d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7faa6e3a3660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7faa6e3a37f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7faa6e3a3980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7faa6e3a3b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7faa6e3a3ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7faa6e3a3e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7faa6e3a2020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7faa6e3a21b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7faa6e3a2440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7faa6e3a25d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7faa6e3a2760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7faa6e3a28f0"/>
        <function-ref name="isUart" scoped="" ref="0x7faa6e3a2a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7faa6e3a2c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7faa6e3a2da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7faa6e3a1020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7faa6e3a11b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7faa6e3a1340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7faa6e3a14d0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6e3a1660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7faa6e3a19f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7faa6e3a1b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7faa6e3a1d10"/>
        <function-ref name="tx" scoped="" ref="0x7faa6e3a0020"/>
        <function-ref name="getUctl" scoped="" ref="0x7faa6e3a01b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7faa6e3a0340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7faa6e3a04d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7faa6e3a0660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7faa6e3a07f0"/>
        <function-ref name="rx" scoped="" ref="0x7faa6e3a0980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7faa6e3a0b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7faa6e3a0ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7faa6e3a0e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7faa6e39f020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7faa6e39f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7faa6e3a7790" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7faa6e3a7790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e3a7b30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7faa6e3a7cc0"/>
        <function-ref name="receive" scoped="" ref="0x7faa6e3a7e50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7faa6e3a6020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7faa6e3a61b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7faa6e3a6340"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa6e3a64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7faa6e39e020" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7faa6e39e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6ebed680"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa6ebed9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faa6e39ee30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6e39d800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6e39d340"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6e39dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7faa6e3a55b0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7faa6e3a55b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faa6e3a5950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faa6e3a5ae0"/>
        <function-ref name="request" scoped="" ref="0x7faa6e3a5c70"/>
        <function-ref name="granted" scoped="" ref="0x7faa6e3a5e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7faa6e3a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faa6e3a80d0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7faa6e3a80d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faa6e3a8470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faa6e3a8600"/>
        <function-ref name="request" scoped="" ref="0x7faa6e3a8790"/>
        <function-ref name="granted" scoped="" ref="0x7faa6e3a8920"/>
        <function-ref name="isOwner" scoped="" ref="0x7faa6e3a8ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7faa6e39f5b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7faa6e39f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7faa6e39f950"/>
        <function-ref name="txDone" scoped="" ref="0x7faa6e39fae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faa6e39b120" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7faa6e39b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faa6e39b4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faa6e39b630"/>
        <function-ref name="led1On" scoped="" ref="0x7faa6e39b7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faa6e39b950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faa6e39bae0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e39bc70"/>
        <function-ref name="led1Off" scoped="" ref="0x7faa6e39be00"/>
        <function-ref name="led2On" scoped="" ref="0x7faa6e39a4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6e39a1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7faa6e39a020"/>
        <function-ref name="led0On" scoped="" ref="0x7faa6e39a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7faa6e38b080" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7faa6e38b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7faa6e38b400"/>
        <function-ref name="txDone" scoped="" ref="0x7faa6e38b590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7faa6e38fca0" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7faa6e38fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faa6e3910a0"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e391230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7faa6e391550" loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7faa6e391550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7faa6e3918d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7faa6e391a60"/>
        <function-ref name="setUctl" scoped="" ref="0x7faa6e391bf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7faa6e391d80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7faa6e390020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7faa6e3901b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7faa6e390340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7faa6e3904d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7faa6e390660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7faa6e3907f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7faa6e390980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7faa6e390b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7faa6e390ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7faa6e38e020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7faa6e38e1b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7faa6e38e340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7faa6e38e4d0"/>
        <function-ref name="isUart" scoped="" ref="0x7faa6e38e660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7faa6e38e7f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7faa6e38e980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7faa6e38eb10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7faa6e38eca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7faa6e38ee30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7faa6e38d020"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6e38d1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7faa6e38d540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7faa6e38d6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7faa6e38d860"/>
        <function-ref name="tx" scoped="" ref="0x7faa6e38d9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7faa6e38db80"/>
        <function-ref name="disableUart" scoped="" ref="0x7faa6e38dd10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7faa6e38c020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7faa6e38c1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7faa6e38c340"/>
        <function-ref name="rx" scoped="" ref="0x7faa6e38c4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7faa6e38c660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7faa6e38c7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7faa6e38c980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7faa6e38cb10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7faa6e38cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7faa6e37d1f0" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7faa6e37d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e37d570"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e37d700"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e37d890"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e37da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e37dbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e37dd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e37c020"/>
        <function-ref name="get" scoped="" ref="0x7faa6e37c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e37c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e37c4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6e37c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e37c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e37c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e37cc10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e37cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7faa6e382910" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7faa6e382910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7faa6e382c90"/>
        <function-ref name="txDone" scoped="" ref="0x7faa6e382e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7faa6e37a1f0" loc="81:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7faa6e37a1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e37a570"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e37a700"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e37a890"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e37aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e37abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e37ad40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e379020"/>
        <function-ref name="get" scoped="" ref="0x7faa6e3791b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e379340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e3794d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6e379660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e3797f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e379980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e379c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e379da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7faa6e3781f0" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7faa6e3781f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e378570"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e378700"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e378890"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e378a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e378bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e378d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e377020"/>
        <function-ref name="get" scoped="" ref="0x7faa6e3771b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e377340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e3774d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6e377660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e3777f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e377980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e377c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e377da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7faa6e387cc0" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7faa6e387cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7faa6e3860a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7faa6e386230"/>
        <function-ref name="setUctl" scoped="" ref="0x7faa6e3863c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7faa6e386550"/>
        <function-ref name="setUrctl" scoped="" ref="0x7faa6e3866e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7faa6e386870"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7faa6e386a00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7faa6e386b90"/>
        <function-ref name="getUrctl" scoped="" ref="0x7faa6e386d20"/>
        <function-ref name="resetUsart" scoped="" ref="0x7faa6e385020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7faa6e3851b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7faa6e385340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7faa6e3854d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7faa6e385760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7faa6e3858f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7faa6e385a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7faa6e385c10"/>
        <function-ref name="isUart" scoped="" ref="0x7faa6e385da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7faa6e384020"/>
        <function-ref name="isSpi" scoped="" ref="0x7faa6e3841b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7faa6e384340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7faa6e3844d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7faa6e384660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7faa6e3847f0"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6e384980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7faa6e384d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7faa6e383020"/>
        <function-ref name="setUbr" scoped="" ref="0x7faa6e3831b0"/>
        <function-ref name="tx" scoped="" ref="0x7faa6e383340"/>
        <function-ref name="getUctl" scoped="" ref="0x7faa6e3834d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7faa6e383660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7faa6e3837f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7faa6e383980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7faa6e383b10"/>
        <function-ref name="rx" scoped="" ref="0x7faa6e383ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7faa6e383e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7faa6e382020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7faa6e3821b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7faa6e382340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7faa6e3824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7faa6e387410" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7faa6e387410"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faa6e387790"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e387920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7faa6e37f1f0" loc="79:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7faa6e37f1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e37f570"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e37f700"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e37f890"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e37fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e37fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e37fd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e37e020"/>
        <function-ref name="get" scoped="" ref="0x7faa6e37e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e37e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e37e4d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6e37e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e37e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e37e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e37ec10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e37eda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7faa6e381210" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7faa6e381210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faa6e381590"/>
        <function-ref name="isInput" scoped="" ref="0x7faa6e381720"/>
        <function-ref name="setResistor" scoped="" ref="0x7faa6e3818b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faa6e381a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7faa6e381bd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7faa6e381d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faa6e380020"/>
        <function-ref name="get" scoped="" ref="0x7faa6e3801b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7faa6e380340"/>
        <function-ref name="getRaw" scoped="" ref="0x7faa6e3804d0"/>
        <function-ref name="set" scoped="" ref="0x7faa6e380660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7faa6e3807f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7faa6e380980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7faa6e380c10"/>
        <function-ref name="clr" scoped="" ref="0x7faa6e380da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7faa6e2fa110" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7faa6e2fa110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7faa6ebed680"/>
            <typename><typedef-ref name="T32khz" ref="0x7faa6ebed9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faa6e2f9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faa6e2f99a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faa6e2f94e0"/>
        <function-ref name="overflow" scoped="" ref="0x7faa6e2f9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7faa6db37020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7faa6db37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7faa6db373a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faa6db37530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7faa6db30440" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faa6db30440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faa6db307c0"/>
        <function-ref name="configure" scoped="" ref="0x7faa6db30950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7faa6db31c10" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7faa6db31c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7faa6db30020"/>
        <function-ref name="txDone" scoped="" ref="0x7faa6db301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faa6db38340" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7faa6db38340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faa6db386c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faa6db38850"/>
        <function-ref name="request" scoped="" ref="0x7faa6db389e0"/>
        <function-ref name="granted" scoped="" ref="0x7faa6db38b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7faa6db38d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7faa6db35020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7faa6db35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7faa6db353a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7faa6db35530"/>
        <function-ref name="setUctl" scoped="" ref="0x7faa6db356c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7faa6db35850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7faa6db359e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7faa6db35b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7faa6db35d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7faa6db34020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7faa6db341b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7faa6db34340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7faa6db344d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7faa6db34660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7faa6db347f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7faa6db34a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7faa6db34c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7faa6db34da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7faa6db33020"/>
        <function-ref name="isUart" scoped="" ref="0x7faa6db331b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7faa6db33340"/>
        <function-ref name="isSpi" scoped="" ref="0x7faa6db334d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7faa6db33660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7faa6db337f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7faa6db33980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7faa6db33b10"/>
        <function-ref name="getMode" scoped="" ref="0x7faa6db33ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7faa6db32220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7faa6db323b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7faa6db32540"/>
        <function-ref name="tx" scoped="" ref="0x7faa6db326d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7faa6db32860"/>
        <function-ref name="disableUart" scoped="" ref="0x7faa6db329f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7faa6db32b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7faa6db32d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7faa6db31020"/>
        <function-ref name="rx" scoped="" ref="0x7faa6db311b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7faa6db31340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7faa6db314d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7faa6db31660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7faa6db317f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7faa6db31980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7faa6db377c0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faa6db377c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faa6db37b40"/>
        <function-ref name="userId" scoped="" ref="0x7faa6db37cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7faa6e2ded50" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7faa6e2ded50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7faa6e2db100"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faa6e2db290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7faa6e2d9370" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faa6e2d9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faa6e2d96f0"/>
        <function-ref name="configure" scoped="" ref="0x7faa6e2d9880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7faa6e2e2ce0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7faa6e2e2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7faa6e2df0a0"/>
        <function-ref name="txDone" scoped="" ref="0x7faa6e2df230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faa6e2dfa60" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7faa6e2dfa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faa6e2dfde0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faa6e2de020"/>
        <function-ref name="request" scoped="" ref="0x7faa6e2de1b0"/>
        <function-ref name="granted" scoped="" ref="0x7faa6e2de340"/>
        <function-ref name="isOwner" scoped="" ref="0x7faa6e2de4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7faa6e2db590" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faa6e2db590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faa6e2db910"/>
        <function-ref name="userId" scoped="" ref="0x7faa6e2dbaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7faa6e2c34b0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faa6e2c34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faa6e2c3830"/>
        <function-ref name="userId" scoped="" ref="0x7faa6e2c39c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7faa6e2d65c0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7faa6e2d65c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7faa6e2d6960"/>
        <function-ref name="txDone" scoped="" ref="0x7faa6e2d6af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7faa6e2c5e70" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7faa6e2c5e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6e2c3220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7faa6e2c5020" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7faa6e2c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faa6e2c53c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7faa6e2c5690" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7faa6e2c5690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7faa6e2c5a10"/>
        <function-ref name="txDone" scoped="" ref="0x7faa6e2c5ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7faa6e24abf0" loc="92:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7faa6e24abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7faa6e249020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faa6e2491b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7faa6e248930" loc="96:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faa6e248930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faa6e248cd0"/>
        <function-ref name="configure" scoped="" ref="0x7faa6e248e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7faa6e249400" loc="93:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faa6e249400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faa6e249780"/>
        <function-ref name="requested" scoped="" ref="0x7faa6e249910"/>
        <function-ref name="granted" scoped="" ref="0x7faa6e249aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7faa6e249c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faa6e249dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faa6e24be60" loc="91:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7faa6e24be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faa6e24a230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faa6e24a3c0"/>
        <function-ref name="request" scoped="" ref="0x7faa6e24a550"/>
        <function-ref name="granted" scoped="" ref="0x7faa6e24a6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7faa6e24a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7faa6e248060" loc="94:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faa6e248060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faa6e2483e0"/>
        <function-ref name="userId" scoped="" ref="0x7faa6e248570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa6dacdca0" loc="44:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa6dacdca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6dacb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7faa6dacb330" loc="45:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7faa6dacb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7faa6dacb6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7faa6dacb840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7faa6dacb9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7faa6dacbb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7faa6dac83a0" loc="55:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7faa6dac83a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7faa6dac8740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faa6dac88d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7faa6dac6210" loc="60:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faa6dac6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faa6dac65b0"/>
        <function-ref name="configure" scoped="" ref="0x7faa6dac6740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7faa6dac69d0" loc="61:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7faa6dac69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7faa6dac6d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7faa6dac5020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7faa6dac51b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7faa6dac5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7faa6dac8b20" loc="56:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faa6dac8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faa6dac7020"/>
        <function-ref name="requested" scoped="" ref="0x7faa6dac71b0"/>
        <function-ref name="granted" scoped="" ref="0x7faa6dac7340"/>
        <function-ref name="isOwner" scoped="" ref="0x7faa6dac74d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faa6dac7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faa6dac5590" loc="62:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7faa6dac5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faa6dac5910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faa6dac5aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7faa6dac5c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faa6dac5dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faa6dac3020"/>
        <function-ref name="get" scoped="" ref="0x7faa6dac31b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7faa6dac3340"/>
        <function-ref name="led0On" scoped="" ref="0x7faa6dac3980"/>
        <function-ref name="set" scoped="" ref="0x7faa6dac3660"/>
        <function-ref name="led2On" scoped="" ref="0x7faa6dac34d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7faa6dac37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faa6dac9540" loc="54:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7faa6dac9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faa6dac98e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faa6dac9a70"/>
        <function-ref name="request" scoped="" ref="0x7faa6dac9c00"/>
        <function-ref name="granted" scoped="" ref="0x7faa6dac9d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7faa6dac8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7faa6dac78b0" loc="57:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faa6dac78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faa6dac7c30"/>
        <function-ref name="userId" scoped="" ref="0x7faa6dac7dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7faa6dac3c50" loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7faa6dac3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa6dac2020"/>
        <function-ref name="runTask" scoped="" ref="0x7faa6dac21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7faa6e22d400" loc="72:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7faa6e22d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7faa6e22d780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7faa6e22d9d0" loc="73:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faa6e22d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faa6e22dd50"/>
        <function-ref name="requested" scoped="" ref="0x7faa6e22c020"/>
        <function-ref name="granted" scoped="" ref="0x7faa6e22c1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7faa6e22c340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faa6e22c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7faa6e243b20" loc="70:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7faa6e243b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faa6e22d020"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e22d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7faa6e22c720" loc="74:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faa6e22c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faa6e22caa0"/>
        <function-ref name="userId" scoped="" ref="0x7faa6e22cc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7faa6da93b00" loc="62:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7faa6da93b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7faa6da93e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7faa6da920f0" loc="63:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faa6da920f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faa6da92470"/>
        <function-ref name="requested" scoped="" ref="0x7faa6da92600"/>
        <function-ref name="granted" scoped="" ref="0x7faa6da92790"/>
        <function-ref name="isOwner" scoped="" ref="0x7faa6da92920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faa6da92ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7faa6da933a0" loc="60:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7faa6da933a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faa6da93720"/>
        <function-ref name="stop" scoped="" ref="0x7faa6da938b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7faa6da92d00" loc="64:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faa6da92d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faa6da910a0"/>
        <function-ref name="userId" scoped="" ref="0x7faa6da91230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7faa6e20d920" loc="3:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7faa6e20d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7faa6e20dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7faa6e20c020" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7faa6e20c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faa6e20c3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faa6e20c530"/>
        <function-ref name="request" scoped="" ref="0x7faa6e20c6c0"/>
        <function-ref name="granted" scoped="" ref="0x7faa6e20c850"/>
        <function-ref name="isOwner" scoped="" ref="0x7faa6e20c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7faa6e20d0c0" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7faa6e20d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faa6e20d440"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e20d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7faa6e1fa8d0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7faa6e1fa8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7faa6e1fac50"/>
        <function-ref name="offset" scoped="" ref="0x7faa6e1fade0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7faa6e1f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7faa6e1dc930" loc="43:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7faa6e1dc930"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7faa6e1bb790"/>
        <function-ref name="enqueue" scoped="" ref="0x7faa6e1b90d0"/>
        <function-ref name="element" scoped="" ref="0x7faa6e1b95a0"/>
        <function-ref name="full" scoped="" ref="0x7faa6e1bc9e0"/>
        <function-ref name="maxSize" scoped="" ref="0x7faa6e1bb310"/>
        <function-ref name="dequeue" scoped="" ref="0x7faa6e1bbc10"/>
        <function-ref name="empty" scoped="" ref="0x7faa6e1bc560"/>
        <function-ref name="size" scoped="" ref="0x7faa6e1bce60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7faa6e1b4020" loc="93:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7faa6e1b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7faa6e1b3e50"/>
        <function-ref name="enqueue" scoped="" ref="0x7faa6e1b0780"/>
        <function-ref name="element" scoped="" ref="0x7faa6e1b0c50"/>
        <function-ref name="full" scoped="" ref="0x7faa6e1b30d0"/>
        <function-ref name="maxSize" scoped="" ref="0x7faa6e1b39d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7faa6e1b0300"/>
        <function-ref name="empty" scoped="" ref="0x7faa6e1b4c10"/>
        <function-ref name="size" scoped="" ref="0x7faa6e1b3550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7faa6e1af100" loc="94:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7faa6e1af100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faa6e1af480"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa6e1af610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa6e1af7a0"/>
        <function-ref name="cancel" scoped="" ref="0x7faa6e1af930"/>
        <function-ref name="sendDone" scoped="" ref="0x7faa6e1afac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7faa6e1afd50" loc="95:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7faa6e1afd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faa6e1ae100"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faa6e1ae290"/>
        <function-ref name="getPayload" scoped="" ref="0x7faa6e1ae420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faa6e1ae5b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faa6e1ae740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7faa6e1a81d0" loc="114:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7faa6e1a81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faa6e1a8550"/>
        <function-ref name="runTask" scoped="" ref="0x7faa6e1a86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa6e1b8d70" loc="89:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa6e1b8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6e1b5180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faa6e1ae9c0" loc="96:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7faa6e1ae9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faa6e1aed40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faa6e1ad020"/>
        <function-ref name="led1On" scoped="" ref="0x7faa6e1ad1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faa6e1ad340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faa6e1ad4d0"/>
        <function-ref name="get" scoped="" ref="0x7faa6e1ad660"/>
        <function-ref name="led1Off" scoped="" ref="0x7faa6e1ad7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7faa6e1ade30"/>
        <function-ref name="set" scoped="" ref="0x7faa6e1ad980"/>
        <function-ref name="led0On" scoped="" ref="0x7faa6e1adb10"/>
        <function-ref name="led2On" scoped="" ref="0x7faa6e1adca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7faa6e1b25f0" loc="90:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7faa6e1b25f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7faa6e1b2970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7faa6e1927e0" loc="43:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7faa6e1927e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7faa6e192b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faa6e18eb20" loc="94:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7faa6e18eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faa6e18a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7faa6e18a300" loc="95:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7faa6e18a300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7faa6e18a680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7faa6e1820f0" loc="39:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7faa6e1820f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7faa6e182470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7faa6e182810" loc="40:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7faa6e182810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faa6e182b90"/>
        <function-ref name="stopDone" scoped="" ref="0x7faa6e182d20"/>
        <function-ref name="start" scoped="" ref="0x7faa6e181020"/>
        <function-ref name="stop" scoped="" ref="0x7faa6e1811b0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7faa6edc7e10" loc="62:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7faa6edc8a20" loc="60:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7faa6ed97b40" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7faa6ed9ade0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7faa6ed97420" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7faa6ed9a700" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7faa6ed985a0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7faa6ed9d910" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7faa6ed9a020" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7faa6ed98cc0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7faa6eedb020" loc="62:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7faa6f1a0dd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7faa6ed44020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7faa6ed45cc0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7faa6ed48390" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faa6ed8f5a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7faa6ed8d440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7faa6ed44890" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7faa6ed437b0" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7faa6ed45560" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7faa6ed43020" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7faa6ed48b30" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7faa6ed47350" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7faa6ed47da0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faa6ed8f5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7faa6ed8d440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7faa6ed47b20" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faa6ed8f5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7faa6ed8d440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7faa6ed370e0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7faa6ed34730" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7faa6ed344b0" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7faa6ed332e0" loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7faa6ed33060" loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7faa6ed35ca0" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7faa6ed353e0" loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7faa6ed37a90" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7faa6ed37810" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7faa6ed3e3e0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7faa6ed3ed60" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7faa6ed3eae0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7faa6ed3c790" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7faa6ed3c510" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7faa6ed3b2a0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7faa6ed3b020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7faa6ed3b990" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7faa6ed4e810" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7faa6ed4b2a0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7faa6ed4b020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7faa6ed4d020" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7faa6ed54ab0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7faa6ed4d760" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7faa6ed519b0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7faa6ed4e120" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7faa6ed51270" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7faa6ed4f0e0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7faa6ed4f9f0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7faa6ed4f770" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7faa6ed4bcb0" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7faa6ed4ba30" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7faa6ed0d1f0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7faa6edfea80" loc="85:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7faa6edfd1f0" loc="86:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7faa6edfe2b0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7faa6f017830" loc="52:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7faa6f259020" loc="57:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7faa6f258020" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7faa6f259790" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7faa6f24d350" loc="67:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7faa6f24dba0" loc="75:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faa6eb8cbf0" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faa6eb8cbf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7faa6eb82980" loc="136:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7faa6eb861f0" loc="83:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7faa6eb84020" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7faa6eb859a0" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7faa6eb85ce0" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7faa6eb851f0" loc="98:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7faa6eb81a10" loc="151:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7faa6eb81190" loc="144:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7faa6eb869d0" loc="92:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7faa6eb89790" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7faa6eb89510" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7faa6eb82020" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7faa6eb849c0" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7faa6eb84d00" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7faa6eb872a0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7faa6eb87020" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7faa6eb87aa0" loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7faa6eb6da60" loc="61:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7faa6eb6b270" loc="67:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7faa6eb6ba50" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7faa6eb6aa20" loc="83:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7faa6eb681f0" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7faa6eb68a00" loc="117:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7faa6eb6a270" loc="77:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7faa6eb665a0" loc="134:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7faa6eb66320" loc="134:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7faa6eb6d2d0" loc="56:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7faa6eb69270" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7faa6eb69a00" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7faa6eb4ae30" loc="44:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7faa6eb495c0" loc="45:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7faa6eb4a020" loc="42:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7faa6eb48480" loc="47:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7faa6eb4a720" loc="43:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7faa6eb49ce0" loc="46:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7faa6eb4c120" loc="40:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7faa6eb4c7f0" loc="41:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7faa6eb1e020" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7faa6eb1e770" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7faa6eb192e0" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7faa6eb19060" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7faa6eb21770" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7faa6eb1d780" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7faa6eb19bd0" loc="117:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7faa6eb1d020" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7faa6eb1f820" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7faa6eb1a020" loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7faa6eb1f020" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7faa6eb248c0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7faa6eb1b020" loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7faa6eb1a7c0" loc="101:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7faa6eb1b7e0" loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7faa6eb21020" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faa6e8d0c50" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faa6e8d0c50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7faa6e8cc5a0" loc="61:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7faa6f8b9920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faa6e8c75d0" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faa6e8c75d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7faa6e8c7810" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa6e8c7810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7faa6e8c2390" loc="109:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa6e8c7810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7faa6e8c43b0" loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7faa6e8c39d0" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa6e8c7810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa6e8c7810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7faa6e8c3400" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa6e8c7810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7faa6e8c3740" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa6e8c7810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7faa6e8c4b90" loc="88:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7faa6e8c2b80" loc="116:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa6e8c7810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7faa6e8c6390" loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa6e8c7810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7faa6e8c6110" loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa6e8c7810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7faa6e8c6bc0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faa6e859e20" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faa6e859e20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7faa6e8540d0" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa6e8540d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7faa6e8549f0" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faa6e8540d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7faa6e853b10" loc="76:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7faa6e8532b0" loc="71:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7faa6e8522b0" loc="82:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7faa6e7200d0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7faa6eba1d10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7faa6e722730" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7faa6eba1d10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7faa6e722ab0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faa6e722de0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7faa6e71d6d0" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa6e71d0d0" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faa6e71d400" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7faa6e71b840" loc="123:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7faa6e71f430" loc="96:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa6e71f1b0" loc="96:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7faa6e71e950" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa6e71e370" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7faa6e71e6c0" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7faa6e717020" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa6e724c60" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7faa6e716110" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa6e717e10" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7faa6e712490" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa6e713e50" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faa6e7121c0" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7faa6e713560" loc="106:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7faa6e7155e0" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa6e715020" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faa6e715350" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7faa6e703d30" loc="177:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7faa6eba1930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faa6e703ab0" loc="177:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7faa6e70ca10" loc="88:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7faa6eba1d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faa6e70c790" loc="88:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7faa6e723e60" loc="68:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7faa6eba1d10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7faa6e70e950" loc="78:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7faa6eba1d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faa6e70e6d0" loc="78:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7faa6e7093a0" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7faa6eba1d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faa6e70ad70" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7faa6e709110" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7faa6eba1d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7faa6e70be50" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7faa6eba1d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faa6e70b870" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7faa6e70bbc0" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7faa6eba1d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7faa6e706810" loc="147:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7faa6eba1550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faa6e706590" loc="147:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7faa6e704b90" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7faa6eba1550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faa6e7045e0" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7faa6e704900" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7faa6eba1550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7faa6e708600" loc="136:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faa6e708380" loc="136:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7faa6e7012f0" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7faa6eba1930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faa6e705cf0" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7faa6e701060" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7faa6eba1930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7faa6e700190" loc="195:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7faa6eba1930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7faa6e6fcad0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa6e6fc850" loc="59:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7faa6e6facd0" loc="71:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa6e6faa50" loc="71:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7faa6e6f8020" loc="85:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa6e6fbce0" loc="85:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7faa6e6f25e0" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa6e6f2020" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faa6e6f2350" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7faa6e6edbb0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa6e6ed5b0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faa6e6ed8e0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7faa6e6efd20" loc="112:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7faa6e6f0900" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa6e6f0680" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7faa6e6eee00" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa6e6ee820" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7faa6e6eeb70" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7faa6e681ab0" loc="113:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7faa6e681830" loc="113:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7faa6e67f020" loc="138:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7faa6e680d30" loc="138:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7faa6e685d70" loc="104:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7faa6e680350" loc="130:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7faa6e67b410" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
              <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa6e683a90" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7faa6e683de0" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faa6e67b130" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7faa6e60e630" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa6e60e020" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7faa6e60e3a0" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7faa6e610670" loc="15:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7faa6e60f620" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faa6e60f020" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faa6eb90080"/>
                <typename><typedef-ref name="message_t" ref="0x7faa6eb8f6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7faa6e60f390" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7faa6e5f10e0" loc="95:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7faa6e5f18f0" loc="105:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7faa6e5ef790" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7faa6e5ef020" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7faa6e5f9120" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7faa6e5f8560" loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7faa6e5f52a0" loc="94:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faa6e5f5020" loc="94:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7faa6e5f8de0" loc="79:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7faa6e5f9c90" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faa6e5f9a10" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7faa6e5f5b00" loc="100:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7faa6e5f66e0" loc="85:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7faa6e601990" loc="71:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7faa6e600350" loc="81:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7faa6e601020" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7faa6e604c30" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7faa6e5ff020" loc="91:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7faa6e600c50" loc="91:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7faa6e603c60" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7faa6e5fca60" loc="69:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faa6e5fc7e0" loc="69:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7faa6e5fb5c0" loc="80:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7faa6e5fb340" loc="80:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7faa6e4c5c40" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7faa6e4c5670" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faa6e4c59b0" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7faa6e4c0a70" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7faa6e4c07f0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7faa6e4bf890" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7faa6e4bf2c0" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faa6e4bf600" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7faa6e4c1610" loc="65:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7faa6e4bd2c0" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7faa6e4bc820" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faa6e4bcb60" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7faa6e4bd020" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7faa6e4c0020" loc="72:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7faa6e4c4610" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7faa6e4c3bd0" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faa6e4c4020" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7faa6e4c4370" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7faa6e49d5b0" loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7faa6e49d330" loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7faa6e49ddf0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7faa6e49bcf0" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7faa6e49b700" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7faa6e49ba60" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7faa6e499b50" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7faa6e441270" loc="53:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7faa6e441ba0" loc="61:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7faa6e43d070" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7faa6e465450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7faa6e465870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7faa6e4449c0" loc="120:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7faa6e446990" loc="97:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7faa6e446020" loc="88:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7faa6e4441f0" loc="102:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7faa6e443470" loc="128:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7faa6e436510" loc="65:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7faa6e439cc0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7faa6e42d2a0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faa6e42d020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7faa6e42e780" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7faa6e408af0" loc="213:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7faa6e414790" loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7faa6e420530" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7faa6e4953b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7faa6e495bf0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7faa6e4202b0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7faa6e4953b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7faa6e495bf0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7faa6e416870" loc="123:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7faa6e41ea40" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7faa6e490360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7faa6e490ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7faa6e41e7c0" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7faa6e490360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7faa6e490ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7faa6e40de70" loc="180:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7faa6e40a480" loc="197:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7faa6e41e020" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7faa6e492290"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7faa6e492a20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7faa6e41d270" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7faa6e490360"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7faa6e490ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7faa6e419020" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7faa6e41ad30" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7faa6e41a610" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7faa6e40d740" loc="179:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7faa6e41f780" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7faa6e492290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7faa6e492a20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7faa6e41f500" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7faa6e492290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7faa6e492a20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7faa6e41b420" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7faa6e40c5d0" loc="181:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7faa6e41be00" loc="90:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7faa6e41bb80" loc="90:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7faa6e418910" loc="113:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7faa6e4160e0" loc="118:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7faa6e40f840" loc="177:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7faa6e411790" loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7faa6e4157e0" loc="133:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7faa6e40d020" loc="178:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7faa6e412020" loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7faa6e40ccf0" loc="182:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7faa6e419800" loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7faa6e49e330"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7faa6e497a50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7faa6e40b4c0" loc="187:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7faa6e408350" loc="207:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7faa6e41dc10" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7faa6e41d990" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7faa6e4074d0" loc="224:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faa6e407250" loc="224:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7faa6e420d10" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7faa6e4953b0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7faa6e495bf0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7faa6e415020" loc="128:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7faa6e412770" loc="153:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7faa6e40f020" loc="174:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7faa6e465450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7faa6e465870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7faa6e410cf0" loc="174:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7faa6e465450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7faa6e465870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7faa6e4102a0" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7faa6e478420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7faa6e478840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7faa6e410020" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7faa6e478420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7faa6e478840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7faa6e407d90" loc="231:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7faa6e40bcb0" loc="192:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7faa6e418070" loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7faa6e40abe0" loc="202:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7faa6e411020" loc="158:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7faa6e414020" loc="138:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7faa6e38f030" loc="95:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7faa6e38f880" loc="105:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7faa6e2e9020" loc="90:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7faa6e2e9880" loc="98:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faa6f8b9160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7faa6e2d24a0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7faa6e2b8900" loc="56:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7faa6e2b7a20" loc="73:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7faa6e2b8070" loc="46:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7faa6e2b71f0" loc="65:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7faa6e2b6390" loc="81:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7faa6e2acb60" loc="79:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7faa6e2b5b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7faa6e2ac8e0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7faa6e2b5b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7faa6e2b0b90" loc="53:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7faa6e2ad6f0" loc="62:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7faa6e2b5b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7faa6e2ad470" loc="62:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7faa6e2b5b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7faa6e2ac030" loc="70:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7faa6e2b5b40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7faa6e23f4b0" loc="62:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BigQueue" loc="43:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-09-19 17:29:17 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7faa6e1d82a0" loc="43:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <interfacedef-ref qname="BigQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7faa6e1d82a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7faa6e1d6ac0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7faa6e1d82a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7faa6e1d5cb0" loc="97:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param newVal - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faa6f254cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7faa6e1d82a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7faa6e1d5a30" loc="97:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7faa6e1d82a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7faa6e1d3720" loc="108:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7faa6e1d82a0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7faa6e1d34a0" loc="108:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7faa6e1d7350" loc="57:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7faa6e1d6350" loc="72:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7faa6e1d52b0" loc="88:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7faa6e1d82a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7faa6e1d8b50" loc="50:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faa6f25d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7faa6e1d7ae0" loc="65:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7faa6f8b9520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7faa6e1b22a0" loc="49:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7faa6e1b2020" loc="49:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
