<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="62:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f40ac134020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f40ac321df0"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f40ac321df0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f40ac153590"/></to>
    </wire>
    <wire loc="64:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7f40ac1397f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f40abd08370"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f40abd08370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f40abea9610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f40ac12a8d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f40ac147870"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f40ac147870"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f40ac11b2a0"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f40ac31d320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40ab762b20"/></to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f40ac31d320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40ab0acca0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f40ac31d320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40abbf1bc0"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f40ac31d320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40ab78a470"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f40ac31d320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40abea1400"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f40ac153c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f40ac8103a0"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f40ac8103a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f40ac3bb140"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f40ac1526c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40ac31f300"/></to>
    </wire>
    <wire loc="48:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f40ac31f300"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40ac318510"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f40ac152dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f40ac31d320"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f40ac318c20"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f40ac319910"/></to>
    </wire>
    <wire loc="46:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f40ac319910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40ac2f9850"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f40ac317380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40ac31a6d0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f40ac317a60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40ac0f3c40"/></to>
    </wire>
    <wire loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f40ac2f9850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40ac2e0c00"/></to>
    </wire>
    <wire loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f40ac2f0de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f40ac2df350"/></to>
    </wire>
    <wire loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f40ac4934c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f40ac2de680"/></to>
    </wire>
    <wire loc="113:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f40ac29b5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f40ac1d86d0"/></to>
    </wire>
    <wire loc="126:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f40ac289020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f40ac1d1b30"/></to>
    </wire>
    <wire loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f40ac292700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f40ac1de160"/></to>
    </wire>
    <wire loc="149:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f40ac276a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f40ac1b7cb0"/></to>
    </wire>
    <wire loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f40ac299aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f40ac1df480"/></to>
    </wire>
    <wire loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f40ac27c020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f40ac1b7020"/></to>
    </wire>
    <wire loc="170:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f40ac273a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f40ac1a0cb0"/></to>
    </wire>
    <wire loc="154:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f40ac2835a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f40ac1b1220"/></to>
    </wire>
    <wire loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f40ac29cb10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f40ac22e9d0"/></to>
    </wire>
    <wire loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f40ac278a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f40ac1c62f0"/></to>
    </wire>
    <wire loc="134:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f40ac27e3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f40ac1c7610"/></to>
    </wire>
    <wire loc="133:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f40ac2885a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f40ac1c8220"/></to>
    </wire>
    <wire loc="115:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f40ac291700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f40ac1d67a0"/></to>
    </wire>
    <wire loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f40ac275a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f40ac1af2f0"/></to>
    </wire>
    <wire loc="140:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f40ac287be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f40ac1c16d0"/></to>
    </wire>
    <wire loc="114:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f40ac298890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f40ac1d7ac0"/></to>
    </wire>
    <wire loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f40ac2ac060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f40ac23c540"/></to>
    </wire>
    <wire loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f40ac27cda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f40ac1b0610"/></to>
    </wire>
    <wire loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f40ac2a20c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f40ac1e0020"/></to>
    </wire>
    <wire loc="161:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f40ac282a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f40ac1a96d0"/></to>
    </wire>
    <wire loc="101:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f40ac28c6d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f40ac1e6a90"/></to>
    </wire>
    <wire loc="142:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f40ac277a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f40ac1bf7a0"/></to>
    </wire>
    <wire loc="100:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f40ac294cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f40ac1e7de0"/></to>
    </wire>
    <wire loc="141:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f40ac27d1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f40ac1c0ac0"/></to>
    </wire>
    <wire loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f40ac274a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f40ac1a77a0"/></to>
    </wire>
    <wire loc="147:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f40ac2840c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f40ac1b9b30"/></to>
    </wire>
    <wire loc="120:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f40ac28b6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f40ac2343e0"/></to>
    </wire>
    <wire loc="162:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f40ac27bb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f40ac1a8ac0"/></to>
    </wire>
    <wire loc="128:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f40ac279a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f40ac1cfcb0"/></to>
    </wire>
    <wire loc="169:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f40ac27aa20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f40ac1a0020"/></to>
    </wire>
    <wire loc="127:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f40ac27f570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f40ac1cf020"/></to>
    </wire>
    <wire loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f40ac280020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f40ac1a2b30"/></to>
    </wire>
    <wire loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f40ac23a450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f40ac23bd80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f40ac23aaa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f40ac19baa0"/></to>
    </wire>
    <wire loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f40ac239120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f40ac197260"/></to>
    </wire>
    <wire loc="102:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f40ac1e5930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f40ac23c540"/></to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f40ac1e3020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f40ac23bd80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f40ac1dd020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f40ac23c540"/></to>
    </wire>
    <wire loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f40ac1db7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f40ac23bd80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f40ac1d5610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f40ac23c540"/></to>
    </wire>
    <wire loc="117:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f40ac1d4c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f40ac23bd80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f40ac2322f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f40ac233bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f40ac232940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f40ac1979f0"/></to>
    </wire>
    <wire loc="123:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f40ac231020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f40ac196240"/></to>
    </wire>
    <wire loc="129:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f40ac1ceb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f40ac2343e0"/></to>
    </wire>
    <wire loc="130:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f40ac1cc2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f40ac233bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f40ac1c5160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f40ac2343e0"/></to>
    </wire>
    <wire loc="137:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f40ac1c47a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f40ac233bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f40ac1be610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f40ac2343e0"/></to>
    </wire>
    <wire loc="144:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f40ac1bdc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f40ac233bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f40ac1b6b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f40ac2343e0"/></to>
    </wire>
    <wire loc="151:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f40ac1b42f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f40ac233bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f40ac1ae160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f40ac2343e0"/></to>
    </wire>
    <wire loc="158:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f40ac1ad7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f40ac233bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f40ac1a6610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f40ac2343e0"/></to>
    </wire>
    <wire loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f40ac1a5c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f40ac233bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f40ac19fb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f40ac2343e0"/></to>
    </wire>
    <wire loc="172:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f40ac19d2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f40ac233bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f40ac87f4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f40ac3b9040"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f40ac3b5490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f40ac7a73b0"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f40ac0f3c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40ac11ec40"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f40ac113910"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f40ac0f6360"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f40ac0f6360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f40abedb020"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f40ac119b10"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f40ac0f56a0"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f40ac0f56a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f40abec7b90"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f40ac112e30"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f40ac0f49c0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f40ac0f49c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f40abec2710"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f40abeca2f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f40ac09b200"/></to>
    </wire>
    <wire loc="486:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f40ac09b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf78740"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f40abec6de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f40ac099200"/></to>
    </wire>
    <wire loc="487:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f40ac099200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf73100"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f40abec1930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f40ac097200"/></to>
    </wire>
    <wire loc="488:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f40ac097200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf6ed10"/></to>
    </wire>
    <wire loc="442:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f40ac0dc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40ac011100"/></to>
    </wire>
    <wire loc="455:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f40ac0c8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfe2d10"/></to>
    </wire>
    <wire loc="531:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f40ac07f560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfd3d10"/></to>
    </wire>
    <wire loc="551:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f40ac05a570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf47100"/></to>
    </wire>
    <wire loc="532:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f40ac07c580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfce740"/></to>
    </wire>
    <wire loc="460:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f40ac0c4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfd7100"/></to>
    </wire>
    <wire loc="473:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f40ac0b0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfa8e00"/></to>
    </wire>
    <wire loc="497:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f40ac08b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf52d10"/></to>
    </wire>
    <wire loc="535:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f40ac076580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfc5d10"/></to>
    </wire>
    <wire loc="545:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f40ac066570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf64100"/></to>
    </wire>
    <wire loc="557:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f40ac052580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf43d10"/></to>
    </wire>
    <wire loc="445:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f40ac0d6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40ac002100"/></to>
    </wire>
    <wire loc="536:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f40ac074580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfc0740"/></to>
    </wire>
    <wire loc="450:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f40ac0d2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abff9740"/></to>
    </wire>
    <wire loc="463:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f40ac0be020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfc9100"/></to>
    </wire>
    <wire loc="476:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f40ac0a9200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf9ad10"/></to>
    </wire>
    <wire loc="489:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f40ac095200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf69740"/></to>
    </wire>
    <wire loc="500:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f40ac085200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf43d10"/></to>
    </wire>
    <wire loc="440:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f40ac0e1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40ac01bd10"/></to>
    </wire>
    <wire loc="453:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f40ac0cc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfeb860"/></to>
    </wire>
    <wire loc="466:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f40ac0b8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfba100"/></to>
    </wire>
    <wire loc="530:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f40ac081580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfd3d10"/></to>
    </wire>
    <wire loc="548:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f40ac060570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf56100"/></to>
    </wire>
    <wire loc="555:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f40ac054570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf43d10"/></to>
    </wire>
    <wire loc="541:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f40ac06c580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf7dd10"/></to>
    </wire>
    <wire loc="471:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f40ac0b4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfb1a60"/></to>
    </wire>
    <wire loc="484:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f40ac09f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf81100"/></to>
    </wire>
    <wire loc="495:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f40ac08f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf5b740"/></to>
    </wire>
    <wire loc="549:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f40ac05e570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf52d10"/></to>
    </wire>
    <wire loc="538:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f40ac072570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf8bd10"/></to>
    </wire>
    <wire loc="443:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f40ac0da020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40ac00dd10"/></to>
    </wire>
    <wire loc="456:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f40ac0c6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfdc740"/></to>
    </wire>
    <wire loc="493:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f40ac093200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf64100"/></to>
    </wire>
    <wire loc="461:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f40ac0c2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfd3d10"/></to>
    </wire>
    <wire loc="474:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f40ac0ad200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfa3740"/></to>
    </wire>
    <wire loc="498:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f40ac089200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf4c740"/></to>
    </wire>
    <wire loc="540:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f40ac06e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf81100"/></to>
    </wire>
    <wire loc="438:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f40ac0ee020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40ac0246d0"/></to>
    </wire>
    <wire loc="451:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f40ac0d0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abff4100"/></to>
    </wire>
    <wire loc="464:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f40ac0bc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfc5d10"/></to>
    </wire>
    <wire loc="477:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f40ac0a7200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf94740"/></to>
    </wire>
    <wire loc="542:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f40ac06a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfba100"/></to>
    </wire>
    <wire loc="546:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f40ac064570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf60d10"/></to>
    </wire>
    <wire loc="552:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f40ac058570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf43d10"/></to>
    </wire>
    <wire loc="482:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f40ac0a3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf8bd10"/></to>
    </wire>
    <wire loc="543:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f40ac068580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfb6d10"/></to>
    </wire>
    <wire loc="441:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f40ac0df020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40ac016740"/></to>
    </wire>
    <wire loc="454:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f40ac0ca020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfe6270"/></to>
    </wire>
    <wire loc="467:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f40ac0b6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfb6d10"/></to>
    </wire>
    <wire loc="539:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f40ac070580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf86740"/></to>
    </wire>
    <wire loc="550:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f40ac05c570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf4c740"/></to>
    </wire>
    <wire loc="472:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f40ac0b2200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfac460"/></to>
    </wire>
    <wire loc="485:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f40ac09d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf7dd10"/></to>
    </wire>
    <wire loc="496:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f40ac08d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf56100"/></to>
    </wire>
    <wire loc="444:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f40ac0d8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40ac008740"/></to>
    </wire>
    <wire loc="494:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f40ac091200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf60d10"/></to>
    </wire>
    <wire loc="449:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f40ac0d4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abffed10"/></to>
    </wire>
    <wire loc="462:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f40ac0c0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfce740"/></to>
    </wire>
    <wire loc="475:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f40ac0ab200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf9e100"/></to>
    </wire>
    <wire loc="499:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f40ac087200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf47100"/></to>
    </wire>
    <wire loc="439:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f40ac0e3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40ac01f100"/></to>
    </wire>
    <wire loc="452:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f40ac0ce020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abff0d10"/></to>
    </wire>
    <wire loc="465:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f40ac0ba020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfc0740"/></to>
    </wire>
    <wire loc="478:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f40ac0a5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf8f100"/></to>
    </wire>
    <wire loc="534:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f40ac078560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfc9100"/></to>
    </wire>
    <wire loc="547:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f40ac062570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf5b740"/></to>
    </wire>
    <wire loc="533:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f40ac07a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfc9100"/></to>
    </wire>
    <wire loc="483:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f40ac0a1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf86740"/></to>
    </wire>
    <wire loc="554:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f40ac056570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf47100"/></to>
    </wire>
    <wire loc="558:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f40ac050580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abf69740"/></to>
    </wire>
    <wire loc="529:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f40ac0831f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40abfd7100"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f40abea9610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f40abe9f1d0"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f40abe9f1d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f40abd28150"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f40abea1400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40abda4020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f40abe97a80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f40abd1a790"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f40abda4020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40ab288380"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f40abd23640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f40abd782f0"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f40abd73850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f40abda4870"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f40abda4870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f40ab281020"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f40abd19a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f40abe1d900"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f40abe1d900"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f40abe00cf0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f40ab288380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40ab26da30"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f40ab27b780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f40ab288bd0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f40ab288bd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f40ab26c340"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f40ab27e3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f40abe1d900"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f40ab2684c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f40ab2727b0"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f40ab2727b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f40abe778b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f40ab267a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f40ab271da0"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f40ab271da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f40abe75560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f40ab266da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f40ab26f0c0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f40ab26f0c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f40abe72020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f40abe778b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f40ac28b6c0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f40abe75560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f40ac289020"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f40abe72020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f40ac27f570"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f40abe778b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f40ac28b6c0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f40abe75560"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f40ac287be0"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f40abe72020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f40ac27d1f0"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f40abe778b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f40ac28b6c0"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f40abe75560"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f40ac2840c0"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f40abe72020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f40ac27c020"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f40abe778b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f40ac28b6c0"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f40abe75560"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f40ac2835a0"/></to>
    </wire>
    <wire loc="76:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f40abe72020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f40ac27cda0"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f40abe778b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f40ac28b6c0"/></to>
    </wire>
    <wire loc="79:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f40abe75560"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f40ac282a50"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f40abe72020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f40ac27bb80"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f40abe778b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f40ac28b6c0"/></to>
    </wire>
    <wire loc="83:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f40abe75560"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f40ac280020"/></to>
    </wire>
    <wire loc="84:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f40abe72020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f40ac27aa20"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f40abde20f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f40abe1b990"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f40abe1b990"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f40abe14b80"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f40abe06c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f40ac28b6c0"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f40abd6f9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f40ac87f4f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f40abd1da00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f40ac87f4f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f40ab7885a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f40ab7b4720"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f40ab782020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f40ab7bb020"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f40ab7bb020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f40ab1e5390"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f40ab782c70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f40ab7bbc30"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f40ab7bbc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f40abc567e0"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f40ab7657e0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f40ab786c90"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f40abc567e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f40abbf5400"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f40ab7ba8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f40abc55470"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f40abc55470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f40abbf7cb0"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f40ab7b8020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f40abc52b20"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f40abc52b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f40abbf4060"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f40ab1e4060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f40abcb3cf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f40ab1e4c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f40abc55470"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f40abcb3cf0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f40abc66580"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f40abc65400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f40abc5c3f0"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f40abc5c3f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f40abc4b7d0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f40abc64060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f40abc55470"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f40abc63720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f40abc567e0"/></to>
    </wire>
    <wire loc="169:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f40abc62480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f40ac87f4f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f40abc62c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f40ac87f4f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f40abc573b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f40abbee2f0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f40abbee2f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f40abbdd450"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f40abc561d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f40abbf76c0"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f40abbf1bc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40abbdfd60"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f40abbea940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f40abc50620"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f40abbf49f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f40abbede10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f40abbf3760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f40abbed320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f40abbea020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f40ab7d28d0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f40abbede10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f40abaab830"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f40abbed320"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f40abaab110"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f40abaaa760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f40abbea020"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f40abbd6dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f40abbea940"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f40abaa7590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f40abbea940"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f40aba9fcc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f40abbea940"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f40abaa90e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f40abbd3ad0"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f40abaa99d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f40abbd74a0"/></to>
    </wire>
    <wire loc="77:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f40abbcde30"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f40abaa3b70"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f40abbc9e00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f40aba79080"/></to>
    </wire>
    <wire loc="17:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f40aba79080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f40ab7e50c0"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f40aba96d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f40aba79890"/></to>
    </wire>
    <wire loc="13:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f40aba79890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f40ab7eb440"/></to>
    </wire>
    <wire loc="332:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f40abb76e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f40ac87f4f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f40abbadd10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f40ac87f4f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f40abb78400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f40ac87f4f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f40abb710c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f40ac87f4f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f40abaa6c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f40ac87f4f0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f40abaa5480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f40ac87f4f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f40aba77020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f40ab7ea440"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f40ab7ea440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f40aba0c210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f40ab7eb440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f40aba10b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f40ab7e9020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f40ab7e5920"/></to>
    </wire>
    <wire loc="19:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f40ab7e4020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f40ab7ec020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f40ab7ec020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f40aba12320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f40ab7ecc70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f40ab116a90"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f40ab116a90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f40ab8b4d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f40aba0a600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f40ab7e9020"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f40ab110be0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f40aba0edd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f40aba0b370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f40ab117e00"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f40ab117e00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f40ab8b5a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f40aba05be0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f40ab110440"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f40ab110440"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f40ab8b8ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f40aba0edd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f40ab980e70"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f40aba0c210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f40ab97e890"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f40aba10b50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f40ab97f790"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f40aba12320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f40ab9800d0"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f40ab97c3e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f40aba0a600"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f40ab97d5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f40aba0b370"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f40ab9775b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f40aba05be0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f40ab97ca50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f40ab969550"/></to>
    </wire>
    <wire loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f40ab969550"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f40ab95fcc0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f40ab976020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f40ab8d2110"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f40ab8d2110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f40abe1b990"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f40ab973120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f40ac147870"/></to>
    </wire>
    <wire loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f40ab963080"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f40ab95a910"/></to>
    </wire>
    <wire loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f40ab967ca0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f40ab95f410"/></to>
    </wire>
    <wire loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f40ab959210"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f40ac070580"/></to>
    </wire>
    <wire loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f40ab9571f0"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f40ac06e580"/></to>
    </wire>
    <wire loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f40ab9551f0"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f40ac06c580"/></to>
    </wire>
    <wire loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f40ab9531f0"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f40ac068580"/></to>
    </wire>
    <wire loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f40ab9501f0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f40ac06a580"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f40ab115a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f40ab969550"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40ab1152b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40ab8b3590"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40ab8b3590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40ab820060"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f40ab8b1370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f40ab110be0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f40ab8b4d50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f40ab822bf0"/></to>
    </wire>
    <wire loc="106:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f40ab822bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f40ab0a83a0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f40ab8b8ce0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f40ab8ae5c0"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f40ab8b5a60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f40ab823e60"/></to>
    </wire>
    <wire loc="105:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f40ab823e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f40ab0a9540"/></to>
    </wire>
    <wire loc="108:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40ab820060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40ab0a78b0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f40ab89d690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f40ab963080"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f40ab820930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f40ab8b1370"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40ab89c4b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40ab820060"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f40ab8059d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f40ab821400"/></to>
    </wire>
    <wire loc="107:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f40ab821400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f40ab0a8b20"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f40ab81bb20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f40ab967ca0"/></to>
    </wire>
    <wire loc="109:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f40ab0a6210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f40ab820930"/></to>
    </wire>
    <wire loc="111:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f40ab0a69d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f40ab0ab330"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f40ab0a3c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f40ac87f4f0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f40ab0733a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f40ab81bb20"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f40ab073b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f40ab805400"/></to>
    </wire>
    <wire loc="84:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f40ab0720f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f40ab8059d0"/></to>
    </wire>
    <wire loc="85:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40ab072d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40ab804720"/></to>
    </wire>
    <wire loc="114:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f40ab77b020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f40ac87f4f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f40ab75e300"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f40ab7657e0"/></to>
    </wire>
    <wire loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f40ab7560f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f40ac321df0"/></to>
    </wire>
    <wire loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f40ab756810"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f40abc573b0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/jyxk/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/jyxk/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/jyxk/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BlinkC" loc="51:BlinkC.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/jyxk/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac146680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f40ac1469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac146680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f40ac1469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac146680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f40ac1469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac146680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f40ac1469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f40ac338550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/jyxk/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f40ac26e890" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f40ac26ec30" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f40ac26d020" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f40ac26d3a0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f40ac26d720" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f40ac26da90" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f40ac26de20" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f40ac26b200" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f40ac26b5d0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f40ac230e80" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f40ac22d270" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f40ac04aa10" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f40ac04adc0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f40ac0491a0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f40ac049550" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f40ac0498c0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f40abe55cc0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f40abe55cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f40abe15a40" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f40abe15a40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f40abdff570" loc="55:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f40abdff570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f40abdffd40" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f40abdffd40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f40abdfe160" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f40abdfe160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f40abdfe940" loc="58:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f40abdfe940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f40abdfed10" loc="59:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f40abdfd540" loc="60:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f40abdfd540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f40abe226e0" loc="52:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f40abe226e0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f40abddb020" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f40abddb020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f40abddb410" loc="54:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f40abddb410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f40abddbbf0" loc="55:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f40abddbbf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f40abdda020" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f40abd9fcd0" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f40abd9fcd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f40abd69230" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f40abd69230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f40abd69560" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f40abd1bde0" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f40abd1bde0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f40abcff480" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f40ac338550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f40abcce0d0" loc="43:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f40ac338550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f40abcab0d0" loc="45:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f40ab896020" loc="89:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f40ab8890d0" loc="42:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f40ab86e800" loc="52:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/jyxk/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f40ab7b64a0" loc="42:/home/jyxk/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f40ab7b64a0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f40ab7b6820" loc="42:/home/jyxk/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f40ac31d320" loc="58:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f40ac31d320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ac31d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f40ac321df0" loc="57:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f40ac321df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f40ac3201c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40ac31f300" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f40ac31f300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ac31f680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f40ac317380" loc="6:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f40ac317380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ac317700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40ac318510" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f40ac318510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ac318890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f40ac318c20" loc="5:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f40ac318c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ac317020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f40ac317a60" loc="7:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f40ac317a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ac317de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40ac31a6d0" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f40ac31a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ac31aa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f40ac319910" loc="39:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f40ac319910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ac319c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f40ac2f0de0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f40ac2f0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f40ac2f5c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f40ac2f5310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f40ac2f54a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f40ac2f5630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f40ac2f5180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f40ac2f57c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f40ac2f5950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f40ac2f5ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40ac2f9850" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f40ac2f9850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ac2f9bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f40ac2df350" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f40ac2df350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f40ac2de340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f40ac2df860"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f40ac2df9f0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f40ac2dfb80"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f40ac2df6d0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f40ac2dfd10"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f40ac2de020"/>
        <function-ref name="initClocks" scoped="" ref="0x7f40ac2de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f40ac2de680" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f40ac2de680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f40ac2dea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40ac2e0c00" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f40ac2e0c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ac2df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f40ac29b5a0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f40ac29b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac29b920"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac29bab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac29bc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac29bdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac29a020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac29a1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac29a340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac29a4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac29a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f40ac289020" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f40ac289020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac2893a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac289530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac2896c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac289850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac2899e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac289b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac289d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac288020"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac2881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f40ac292700" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f40ac292700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac292a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac292c10"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac292da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac291020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac2911b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac291340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f40ac276a20" loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f40ac276a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac276da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac275020"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac2751b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac275340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac2754d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac275660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f40ac299aa0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f40ac299aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac299e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac298020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac2981b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac298340"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac2984d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f40ac27c020" loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f40ac27c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac27c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac27c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac27c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac27c850"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac27c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f40ac273a20" loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f40ac273a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac273da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac272020"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac2721b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac272340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac2724d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac272660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f40ac2835a0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f40ac2835a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac283920"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac283ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac283c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac283dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac282020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac2821b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac282340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac2824d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac282660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f40ac29cb10" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f40ac29cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac2a3020"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac2a31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac2a3340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac2a34d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac2a3660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac2a37f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac2a3980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac2a3b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac2a3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f40ac278a20" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f40ac278a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac278da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac277020"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac2771b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac277340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac2774d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac277660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f40ac27e3e0" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f40ac27e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac27e760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac27e8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac27ea80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac27ec10"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac27eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f40ac2885a0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f40ac2885a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac288a20"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac288bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac288d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac287020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac2871b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac287340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac2874d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac287660"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac2877f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f40ac291700" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f40ac291700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac291a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac291c10"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac291da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac28b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac28b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac28b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f40ac275a20" loc="69:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f40ac275a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac275da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac274020"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac2741b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac274340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac2744d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac274660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f40ac287be0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f40ac287be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac286020"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac2861b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac286340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac2864d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac286660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac2867f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac286980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac286b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac286ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f40ac298890" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f40ac298890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac298c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac298da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac293020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac2931b0"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac293340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f40ac2ac060" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f40ac2ac060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ac2ac3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40ac2ac570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac2ac700"/>
        <function-ref name="get" scoped="" ref="0x7f40ac2ac890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac2aca20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac2acbb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ac2acd40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac2ab020"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ac2ab1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f40ac2ab340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40ac2ab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f40ac27cda0" loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f40ac27cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac27b180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac27b310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac27b4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac27b630"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac27b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f40ac2a20c0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f40ac2a20c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac2a2440"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac2a25d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac2a2760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac2a28f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac2a2a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac2a2c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac2a2da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac29b020"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac29b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f40ac282a50" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f40ac282a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac282dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac281020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac2811b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac281340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac2814d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac281660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac2817f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac281980"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac281b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f40ac28c6d0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f40ac28c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac28ca50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac28cbe0"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac28cd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac292020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac2921b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac292340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f40ac277a20" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f40ac277a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac277da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac276020"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac2761b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac276340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac2764d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac276660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f40ac294cf0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f40ac294cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac2990a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac299230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac2993c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac299550"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac2996e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f40ac27d1f0" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f40ac27d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac27d570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac27d700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac27d890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac27da20"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac27dbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f40ac274a20" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f40ac274a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac274da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac273020"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac2731b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac273340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac2734d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac273660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f40ac2840c0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f40ac2840c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac284440"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac2845d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac284760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac2848f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac284a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac284c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac284da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac283020"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac2831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f40ac28b6c0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f40ac28b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ac28ba40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40ac28bbd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac28bd60"/>
        <function-ref name="get" scoped="" ref="0x7f40ac28a020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac28a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac28a340"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ac28a4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac28a660"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ac28a7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f40ac28a980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40ac28ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f40ac27bb80" loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f40ac27bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac27a020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac27a1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac27a340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac27a4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac27a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f40ac279a20" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f40ac279a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac279da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac278020"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac2781b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac278340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac2784d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac278660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f40ac27aa20" loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f40ac27aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac279020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac2791b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac279340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac2794d0"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac279660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f40ac27f570" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f40ac27f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac27f8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac27fa80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac27fc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac27fda0"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac27e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f40ac280020" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f40ac280020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac2803a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac280530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac2806c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac280850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac2809e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac280b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac280d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac27f020"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac27f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f40ac23aaa0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f40ac23aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac23ae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f40ac23a450" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f40ac23a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac23a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f40ac239120" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f40ac239120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac2394a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f40ac23bd80" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f40ac23bd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac23a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f40ac23c540" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f40ac23c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ac23c8c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40ac23ca50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac23cbe0"/>
        <function-ref name="get" scoped="" ref="0x7f40ac23cd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac23b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac23b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ac23b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac23b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ac23b660"/>
        <function-ref name="setMode" scoped="" ref="0x7f40ac23b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40ac23b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f40ac232940" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f40ac232940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac232cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f40ac2322f0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f40ac2322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac232670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f40ac231020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f40ac231020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac2313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f40ac233bf0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f40ac233bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac232020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f40ac2343e0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f40ac2343e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ac234760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40ac2348f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac234a80"/>
        <function-ref name="get" scoped="" ref="0x7f40ac234c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac234da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac233020"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ac2331b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac233340"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ac2334d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f40ac233660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40ac2337f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f40ac1e6a90" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f40ac1e6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1e6e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac1e5020"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac1e51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1e5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1e54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac1e5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f40ac22e9d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f40ac22e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac22ed50"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac1e7020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1e71b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac1e7340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac1e74d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1e7660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac1e77f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac1e7980"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac1e7b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f40ac1e3020" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f40ac1e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac1e33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f40ac1e7de0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f40ac1e7de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1e6180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac1e6310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac1e64a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac1e6630"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac1e67c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f40ac1e5930" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f40ac1e5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ac1e5cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40ac1e5e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1e4020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac1e41b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1e4340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1e44d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ac1e4660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1e47f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ac1e4980"/>
        <function-ref name="setMode" scoped="" ref="0x7f40ac1e4b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40ac1e4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f40ac1de160" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f40ac1de160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1de4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac1de670"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac1de800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1de990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1deb20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac1decb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f40ac1e0020" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f40ac1e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac1e03a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac1e0530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1e06c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac1e0850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac1e09e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1e0b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac1e0d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac1df020"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac1df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f40ac1db7a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f40ac1db7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac1dbb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f40ac1df480" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f40ac1df480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1df800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac1df990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac1dfb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac1dfcb0"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac1dfe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f40ac1dd020" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f40ac1dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ac1dd3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40ac1dd530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1dd6c0"/>
        <function-ref name="get" scoped="" ref="0x7f40ac1dd850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1dd9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1ddb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ac1ddd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1db020"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ac1db1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f40ac1db340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40ac1db4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f40ac1d67a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f40ac1d67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1d6b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac1d6cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac1d6e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1d5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1d51b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac1d5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f40ac1d86d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f40ac1d86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac1d8a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac1d8be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1d8d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac1d7020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac1d71b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1d7340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac1d74d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac1d7660"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac1d77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f40ac1d4c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f40ac1d4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac1d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f40ac1d7ac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f40ac1d7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1d7e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac1d6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac1d61b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac1d6340"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac1d64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f40ac1d5610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f40ac1d5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ac1d5990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40ac1d5b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1d5cb0"/>
        <function-ref name="get" scoped="" ref="0x7f40ac1d5e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1d4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1d41b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ac1d4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1d44d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ac1d4660"/>
        <function-ref name="setMode" scoped="" ref="0x7f40ac1d47f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40ac1d4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f40ac1cfcb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f40ac1cfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1ce0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac1ce230"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac1ce3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1ce550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1ce6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac1ce870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f40ac1d1b30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f40ac1d1b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac1d0020"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac1d01b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1d0340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac1d04d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac1d0660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1d07f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac1d0980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac1d0b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac1d0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f40ac1cc2f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f40ac1cc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac1cc670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f40ac1cf020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f40ac1cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1cf3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac1cf530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac1cf6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac1cf850"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac1cf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f40ac1ceb40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f40ac1ceb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ac1cd020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40ac1cd1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1cd340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac1cd4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1cd660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1cd7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ac1cd980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1cdb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ac1cdca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f40ac1cde30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40ac1cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f40ac1c62f0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f40ac1c62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1c6670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac1c6800"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac1c6990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1c6b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1c6cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac1c6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f40ac1c8220" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f40ac1c8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac1c85a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac1c8730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1c88c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac1c8a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac1c8be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1c8d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac1c7020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac1c71b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac1c7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f40ac1c47a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f40ac1c47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac1c4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f40ac1c7610" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f40ac1c7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1c7990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac1c7b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac1c7cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac1c7e40"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac1c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f40ac1c5160" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f40ac1c5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ac1c54e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40ac1c5670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1c5800"/>
        <function-ref name="get" scoped="" ref="0x7f40ac1c5990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1c5b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1c5cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ac1c5e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1c4020"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ac1c41b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f40ac1c4340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40ac1c44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f40ac1bf7a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f40ac1bf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1bfb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac1bfcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac1bfe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1be020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1be1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac1be340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f40ac1c16d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f40ac1c16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac1c1a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac1c1be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1c1d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac1c0020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac1c01b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1c0340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac1c04d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac1c0660"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac1c07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f40ac1bdc50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f40ac1bdc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac1bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f40ac1c0ac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f40ac1c0ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1c0e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac1bf020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac1bf1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac1bf340"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac1bf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f40ac1be610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f40ac1be610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ac1be990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40ac1beb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1becb0"/>
        <function-ref name="get" scoped="" ref="0x7f40ac1bee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1bd020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1bd1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ac1bd340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1bd4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ac1bd660"/>
        <function-ref name="setMode" scoped="" ref="0x7f40ac1bd7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40ac1bd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f40ac1b7cb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f40ac1b7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1b60a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac1b6230"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac1b63c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1b6550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1b66e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac1b6870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f40ac1b9b30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f40ac1b9b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac1b8020"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac1b81b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1b8340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac1b84d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac1b8660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1b87f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac1b8980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac1b8b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac1b8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f40ac1b42f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f40ac1b42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac1b4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f40ac1b7020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f40ac1b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1b73a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac1b7530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac1b76c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac1b7850"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac1b79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f40ac1b6b40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f40ac1b6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ac1b5020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40ac1b51b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1b5340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac1b54d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1b5660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1b57f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ac1b5980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1b5b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ac1b5ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f40ac1b5e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40ac1b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f40ac1af2f0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f40ac1af2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1af670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac1af800"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac1af990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1afb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1afcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac1afe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f40ac1b1220" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f40ac1b1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac1b15a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac1b1730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1b18c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac1b1a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac1b1be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1b1d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac1b0020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac1b01b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac1b0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f40ac1ad7a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f40ac1ad7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac1adb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f40ac1b0610" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f40ac1b0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1b0990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac1b0b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac1b0cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac1b0e40"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac1af020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f40ac1ae160" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f40ac1ae160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ac1ae4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40ac1ae670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1ae800"/>
        <function-ref name="get" scoped="" ref="0x7f40ac1ae990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1aeb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1aecb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ac1aee40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1ad020"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ac1ad1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f40ac1ad340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40ac1ad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f40ac1a77a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f40ac1a77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1a7b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac1a7cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac1a7e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1a6020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1a61b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac1a6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f40ac1a96d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f40ac1a96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac1a9a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac1a9be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1a9d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac1a8020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac1a81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1a8340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac1a84d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac1a8660"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac1a87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f40ac1a5c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f40ac1a5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac1a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f40ac1a8ac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f40ac1a8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1a8e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac1a7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac1a71b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac1a7340"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac1a74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f40ac1a6610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f40ac1a6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ac1a6990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40ac1a6b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1a6cb0"/>
        <function-ref name="get" scoped="" ref="0x7f40ac1a6e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1a5020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac1a51b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ac1a5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac1a54d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ac1a5660"/>
        <function-ref name="setMode" scoped="" ref="0x7f40ac1a57f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40ac1a5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f40ac1a0cb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f40ac1a0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac19f0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f40ac19f230"/>
        <function-ref name="captured" scoped="" ref="0x7f40ac19f3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac19f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac19f6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f40ac19f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f40ac1a2b30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f40ac1a2b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ac1a1020"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ac1a11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac1a1340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ac1a14d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ac1a1660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac1a17f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ac1a1980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ac1a1b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ac1a1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f40ac19d2f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f40ac19d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac19d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f40ac1a0020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f40ac1a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ac1a03a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ac1a0530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ac1a06c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ac1a0850"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac1a09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f40ac19fb40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f40ac19fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ac19e020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40ac19e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ac19e340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac19e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ac19e660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ac19e7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ac19e980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ac19eb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ac19eca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f40ac19ee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40ac19d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f40ac196240" loc="7:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f40ac196240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac1965c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f40ac19baa0" loc="4:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f40ac19baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac19be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f40ac197260" loc="5:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f40ac197260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac1975e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f40ac1979f0" loc="6:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f40ac1979f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ac197d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f40ac4934c0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f40ac4934c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f40ac493840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f40ac7a73b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f40ac7a73b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f40ac7a7730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f40ac7a78c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f40ac7a7a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f40ac5cfbe0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f40ac5cfbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f40ac70b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f40ac2f7b50" loc="39:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f40ac2f7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f40ac15fb10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f40ac15f1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f40ac15f340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f40ac15f4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f40ac15f020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f40ac15f660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f40ac15f7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f40ac15f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f40ac152dc0" loc="60:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f40ac152dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ac151180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f40ac153590" loc="57:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f40ac153590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f40ac153910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f40ac1526c0" loc="59:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f40ac1526c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ac152a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f40ac153c00" loc="58:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f40ac153c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ac152020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f40ac1521b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f40ac152340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f40ac87f4f0" loc="48:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f40ac87f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40ac87f870"/>
        <function-ref name="runTask" scoped="" ref="0x7f40ac87fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f40ac8103a0" loc="47:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f40ac8103a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ac810720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f40ac8108b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f40ac810a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f40ac3b9040" loc="56:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f40ac3b9040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40ac3b93c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f40ac3b9550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f40ac3b5490" loc="57:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f40ac3b5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f40ac3b5810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f40ac3b59a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f40ac3b5b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f40ac3bb140" loc="55:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f40ac3bb140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ac3bb4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f40ac3bb650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f40ac3bb7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x7f40ac1397f0" loc="52:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer0" scoped="" ref="0x7f40ac1397f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f40ac137cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f40ac143300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f40ac1370d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f40ac143c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f40ac136660"/>
        <function-ref name="gett0" scoped="" ref="0x7f40ac1361e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f40ac143780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f40ac144480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f40ac1376e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f40ac144950"/>
        <function-ref name="stop" scoped="" ref="0x7f40ac144e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f40ac134020" loc="54:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f40ac134020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f40ac1343a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f40ac12a8d0" loc="53:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f40ac12a8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f40ac12ac50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f40ac12ade0"/>
        <function-ref name="led1On" scoped="" ref="0x7f40ac135020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f40ac1351b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f40ac135340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac1354d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f40ac135660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f40ac135ca0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac1357f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f40ac135980"/>
        <function-ref name="led2On" scoped="" ref="0x7f40ac135b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f40ac147870" loc="46:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f40ac147870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f40ac147bf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f40ac147d80"/>
        <function-ref name="led1On" scoped="" ref="0x7f40ac11f020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f40ac11f1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f40ac11f340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac11f4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f40ac11f660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f40ac11fca0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac11f7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f40ac11f980"/>
        <function-ref name="led2On" scoped="" ref="0x7f40ac11fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f40ac113910" loc="50:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f40ac113910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac113c90"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac113e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac119020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac1191b0"/>
        <function-ref name="get" scoped="" ref="0x7f40ac119340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac1194d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac119660"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac1197f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40ac11ec40" loc="46:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f40ac11ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ac11b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f40ac119b10" loc="51:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f40ac119b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac112020"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac1121b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac112340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac1124d0"/>
        <function-ref name="get" scoped="" ref="0x7f40ac112660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac1127f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac112980"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac112b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f40ac11b2a0" loc="47:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f40ac11b2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f40ac11b620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f40ac11b7b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f40ac11b940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f40ac11bad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f40ac11bc60"/>
        <function-ref name="get" scoped="" ref="0x7f40ac11bdf0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f40ac11a020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f40ac11a660"/>
        <function-ref name="set" scoped="" ref="0x7f40ac11a1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f40ac11a340"/>
        <function-ref name="led2On" scoped="" ref="0x7f40ac11a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f40ac112e30" loc="52:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f40ac112e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac1111e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac111370"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac111500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac111690"/>
        <function-ref name="get" scoped="" ref="0x7f40ac111820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac1119b0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac111b40"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac111cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f40ac0f6360" loc="41:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f40ac0f6360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0f66e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0f6870"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0f6a00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0f6b90"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0f6d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0f5020"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0f51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0f5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f40ac0f56a0" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f40ac0f56a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0f5a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0f5bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0f5d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0f4020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0f41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0f4340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0f44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0f4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f40ac0f3c40" loc="44:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f40ac0f3c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ac0f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f40ac0f49c0" loc="43:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f40ac0f49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0f4d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0f3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0f31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0f3340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0f34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0f3660"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0f37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0f3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f40ac0dc020" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f40ac0dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0dc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0dc530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0dc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0dc850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0dc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0dcb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0dcd00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0db020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0db1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0db340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0db4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0db660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0db7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0dba80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0dbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f40ac0c8020" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f40ac0c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0c83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0c8530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0c86c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0c8850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0c89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0c8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0c8d00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0c7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0c71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0c7340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0c74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0c7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0c77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0c7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0c7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f40ac07f560" loc="145:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f40ac07f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac07f8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac07fa70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac07fc00"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac07fd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac07d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac07d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac07d340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac07d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac07d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac07d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac07d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac07db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac07dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac07c020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac07c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f40ac05a570" loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f40ac05a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac05a8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac05aa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac05ac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac05ada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac059020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0591b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac059340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0594d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac059660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0597f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac059980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac059b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac059ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac058020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f40ac07c580" loc="146:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f40ac07c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac07c900"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac07ca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac07cc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac07cdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac07b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac07b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac07b340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac07b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac07b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac07b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac07b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac07bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac07bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac07a020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac07a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f40ac0c4020" loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f40ac0c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0c43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0c4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0c46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0c4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0c49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0c4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0c4d00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0c3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0c31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0c3340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0c34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0c3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0c37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0c3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0c3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f40ac0b0200" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f40ac0b0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0b0580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0b0710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0b08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0b0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0b0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0b0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0af020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0af1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0af340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0af4d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0af660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0af7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0af980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0afc10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0afda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f40ac09b200" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f40ac09b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac09b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac09b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac09b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac09ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac09bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac09bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac09a020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac09a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac09a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac09a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac09a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac09a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac09a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac09ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac09ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f40ac08b200" loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f40ac08b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac08b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac08b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac08b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac08ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac08bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac08bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac08a020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac08a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac08a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac08a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac08a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac08a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac08a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac08ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac08ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f40ac076580" loc="149:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f40ac076580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac076900"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac076a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac076c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac076db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac075020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0751b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac075340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0754d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac075660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0757f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac075980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac075b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac075ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac074020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f40ac066570" loc="159:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f40ac066570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0668f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac066a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac066c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac066da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac065020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0651b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac065340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0654d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac065660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0657f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac065980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac065b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac065ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac064020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f40ac052580" loc="171:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f40ac052580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac052900"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac052a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac052c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac052db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac051020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0511b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac051340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0514d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac051660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0517f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac051980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac051b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac051ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac050020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0501b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f40ac0d6020" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f40ac0d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0d63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0d6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0d66c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0d6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0d69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0d6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0d6d00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0d5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0d51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0d5340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0d54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0d5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0d57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0d5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0d5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f40ac074580" loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f40ac074580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac074900"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac074a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac074c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac074db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac073020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0731b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac073340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0734d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac073660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0737f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac073980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac073b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac073ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac072020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f40ac0d2020" loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f40ac0d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0d23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0d2530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0d26c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0d2850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0d29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0d2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0d2d00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0d1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0d11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0d1340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0d14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0d1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0d17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0d1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0d1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f40ac0be020" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f40ac0be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0be3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0be530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0be6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0be850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0be9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0beb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0bed00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0bd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0bd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0bd340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0bd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0bd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0bd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0bda80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0bdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f40ac0a9200" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f40ac0a9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0a9580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0a9710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0a98a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0a9a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0a9bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0a9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0a8020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0a81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0a8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0a84d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0a8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0a87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0a8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0a8c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0a8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f40ac095200" loc="100:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f40ac095200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac095580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac095710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0958a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac095a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac095bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac095d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac094020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0941b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac094340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0944d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac094660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0947f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac094980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac094c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac094da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f40ac085200" loc="111:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f40ac085200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac085580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac085710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0858a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac085a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac085bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac085d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac084020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0841b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac084340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0844d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac084660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0847f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac084980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac084c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac084da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f40ac0e1020" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f40ac0e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0e13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0e1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0e16c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0e1850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0e19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0e1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0e1d00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0e0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0e01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0e0340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0e04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0e0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0e07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0e0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0e0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f40ac0cc020" loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f40ac0cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0cc4a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0cc630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0cc7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0cc950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0ccae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0ccc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0cce00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0cb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0cb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0cb340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0cb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0cb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0cb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0cba80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0cbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f40ac0b8020" loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f40ac0b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0b83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0b8530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0b86c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0b8850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0b89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0b8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0b8d00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0b7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0b71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0b7340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0b74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0b7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0b77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0b7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0b7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f40ac081580" loc="144:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f40ac081580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac081900"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac081a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac081c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac081db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac080020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0801b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac080340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0804d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac080660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0807f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac080980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac080b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac080ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac07f020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac07f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f40ac060570" loc="162:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f40ac060570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0608f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac060a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac060c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac060da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac05f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac05f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac05f340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac05f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac05f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac05f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac05f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac05fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac05fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac05e020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac05e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f40ac054570" loc="169:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f40ac054570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0548f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac054a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac054c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac054da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac053020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0531b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac053340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0534d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac053660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0537f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac053980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac053b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac053ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac052020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f40ac06c580" loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f40ac06c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac06c900"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac06ca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac06cc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac06cdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac06b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac06b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac06b340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac06b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac06b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac06b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac06b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac06bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac06bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac06a020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac06a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f40ac0b4020" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f40ac0b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0b45a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0b4730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0b48c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0b4a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0b4be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0b4d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0b3020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0b31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0b3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0b34d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0b3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0b37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0b3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0b3c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0b3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f40ac09f200" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f40ac09f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac09f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac09f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac09f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac09fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac09fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac09fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac09e020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac09e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac09e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac09e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac09e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac09e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac09e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac09ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac09eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f40ac08f200" loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f40ac08f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac08f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac08f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac08f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac08fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac08fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac08fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac08e020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac08e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac08e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac08e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac08e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac08e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac08e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac08ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac08eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f40ac05e570" loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f40ac05e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac05e8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac05ea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac05ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac05eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac05d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac05d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac05d340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac05d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac05d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac05d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac05d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac05db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac05dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac05c020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac05c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f40ac072570" loc="152:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f40ac072570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0728f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac072a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac072c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac072da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac071020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0711b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac071340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0714d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac071660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0717f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac071980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac071b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac071ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac070020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f40ac0da020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f40ac0da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0da3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0da530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0da6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0da850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0da9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0dab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0dad00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0d9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0d91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0d9340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0d94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0d9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0d97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0d9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0d9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f40ac0c6020" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f40ac0c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0c63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0c6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0c66c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0c6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0c69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0c6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0c6d00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0c5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0c51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0c5340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0c54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0c5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0c57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0c5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0c5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f40ac093200" loc="104:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f40ac093200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac093580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac093710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0938a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac093a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac093bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac093d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac092020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0921b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac092340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0924d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac092660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0927f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac092980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac092c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac092da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f40ac0c2020" loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f40ac0c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0c23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0c2530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0c26c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0c2850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0c29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0c2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0c2d00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0c1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0c11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0c1340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0c14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0c1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0c17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0c1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0c1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f40ac0ad200" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f40ac0ad200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0ad580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0ad710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0ad8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0ada30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0adbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0add50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0ac020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0ac1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0ac340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0ac4d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0ac660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0ac7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0ac980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0acc10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0acda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f40ac099200" loc="98:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f40ac099200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac099580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac099710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0998a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac099a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac099bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac099d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac098020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0981b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac098340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0984d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac098660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0987f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac098980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac098c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac098da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f40ac089200" loc="109:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f40ac089200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac089580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac089710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0898a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac089a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac089bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac089d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac088020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0881b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac088340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0884d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac088660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0887f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac088980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac088c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac088da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f40ac06e580" loc="154:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f40ac06e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac06e900"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac06ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac06ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac06edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac06d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac06d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac06d340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac06d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac06d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac06d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac06d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac06db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac06dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac06c020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac06c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f40ac0ee020" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f40ac0ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0ee3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0ee530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0ee6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0ee850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0ee9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0eeb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0eed00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0ed020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0ed1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0ed340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0ed4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0ed660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0ed7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0eda80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0edc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f40ac0d0020" loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f40ac0d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0d03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0d0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0d06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0d0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0d09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0d0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0d0d00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0cf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0cf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0cf340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0cf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0cf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0cf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0cfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0cfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f40ac0bc020" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f40ac0bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0bc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0bc530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0bc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0bc850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0bc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0bcb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0bcd00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0bb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0bb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0bb340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0bb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0bb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0bb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0bba80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0bbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f40ac0a7200" loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f40ac0a7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0a7580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0a7710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0a78a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0a7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0a7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0a7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0a6020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0a61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0a6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0a64d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0a6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0a67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0a6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0a6c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0a6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f40ac06a580" loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f40ac06a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac06a900"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac06aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac06ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac06adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac069020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0691b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac069340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0694d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac069660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0697f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac069980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac069b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac069ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac068020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f40ac064570" loc="160:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f40ac064570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0648f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac064a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac064c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac064da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac063020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0631b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac063340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0634d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac063660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0637f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac063980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac063b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac063ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac062020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f40ac058570" loc="166:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f40ac058570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0588f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac058a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac058c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac058da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac057020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0571b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac057340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0574d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac057660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0577f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac057980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac057b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac057ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac056020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f40ac0a3200" loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f40ac0a3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0a3580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0a3710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0a38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0a3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0a3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0a3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0a2020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0a21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0a2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0a24d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0a2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0a27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0a2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0a2c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0a2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f40ac068580" loc="157:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f40ac068580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac068900"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac068a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac068c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac068db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac067020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0671b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac067340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0674d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac067660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0677f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac067980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac067b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac067ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac066020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0661b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f40ac0df020" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f40ac0df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0df3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0df530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0df6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0df850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0df9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0dfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0dfd00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0de020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0de1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0de340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0de4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0de660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0de7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0dea80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0dec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f40ac0ca020" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f40ac0ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0ca3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0ca530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0ca6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0ca850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0ca9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0cab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0cad00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0c9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0c91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0c9340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0c94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0c9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0c97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0c9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0c9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f40ac0b6020" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f40ac0b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0b63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0b6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0b66c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0b6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0b69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0b6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0b6d00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0b5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0b51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0b5340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0b54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0b5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0b57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0b5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0b5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f40ac070580" loc="153:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f40ac070580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac070900"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac070a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac070c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac070db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac06f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac06f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac06f340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac06f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac06f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac06f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac06f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac06fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac06fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac06e020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac06e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f40ac05c570" loc="164:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f40ac05c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac05c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac05ca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac05cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac05cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac05b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac05b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac05b340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac05b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac05b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac05b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac05b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac05bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac05bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac05a020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac05a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f40ac0b2200" loc="83:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f40ac0b2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0b2580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0b2710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0b28a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0b2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0b2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0b2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0b1020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0b11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0b1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0b14d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0b1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0b17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0b1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0b1c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0b1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f40ac09d200" loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f40ac09d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac09d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac09d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac09d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac09da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac09dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac09dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac09c020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac09c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac09c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac09c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac09c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac09c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac09c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac09cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac09cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f40ac08d200" loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f40ac08d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac08d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac08d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac08d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac08da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac08dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac08dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac08c020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac08c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac08c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac08c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac08c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac08c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac08c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac08cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac08cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f40ac0d8020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f40ac0d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0d83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0d8530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0d86c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0d8850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0d89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0d8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0d8d00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0d7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0d71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0d7340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0d74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0d7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0d77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0d7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0d7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f40ac091200" loc="105:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f40ac091200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac091580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac091710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0918a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac091a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac091bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac091d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac090020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0901b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac090340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0904d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac090660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0907f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac090980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac090c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac090da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f40ac0d4020" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f40ac0d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0d43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0d4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0d46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0d4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0d49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0d4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0d4d00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0d3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0d31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0d3340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0d34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0d3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0d37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0d3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0d3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f40ac0c0020" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f40ac0c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0c03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0c0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0c06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0c0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0c09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0c0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0c0d00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0bf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0bf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0bf340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0bf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0bf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0bf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0bfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0bfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f40ac0ab200" loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f40ac0ab200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0ab580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0ab710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0ab8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0aba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0abbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0abd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0aa020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0aa1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0aa340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0aa4d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0aa660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0aa7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0aa980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0aac10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0aada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f40ac097200" loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f40ac097200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac097580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac097710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0978a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac097a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac097bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac097d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac096020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0961b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac096340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0964d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac096660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0967f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac096980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac096c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac096da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f40ac087200" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f40ac087200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac087580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac087710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0878a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac087a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac087bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac087d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac086020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0861b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac086340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0864d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac086660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0867f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac086980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac086c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac086da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f40ac0e3020" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f40ac0e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0e33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0e3530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0e36c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0e3850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0e39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0e3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0e3d00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0e2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0e21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0e2340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0e24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0e2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0e27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0e2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0e2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f40ac0ce020" loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f40ac0ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0ce3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0ce530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0ce6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0ce850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0ce9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0ceb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0ced00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0cd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0cd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0cd340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0cd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0cd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0cd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0cda80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0cdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f40ac0ba020" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f40ac0ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0ba3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0ba530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0ba6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0ba850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0ba9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0bab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0bad00"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0b9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0b91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0b9340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0b94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0b9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0b97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0b9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0b9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f40ac0a5200" loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f40ac0a5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0a5580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0a5710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0a58a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0a5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0a5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0a5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0a4020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0a41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0a4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0a44d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0a4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0a47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0a4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0a4c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0a4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f40ac078560" loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f40ac078560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0788e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac078a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac078c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac078d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac077020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0771b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac077340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0774d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac077660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0777f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac077980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac077b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac077ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac076020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f40ac062570" loc="161:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f40ac062570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0628f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac062a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac062c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac062da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac061020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0611b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac061340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0614d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac061660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0617f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac061980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac061b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac061ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac060020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f40ac07a580" loc="147:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f40ac07a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac07a900"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac07aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac07ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac07adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac079020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0791b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac079340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0794d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac079660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0797f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac079980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac079b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac079ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac078020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0781b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f40ac0a1200" loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f40ac0a1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0a1580"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac0a1710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0a18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac0a1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0a1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0a1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0a0020"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0a01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0a0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0a04d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0a0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac0a07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0a0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac0a0c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0a0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f40ac056570" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f40ac056570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac0568f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac056a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac056c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac056da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac055020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0551b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac055340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0554d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac055660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0557f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac055980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac055b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac055ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac054020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f40ac050580" loc="172:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f40ac050580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac050900"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac050a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac050c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac050db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac04e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac04e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac04e340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac04e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac04e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac04e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac04e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac04eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac04eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac04d020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac04d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f40ac0831f0" loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f40ac0831f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac083970"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac083b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac083c90"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac083e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac082020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac0821b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac082340"/>
        <function-ref name="get" scoped="" ref="0x7f40ac0824d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac082660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac0827f0"/>
        <function-ref name="set" scoped="" ref="0x7f40ac082980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac082b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac082ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac081020"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0811b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40ac0246d0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40ac0246d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac024a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac024be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac024d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac023020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0231b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac023340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0234d0"/>
        <function-ref name="get" scoped="" ref="0x7f40ac023660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0237f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac023980"/>
        <function-ref name="set" scoped="" ref="0x7f40ac023b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac023ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac023e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac022120"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0222b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40ac01f100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40ac01f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac01f480"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac01f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac01f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac01f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac01fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac01fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac01fde0"/>
        <function-ref name="get" scoped="" ref="0x7f40ac01e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac01e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac01e340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac01e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac01e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac01e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac01ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac01ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40ac01bd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40ac01bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac01a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac01a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac01a400"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac01a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac01a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac01a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac01aa40"/>
        <function-ref name="get" scoped="" ref="0x7f40ac01abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac01ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac019020"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0191b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac019340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0194d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac019760"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0198f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40ac016740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40ac016740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac016ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac016c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac016de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac015020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0151b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac015340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0154d0"/>
        <function-ref name="get" scoped="" ref="0x7f40ac015660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0157f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac015980"/>
        <function-ref name="set" scoped="" ref="0x7f40ac015b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac015ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac015e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac014120"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0142b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40ac011100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40ac011100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac011480"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac011610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0117a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac011930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac011ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac011c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac011de0"/>
        <function-ref name="get" scoped="" ref="0x7f40ac010020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0101b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac010340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0104d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac010660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0107f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac010a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac010c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40ac00dd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40ac00dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac00c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac00c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac00c400"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac00c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac00c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac00c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac00ca40"/>
        <function-ref name="get" scoped="" ref="0x7f40ac00cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac00cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac00b020"/>
        <function-ref name="set" scoped="" ref="0x7f40ac00b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac00b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac00b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac00b760"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac00b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40ac008740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40ac008740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac008ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac008c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac008de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac006020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac0061b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac006340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac0064d0"/>
        <function-ref name="get" scoped="" ref="0x7f40ac006660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0067f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac006980"/>
        <function-ref name="set" scoped="" ref="0x7f40ac006b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac006ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac006e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac005120"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac0052b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40ac002100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40ac002100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ac002480"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ac002610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ac0027a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ac002930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ac002ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ac002c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ac002de0"/>
        <function-ref name="get" scoped="" ref="0x7f40ac001020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ac0011b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ac001340"/>
        <function-ref name="set" scoped="" ref="0x7f40ac0014d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ac001660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ac0017f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ac001a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40ac001c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abffed10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abffed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abffd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abffd270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abffd400"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abffd590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abffd720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abffd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abffda40"/>
        <function-ref name="get" scoped="" ref="0x7f40abffdbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abffdd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abffc020"/>
        <function-ref name="set" scoped="" ref="0x7f40abffc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abffc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abffc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abffc760"/>
        <function-ref name="clr" scoped="" ref="0x7f40abffc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abff9740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abff9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abff9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abff9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abff9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abff8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abff81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abff8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abff84d0"/>
        <function-ref name="get" scoped="" ref="0x7f40abff8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abff87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abff8980"/>
        <function-ref name="set" scoped="" ref="0x7f40abff8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abff8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abff8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abff7120"/>
        <function-ref name="clr" scoped="" ref="0x7f40abff72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abff4100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abff4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abff4480"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abff4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abff47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abff4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abff4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abff4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abff4de0"/>
        <function-ref name="get" scoped="" ref="0x7f40abff3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abff31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abff3340"/>
        <function-ref name="set" scoped="" ref="0x7f40abff34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abff3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abff37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abff3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40abff3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abff0d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abff0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abfef0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abfef270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abfef400"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abfef590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abfef720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abfef8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abfefa40"/>
        <function-ref name="get" scoped="" ref="0x7f40abfefbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abfefd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abfee020"/>
        <function-ref name="set" scoped="" ref="0x7f40abfee1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abfee340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abfee4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abfee760"/>
        <function-ref name="clr" scoped="" ref="0x7f40abfee8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abfeb860" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abfeb860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abfebbe0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abfebd70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abfea020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abfea1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abfea340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abfea4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abfea660"/>
        <function-ref name="get" scoped="" ref="0x7f40abfea7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abfea980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abfeab10"/>
        <function-ref name="set" scoped="" ref="0x7f40abfeaca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abfeae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abfe9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abfe92b0"/>
        <function-ref name="clr" scoped="" ref="0x7f40abfe9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abfe6270" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abfe6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abfe65f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abfe6780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abfe6910"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abfe6aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abfe6c30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abfe6dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abfe5020"/>
        <function-ref name="get" scoped="" ref="0x7f40abfe51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abfe5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abfe54d0"/>
        <function-ref name="set" scoped="" ref="0x7f40abfe5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abfe57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abfe5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abfe5c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40abfe5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abfe2d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abfe2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abfe00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abfe0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abfe0400"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abfe0590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abfe0720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abfe08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abfe0a40"/>
        <function-ref name="get" scoped="" ref="0x7f40abfe0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abfe0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abfdf020"/>
        <function-ref name="set" scoped="" ref="0x7f40abfdf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abfdf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abfdf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abfdf760"/>
        <function-ref name="clr" scoped="" ref="0x7f40abfdf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abfdc740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abfdc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abfdcac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abfdcc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abfdcde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abfdb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abfdb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abfdb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abfdb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f40abfdb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abfdb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abfdb980"/>
        <function-ref name="set" scoped="" ref="0x7f40abfdbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abfdbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abfdbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abfda120"/>
        <function-ref name="clr" scoped="" ref="0x7f40abfda2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abfd7100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abfd7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abfd7480"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abfd7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abfd77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abfd7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abfd7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abfd7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abfd7de0"/>
        <function-ref name="get" scoped="" ref="0x7f40abfd6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abfd61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abfd6340"/>
        <function-ref name="set" scoped="" ref="0x7f40abfd64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abfd6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abfd67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abfd6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40abfd6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abfd3d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abfd3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abfd20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abfd2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abfd2400"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abfd2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abfd2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abfd28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abfd2a40"/>
        <function-ref name="get" scoped="" ref="0x7f40abfd2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abfd2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abfd1020"/>
        <function-ref name="set" scoped="" ref="0x7f40abfd11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abfd1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abfd14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abfd1760"/>
        <function-ref name="clr" scoped="" ref="0x7f40abfd18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abfce740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abfce740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abfceac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abfcec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abfcede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abfcd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abfcd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abfcd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abfcd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f40abfcd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abfcd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abfcd980"/>
        <function-ref name="set" scoped="" ref="0x7f40abfcdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abfcdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abfcde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abfcc120"/>
        <function-ref name="clr" scoped="" ref="0x7f40abfcc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abfc9100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abfc9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abfc9480"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abfc9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abfc97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abfc9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abfc9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abfc9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abfc9de0"/>
        <function-ref name="get" scoped="" ref="0x7f40abfc8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abfc81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abfc8340"/>
        <function-ref name="set" scoped="" ref="0x7f40abfc84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abfc8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abfc87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abfc8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40abfc8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abfc5d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abfc5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abfc40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abfc4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abfc4400"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abfc4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abfc4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abfc48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abfc4a40"/>
        <function-ref name="get" scoped="" ref="0x7f40abfc4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abfc4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abfc3020"/>
        <function-ref name="set" scoped="" ref="0x7f40abfc31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abfc3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abfc34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abfc3760"/>
        <function-ref name="clr" scoped="" ref="0x7f40abfc38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abfc0740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abfc0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abfc0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abfc0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abfc0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abfbf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abfbf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abfbf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abfbf4d0"/>
        <function-ref name="get" scoped="" ref="0x7f40abfbf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abfbf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abfbf980"/>
        <function-ref name="set" scoped="" ref="0x7f40abfbfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abfbfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abfbfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abfbe120"/>
        <function-ref name="clr" scoped="" ref="0x7f40abfbe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abfba100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abfba100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abfba480"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abfba610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abfba7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abfba930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abfbaac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abfbac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abfbade0"/>
        <function-ref name="get" scoped="" ref="0x7f40abfb9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abfb91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abfb9340"/>
        <function-ref name="set" scoped="" ref="0x7f40abfb94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abfb9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abfb97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abfb9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40abfb9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abfb6d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abfb6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abfb50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abfb5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abfb5400"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abfb5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abfb5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abfb58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abfb5a40"/>
        <function-ref name="get" scoped="" ref="0x7f40abfb5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abfb5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abfb4020"/>
        <function-ref name="set" scoped="" ref="0x7f40abfb41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abfb4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abfb44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abfb4760"/>
        <function-ref name="clr" scoped="" ref="0x7f40abfb48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abfb1a60" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abfb1a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abfb1de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abfb0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abfb01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abfb0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abfb04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abfb0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abfb07f0"/>
        <function-ref name="get" scoped="" ref="0x7f40abfb0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abfb0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abfb0ca0"/>
        <function-ref name="set" scoped="" ref="0x7f40abfb0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abfaf020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abfaf1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abfaf440"/>
        <function-ref name="clr" scoped="" ref="0x7f40abfaf5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abfac460" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abfac460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abfac7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abfac970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abfacb00"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abfacc90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abface20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abfab020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abfab1b0"/>
        <function-ref name="get" scoped="" ref="0x7f40abfab340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abfab4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abfab660"/>
        <function-ref name="set" scoped="" ref="0x7f40abfab7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abfab980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abfabb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abfabda0"/>
        <function-ref name="clr" scoped="" ref="0x7f40abfaa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abfa8e00" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abfa8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abfa71c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abfa7350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abfa74e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abfa7670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abfa7800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abfa7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abfa7b20"/>
        <function-ref name="get" scoped="" ref="0x7f40abfa7cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abfa7e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abfa6020"/>
        <function-ref name="set" scoped="" ref="0x7f40abfa61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abfa6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abfa64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abfa6760"/>
        <function-ref name="clr" scoped="" ref="0x7f40abfa68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abfa3740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abfa3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abfa3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abfa3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abfa3de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abfa2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abfa21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abfa2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abfa24d0"/>
        <function-ref name="get" scoped="" ref="0x7f40abfa2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abfa27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abfa2980"/>
        <function-ref name="set" scoped="" ref="0x7f40abfa2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abfa2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abfa2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abfa1120"/>
        <function-ref name="clr" scoped="" ref="0x7f40abfa12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf9e100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf9e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf9e480"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf9e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf9e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf9e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf9eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf9ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf9ede0"/>
        <function-ref name="get" scoped="" ref="0x7f40abf9d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf9d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf9d340"/>
        <function-ref name="set" scoped="" ref="0x7f40abf9d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf9d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf9d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf9da80"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf9dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf9ad10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf9ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf980e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf98270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf98400"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf98590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf98720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf988b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf98a40"/>
        <function-ref name="get" scoped="" ref="0x7f40abf98bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf98d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf97020"/>
        <function-ref name="set" scoped="" ref="0x7f40abf971b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf97340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf974d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf97760"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf978f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf94740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf94740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf94ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf94c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf94de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf93020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf931b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf93340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf934d0"/>
        <function-ref name="get" scoped="" ref="0x7f40abf93660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf937f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf93980"/>
        <function-ref name="set" scoped="" ref="0x7f40abf93b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf93ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf93e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf92120"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf922b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf8f100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf8f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf8f480"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf8f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf8f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf8f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf8fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf8fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf8fde0"/>
        <function-ref name="get" scoped="" ref="0x7f40abf8e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf8e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf8e340"/>
        <function-ref name="set" scoped="" ref="0x7f40abf8e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf8e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf8e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf8ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf8ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf8bd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf8bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf8a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf8a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf8a400"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf8a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf8a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf8a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf8aa40"/>
        <function-ref name="get" scoped="" ref="0x7f40abf8abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf8ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf89020"/>
        <function-ref name="set" scoped="" ref="0x7f40abf891b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf89340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf894d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf89760"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf898f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf86740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf86740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf86ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf86c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf86de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf85020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf851b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf85340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf854d0"/>
        <function-ref name="get" scoped="" ref="0x7f40abf85660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf857f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf85980"/>
        <function-ref name="set" scoped="" ref="0x7f40abf85b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf85ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf85e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf84120"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf842b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf81100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf81100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf81480"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf81610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf817a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf81930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf81ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf81c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf81de0"/>
        <function-ref name="get" scoped="" ref="0x7f40abf80020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf801b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf80340"/>
        <function-ref name="set" scoped="" ref="0x7f40abf804d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf80660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf807f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf80a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf80c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf7dd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf7dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf7c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf7c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf7c400"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf7c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf7c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf7c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf7ca40"/>
        <function-ref name="get" scoped="" ref="0x7f40abf7cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf7cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf7b020"/>
        <function-ref name="set" scoped="" ref="0x7f40abf7b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf7b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf7b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf7b760"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf7b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf78740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf78740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf78ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf78c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf78de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf77020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf771b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf77340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf774d0"/>
        <function-ref name="get" scoped="" ref="0x7f40abf77660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf777f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf77980"/>
        <function-ref name="set" scoped="" ref="0x7f40abf77b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf77ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf77e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf76120"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf762b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf73100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf73100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf73480"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf73610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf737a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf73930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf73ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf73c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf73de0"/>
        <function-ref name="get" scoped="" ref="0x7f40abf71020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf711b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf71340"/>
        <function-ref name="set" scoped="" ref="0x7f40abf714d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf71660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf717f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf71a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf71c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf6ed10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf6ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf6d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf6d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf6d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf6d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf6d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf6d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf6da40"/>
        <function-ref name="get" scoped="" ref="0x7f40abf6dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf6dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf6c020"/>
        <function-ref name="set" scoped="" ref="0x7f40abf6c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf6c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf6c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf6c760"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf6c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf69740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf69740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf69ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf69c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf69de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf68020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf681b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf68340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf684d0"/>
        <function-ref name="get" scoped="" ref="0x7f40abf68660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf687f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf68980"/>
        <function-ref name="set" scoped="" ref="0x7f40abf68b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf68ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf68e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf67120"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf672b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf64100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf64100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf64480"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf64610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf647a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf64930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf64ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf64c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf64de0"/>
        <function-ref name="get" scoped="" ref="0x7f40abf63020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf631b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf63340"/>
        <function-ref name="set" scoped="" ref="0x7f40abf634d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf63660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf637f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf63a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf63c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf60d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf60d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf5f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf5f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf5f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf5f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf5f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf5f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf5fa40"/>
        <function-ref name="get" scoped="" ref="0x7f40abf5fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf5fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf5e020"/>
        <function-ref name="set" scoped="" ref="0x7f40abf5e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf5e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf5e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf5e760"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf5e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf5b740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf5b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf5bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf5bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf5bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf5a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf5a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf5a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf5a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f40abf5a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf5a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf5a980"/>
        <function-ref name="set" scoped="" ref="0x7f40abf5ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf5aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf5ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf59120"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf592b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf56100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf56100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf56480"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf56610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf567a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf56930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf56ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf56c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf56de0"/>
        <function-ref name="get" scoped="" ref="0x7f40abf55020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf551b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf55340"/>
        <function-ref name="set" scoped="" ref="0x7f40abf554d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf55660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf557f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf55a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf55c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf52d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf52d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf510e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf51270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf51400"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf51590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf51720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf518b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf51a40"/>
        <function-ref name="get" scoped="" ref="0x7f40abf51bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf51d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf50020"/>
        <function-ref name="set" scoped="" ref="0x7f40abf501b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf50340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf504d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf50760"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf508f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf4c740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf4c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf4cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf4cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf4cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf4b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf4b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf4b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf4b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f40abf4b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf4b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf4b980"/>
        <function-ref name="set" scoped="" ref="0x7f40abf4bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf4bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf4be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf4a120"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf4a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf47100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf47100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf47480"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf47610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf477a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf47930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf47ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf47c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf47de0"/>
        <function-ref name="get" scoped="" ref="0x7f40abf46020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf461b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf46340"/>
        <function-ref name="set" scoped="" ref="0x7f40abf464d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf46660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf467f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf46a80"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf46c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40abf43d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f40abf43d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abf420e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abf42270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abf42400"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abf42590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abf42720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abf428b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abf42a40"/>
        <function-ref name="get" scoped="" ref="0x7f40abf42bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abf42d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abf41020"/>
        <function-ref name="set" scoped="" ref="0x7f40abf411b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abf41340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abf414d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abf41760"/>
        <function-ref name="clr" scoped="" ref="0x7f40abf418f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f40abeca2f0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f40abeca2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abeca670"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abeca800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abeca990"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abecab20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abecacb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abecae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abec9020"/>
        <function-ref name="get" scoped="" ref="0x7f40abec91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abec9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abec94d0"/>
        <function-ref name="set" scoped="" ref="0x7f40abec9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abec97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abec9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abec9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40abec9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f40abedb020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f40abedb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abedb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abedb530"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abedb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abedb850"/>
        <function-ref name="get" scoped="" ref="0x7f40abedb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abedbb70"/>
        <function-ref name="set" scoped="" ref="0x7f40abedbd00"/>
        <function-ref name="clr" scoped="" ref="0x7f40abeca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f40abec6de0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f40abec6de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abec5180"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abec5310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abec54a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abec5630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abec57c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abec5950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abec5ae0"/>
        <function-ref name="get" scoped="" ref="0x7f40abec5c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abec5e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abec4020"/>
        <function-ref name="set" scoped="" ref="0x7f40abec41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abec4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abec44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abec4760"/>
        <function-ref name="clr" scoped="" ref="0x7f40abec48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f40abec7b90" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f40abec7b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abec6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abec61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abec6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abec64d0"/>
        <function-ref name="get" scoped="" ref="0x7f40abec6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abec67f0"/>
        <function-ref name="set" scoped="" ref="0x7f40abec6980"/>
        <function-ref name="clr" scoped="" ref="0x7f40abec6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f40abec1930" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f40abec1930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abec1cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abec1e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40abebf020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abebf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abebf340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40abebf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abebf660"/>
        <function-ref name="get" scoped="" ref="0x7f40abebf7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40abebf980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40abebfb10"/>
        <function-ref name="set" scoped="" ref="0x7f40abebfca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40abebfe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40abebe020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40abebe2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f40abebe440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f40abec2710" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f40abec2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40abec2a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f40abec2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f40abec2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40abec1020"/>
        <function-ref name="get" scoped="" ref="0x7f40abec11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40abec1340"/>
        <function-ref name="set" scoped="" ref="0x7f40abec14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40abec1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f40abd08370" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f40abd08370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f40abd04870"/>
        <function-ref name="fired" scoped="" ref="0x7f40abd07e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f40abd05c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f40abd05780"/>
        <function-ref name="getdt" scoped="" ref="0x7f40abd031e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f40abd04cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f40abd05300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f40abd07020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f40abd04260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f40abd074f0"/>
        <function-ref name="stop" scoped="" ref="0x7f40abd079c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f40abea9610" loc="49:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f40abea9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f40abea6c40"/>
        <function-ref name="fired" scoped="" ref="0x7f40abea71e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f40abea6020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f40abea7ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f40abea4590"/>
        <function-ref name="gett0" scoped="" ref="0x7f40abea4110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f40abea7660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f40abea8390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f40abea6630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f40abea8860"/>
        <function-ref name="stop" scoped="" ref="0x7f40abea8d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f40abe9f1d0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f40abe9f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f40abe9c630"/>
        <function-ref name="fired" scoped="" ref="0x7f40abe9ec30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f40abe9d9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f40abe9d550"/>
        <function-ref name="getdt" scoped="" ref="0x7f40abe9b020"/>
        <function-ref name="gett0" scoped="" ref="0x7f40abe9cab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f40abe9d0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f40abe9fdc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f40abe9c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f40abe9e2e0"/>
        <function-ref name="stop" scoped="" ref="0x7f40abe9e7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f40abe97a80" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f40abe97a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f40abe996f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40abea1400" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f40abea1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40abea1780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f40abda4870" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f40abda4870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f40abda0090"/>
        <function-ref name="fired" scoped="" ref="0x7f40abda2090"/>
        <function-ref name="startAt" scoped="" ref="0x7f40abda2a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f40abda2550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f40abda0550"/>
        <function-ref name="start" scoped="" ref="0x7f40abda36a0"/>
        <function-ref name="stop" scoped="" ref="0x7f40abda3bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40abda4020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f40abda4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40abda43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f40ab288bd0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f40ab288bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac146680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f40ac1469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f40ab2854e0"/>
        <function-ref name="fired" scoped="" ref="0x7f40ab2864e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f40ab286e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f40ab2869a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f40ab2859a0"/>
        <function-ref name="start" scoped="" ref="0x7f40ab287a80"/>
        <function-ref name="stop" scoped="" ref="0x7f40ab286020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40ab288380" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f40ab288380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ab288700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f40ab26f0c0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f40ab26f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ab26f440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ab26f5d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ab26f760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ab26f8f0"/>
        <function-ref name="fired" scoped="" ref="0x7f40ab26fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f40ab2727b0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f40ab2727b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ab272b30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40ab272cc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ab272e50"/>
        <function-ref name="get" scoped="" ref="0x7f40ab271020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ab2711b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ab271340"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ab2714d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ab271660"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ab2717f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f40ab271980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40ab271b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f40ab271da0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f40ab271da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ab270180"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ab270310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ab2704a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ab270630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ab2707c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ab270950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ab270ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ab270c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ab270e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f40abe72020" loc="52:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f40abe72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40abe723a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40abe72530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40abe726c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40abe72850"/>
        <function-ref name="fired" scoped="" ref="0x7f40abe729e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f40abe778b0" loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f40abe778b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40abe77c30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40abe77dc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40abe76020"/>
        <function-ref name="get" scoped="" ref="0x7f40abe761b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40abe76340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40abe764d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f40abe76660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40abe767f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f40abe76980"/>
        <function-ref name="setMode" scoped="" ref="0x7f40abe76b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40abe76ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f40abe75560" loc="51:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f40abe75560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40abe758e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f40abe75a70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40abe75c00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40abe75d90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40abe74020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40abe741b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40abe74340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40abe744d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f40abe74660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f40ab266da0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f40ab266da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f40ab265180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f40ab265310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f40ab2654a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f40ab265630"/>
        <function-ref name="fired" scoped="" ref="0x7f40ab2657c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f40ab2684c0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f40ab2684c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ab268840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40ab2689d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ab268b60"/>
        <function-ref name="get" scoped="" ref="0x7f40ab268cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ab268e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ab267030"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ab2671c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ab267350"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ab2674e0"/>
        <function-ref name="setMode" scoped="" ref="0x7f40ab267670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40ab267800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f40ab26c340" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f40ab26c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac146680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f40ac1469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f40ab269ba0"/>
        <function-ref name="fired" scoped="" ref="0x7f40ab26ab80"/>
        <function-ref name="startAt" scoped="" ref="0x7f40ab269550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f40ab269090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f40ab268090"/>
        <function-ref name="start" scoped="" ref="0x7f40ab26a1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f40ab26a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40ab26da30" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f40ab26da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ab26ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f40ab267a90" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f40ab267a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f40ab267e10"/>
        <function-ref name="getControl" scoped="" ref="0x7f40ab266020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40ab2661b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f40ab266340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f40ab2664d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40ab266660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40ab2667f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f40ab266980"/>
        <function-ref name="setControl" scoped="" ref="0x7f40ab266b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f40abe1d900" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f40abe1d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f40abe21780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40abe20150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40abe21c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f40abe20610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f40abe1b990" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f40abe1b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac146680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f40ac1469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f40abe187c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40abe16170"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40abe18c80"/>
        <function-ref name="overflow" scoped="" ref="0x7f40abe16630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f40abe06c50" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f40abe06c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40abe04020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f40abe041b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f40abe04340"/>
        <function-ref name="get" scoped="" ref="0x7f40abe044d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f40abe04660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40abe047f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f40abe04980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40abe04b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f40abe04ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f40abe04e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f40abe03020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f40abe14b80" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f40abe14b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac146680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f40ac1469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f40abe139b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40abe06360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40abe13e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f40abe06820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f40abde20f0" loc="63:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f40abde20f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac146680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f40ac1469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f40abde1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40abde19a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40abde14e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f40abde1e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f40abe00cf0" loc="62:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f40abe00cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f40abde5b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40abde4550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40abde4090"/>
        <function-ref name="overflow" scoped="" ref="0x7f40abde4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f40ab281020" loc="61:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f40ab281020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f40ab27f870"/>
        <function-ref name="fired" scoped="" ref="0x7f40ab280840"/>
        <function-ref name="startAt" scoped="" ref="0x7f40ab27f220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f40ab280d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f40ab27fd30"/>
        <function-ref name="start" scoped="" ref="0x7f40ab281e30"/>
        <function-ref name="stop" scoped="" ref="0x7f40ab280380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f40ab27b780" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f40ab27b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac146680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f40ac1469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f40ab278020"/>
        <function-ref name="fired" scoped="" ref="0x7f40ab279020"/>
        <function-ref name="startAt" scoped="" ref="0x7f40ab2799a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f40ab2794e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f40ab2784e0"/>
        <function-ref name="start" scoped="" ref="0x7f40ab27a5d0"/>
        <function-ref name="stop" scoped="" ref="0x7f40ab27aae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f40ab27e3d0" loc="68:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f40ab27e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f40ab27d240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ab27dbc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ab27d700"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ab27b0d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f40abd6f9c0" loc="74:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f40abd6f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40abd6fd40"/>
        <function-ref name="runTask" scoped="" ref="0x7f40abd6e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f40abd73850" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f40abd73850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f40abd6f090"/>
        <function-ref name="fired" scoped="" ref="0x7f40abd70090"/>
        <function-ref name="startAt" scoped="" ref="0x7f40abd70a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f40abd70550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f40abd6f550"/>
        <function-ref name="start" scoped="" ref="0x7f40abd716a0"/>
        <function-ref name="stop" scoped="" ref="0x7f40abd71bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f40abd782f0" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f40abd782f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f40abd74870"/>
        <function-ref name="fired" scoped="" ref="0x7f40abd76e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f40abd75c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f40abd75780"/>
        <function-ref name="getdt" scoped="" ref="0x7f40abd731e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f40abd74cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f40abd75300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f40abd76020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f40abd74260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f40abd764f0"/>
        <function-ref name="stop" scoped="" ref="0x7f40abd769c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f40abd1da00" loc="71:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f40abd1da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40abd1dd80"/>
        <function-ref name="runTask" scoped="" ref="0x7f40abd1c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f40abd23640" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f40abd23640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f40abd1fc40"/>
        <function-ref name="fired" scoped="" ref="0x7f40abd201e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f40abd1f020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f40abd20ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f40abd1d590"/>
        <function-ref name="gett0" scoped="" ref="0x7f40abd1d110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f40abd20660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f40abd21390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f40abd1f630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f40abd21860"/>
        <function-ref name="stop" scoped="" ref="0x7f40abd21d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f40abd28150" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f40abd28150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f40abd24700"/>
        <function-ref name="fired" scoped="" ref="0x7f40abd27c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f40abd26a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f40abd265b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f40abd23090"/>
        <function-ref name="gett0" scoped="" ref="0x7f40abd24ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f40abd26110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f40abd28d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f40abd240d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f40abd272a0"/>
        <function-ref name="stop" scoped="" ref="0x7f40abd27790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f40abd1a790" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f40abd1a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f40abd193f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f40abd19a60" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f40abd19a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac322ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f40ac146240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f40abd0f890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40abd0e260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40abd0fd50"/>
        <function-ref name="overflow" scoped="" ref="0x7f40abd0e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f40ab7bb020" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f40ab7bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40ab7bb3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f40ab7bb530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f40ab7bb6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f40ab7bb850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40ab7bb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f40ab7bbc30" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f40ab7bbc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ab7ba020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f40ab7ba1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f40ab7ba340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f40ab7ba4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f40ab7ba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f40ab7ba8b0" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f40ab7ba8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f40ab7bac30"/>
        <function-ref name="source" scoped="" ref="0x7f40ab7badc0"/>
        <function-ref name="address" scoped="" ref="0x7f40ab7b9020"/>
        <function-ref name="destination" scoped="" ref="0x7f40ab7b91b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f40ab7b9340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f40ab7b94d0"/>
        <function-ref name="type" scoped="" ref="0x7f40ab7b9660"/>
        <function-ref name="setType" scoped="" ref="0x7f40ab7b97f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f40ab7b9980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f40ab7b9b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f40ab7b9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f40ab7b8020" loc="52:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f40ab7b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f40ab7b83a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f40ab7b8530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f40ab7b86c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f40ab1e5390" loc="44:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f40ab1e5390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40ab1e5710"/>
        <function-ref name="getPayload" scoped="" ref="0x7f40ab1e58a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f40ab1e5a30"/>
        <function-ref name="cancel" scoped="" ref="0x7f40ab1e5bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40ab1e5d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f40ab1e4060" loc="46:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f40ab1e4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40ab1e43e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f40ab1e4570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f40ab1e4700"/>
        <function-ref name="cancel" scoped="" ref="0x7f40ab1e4890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40ab1e4a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f40ab1e4c70" loc="47:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f40ab1e4c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f40ab1e3020"/>
        <function-ref name="source" scoped="" ref="0x7f40ab1e31b0"/>
        <function-ref name="address" scoped="" ref="0x7f40ab1e3340"/>
        <function-ref name="destination" scoped="" ref="0x7f40ab1e34d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f40ab1e3660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f40ab1e37f0"/>
        <function-ref name="type" scoped="" ref="0x7f40ab1e3980"/>
        <function-ref name="setType" scoped="" ref="0x7f40ab1e3b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f40ab1e3ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f40ab1e3e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f40ab1e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f40abcb3cf0" loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f40abcb3cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40abcaf0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f40abcaf230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f40abcaf3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f40abcaf550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40abcaf6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f40abc65400" loc="48:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f40abc65400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f40ac338550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40abc657a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f40abc65930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f40abc65ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f40abc65c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40abc65de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f40abc66580" loc="46:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f40abc66580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40abc66920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f40abc66ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f40abc66c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f40abc66dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40abc65020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f40abc63720" loc="50:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f40abc63720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40abc63aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f40abc63c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f40abc63dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f40abc62020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f40abc621b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f40abc62480" loc="169:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f40abc62480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40abc62800"/>
        <function-ref name="runTask" scoped="" ref="0x7f40abc62990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f40abc62c60" loc="126:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f40abc62c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40abc61020"/>
        <function-ref name="runTask" scoped="" ref="0x7f40abc611b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f40abc64060" loc="49:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f40abc64060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f40abc643e0"/>
        <function-ref name="source" scoped="" ref="0x7f40abc64570"/>
        <function-ref name="address" scoped="" ref="0x7f40abc64700"/>
        <function-ref name="destination" scoped="" ref="0x7f40abc64890"/>
        <function-ref name="setSource" scoped="" ref="0x7f40abc64a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f40abc64bb0"/>
        <function-ref name="type" scoped="" ref="0x7f40abc64d40"/>
        <function-ref name="setType" scoped="" ref="0x7f40abc63020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f40abc631b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f40abc63340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f40abc634d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f40abc573b0" loc="46:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f40abc573b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f40abc57730"/>
        <function-ref name="stopDone" scoped="" ref="0x7f40abc578c0"/>
        <function-ref name="start" scoped="" ref="0x7f40abc57a50"/>
        <function-ref name="stop" scoped="" ref="0x7f40abc57be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f40abc5c3f0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f40abc5c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f40ac338550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40abc5c770"/>
        <function-ref name="getPayload" scoped="" ref="0x7f40abc5c900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f40abc5ca90"/>
        <function-ref name="cancel" scoped="" ref="0x7f40abc5cc20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40abc5cdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f40abc567e0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f40abc567e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40abc56b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f40abc56cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f40abc56e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f40abc55030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f40abc551c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f40abc561d0" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f40abc561d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f40ac338550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f40abc56550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f40abc50620" loc="53:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f40abc50620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f40abc509a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f40abc50b30"/>
        <function-ref name="led1On" scoped="" ref="0x7f40abc50cc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f40abc50e50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f40abc4e020"/>
        <function-ref name="get" scoped="" ref="0x7f40abc4e1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f40abc4e340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f40abc4e980"/>
        <function-ref name="set" scoped="" ref="0x7f40abc4e4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f40abc4e660"/>
        <function-ref name="led2On" scoped="" ref="0x7f40abc4e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f40abc52b20" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f40abc52b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f40abc50020"/>
        <function-ref name="noAck" scoped="" ref="0x7f40abc501b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f40abc50340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f40abc55470" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f40abc55470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f40abc557f0"/>
        <function-ref name="source" scoped="" ref="0x7f40abc55980"/>
        <function-ref name="address" scoped="" ref="0x7f40abc55b10"/>
        <function-ref name="destination" scoped="" ref="0x7f40abc55ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f40abc55e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f40abc52020"/>
        <function-ref name="type" scoped="" ref="0x7f40abc521b0"/>
        <function-ref name="setType" scoped="" ref="0x7f40abc52340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f40abc524d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f40abc52660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f40abc527f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f40abbf49f0" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f40abbf49f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40abbf4d70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f40abbf3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f40abbf31b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f40abbf3340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40abbf34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f40abbf3760" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f40abbf3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f40abbf3ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f40abc4b7d0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f40abc4b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f40ac338550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40abc4bb70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f40abc4bd00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f40abbf7020"/>
        <function-ref name="cancel" scoped="" ref="0x7f40abbf71b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40abbf7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f40abbf5400" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f40abbf5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40abbf5780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f40abbf5910"/>
        <function-ref name="getPayload" scoped="" ref="0x7f40abbf5aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f40abbf5c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f40abbf5dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f40abbf76c0" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f40abbf76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f40ac338550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f40abbf7a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f40abbf4060" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f40abbf4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f40abbf43e0"/>
        <function-ref name="noAck" scoped="" ref="0x7f40abbf4570"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f40abbf4700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f40abbf7cb0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f40abbf7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f40abbf60a0"/>
        <function-ref name="source" scoped="" ref="0x7f40abbf6230"/>
        <function-ref name="address" scoped="" ref="0x7f40abbf63c0"/>
        <function-ref name="destination" scoped="" ref="0x7f40abbf6550"/>
        <function-ref name="setSource" scoped="" ref="0x7f40abbf66e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f40abbf6870"/>
        <function-ref name="type" scoped="" ref="0x7f40abbf6a00"/>
        <function-ref name="setType" scoped="" ref="0x7f40abbf6b90"/>
        <function-ref name="isForMe" scoped="" ref="0x7f40abbf6d20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f40abbf5020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f40abbf51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f40abbee2f0" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f40abbee2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f40abbee670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f40abbee800"/>
        <function-ref name="start" scoped="" ref="0x7f40abbee990"/>
        <function-ref name="stop" scoped="" ref="0x7f40abbeeb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f40abbede10" loc="52:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f40abbede10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f40ac3350d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40abbec1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f40abbec350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f40abbec4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f40abbec670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40abbec800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40abbf1bc0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f40abbf1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40abbee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f40abbed320" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f40abbed320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f40ac3350d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f40abbed6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f40abbea940" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f40abbea940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f40abbeacc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f40abbeae50"/>
        <function-ref name="led1On" scoped="" ref="0x7f40abbe5020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f40abbe51b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f40abbe5340"/>
        <function-ref name="get" scoped="" ref="0x7f40abbe54d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f40abbe5660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f40abbe5ca0"/>
        <function-ref name="set" scoped="" ref="0x7f40abbe57f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f40abbe5980"/>
        <function-ref name="led2On" scoped="" ref="0x7f40abbe5b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f40abbea020" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f40abbea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f40ac3350d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f40abbea3a0"/>
        <function-ref name="offset" scoped="" ref="0x7f40abbea530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f40abbea6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f40abbdd450" loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f40abbdd450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f40abbdd7d0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f40abbdd960"/>
        <function-ref name="start" scoped="" ref="0x7f40abbddaf0"/>
        <function-ref name="stop" scoped="" ref="0x7f40abbddc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f40abb76e40" loc="332:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f40abb76e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40abb751e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f40abb75370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f40abbc9e00" loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f40abbc9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f40abbcb1c0"/>
        <function-ref name="stop" scoped="" ref="0x7f40abbcb350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f40abbadd10" loc="191:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f40abbadd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40abbac0e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f40abbac270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40abbdfd60" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f40abbdfd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40abbdd180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f40abbc7a80" loc="75:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f40abbc7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f40abbc7e00"/>
        <function-ref name="flush" scoped="" ref="0x7f40abbca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f40abb78400" loc="322:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f40abb78400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40abb78780"/>
        <function-ref name="runTask" scoped="" ref="0x7f40abb78910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f40abbcde30" loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f40abbcde30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f40abbd61e0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f40abbd6370"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f40abbd6500"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f40abbd6690"/>
        <function-ref name="putData" scoped="" ref="0x7f40abbd6820"/>
        <function-ref name="putDone" scoped="" ref="0x7f40abbd69b0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f40abbd6b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f40abbd6dc0" loc="73:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f40abbd6dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f40abbd2180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f40abbd2310"/>
        <function-ref name="led1On" scoped="" ref="0x7f40abbd24a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f40abbd2630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f40abbd27c0"/>
        <function-ref name="get" scoped="" ref="0x7f40abbd2950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f40abbd2ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f40abbcc1b0"/>
        <function-ref name="set" scoped="" ref="0x7f40abbd2c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f40abbd2e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f40abbcc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f40abb710c0" loc="341:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f40abb710c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40abb71440"/>
        <function-ref name="runTask" scoped="" ref="0x7f40abb715d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f40abbd74a0" loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f40abbd74a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f40abbd7820"/>
        <function-ref name="nextByte" scoped="" ref="0x7f40abbd79b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f40abbd7b40"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f40abbd7cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f40abbd3ad0" loc="68:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f40abbd3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f40abbd3e50"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f40abbda020"/>
        <function-ref name="endPacket" scoped="" ref="0x7f40abbda1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f40abaa6c50" loc="275:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f40abaa6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40abaa5020"/>
        <function-ref name="runTask" scoped="" ref="0x7f40abaa51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f40abaab830" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f40abaab830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f40ac3350d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40abaabbd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f40abaabd60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f40abaaa020"/>
        <function-ref name="cancel" scoped="" ref="0x7f40abaaa1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40abaaa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f40abaa5480" loc="158:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f40abaa5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40abaa5800"/>
        <function-ref name="runTask" scoped="" ref="0x7f40abaa5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f40abaab110" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f40abaab110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f40ac3350d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f40abaab4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f40abaaa760" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f40abaaa760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f40ac3350d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f40abaaab00"/>
        <function-ref name="offset" scoped="" ref="0x7f40abaaac90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f40abaaae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f40abaa7590" loc="57:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f40abaa7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f40abaa7910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f40abaa7aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f40abaa7c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f40abaa7dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f40abaa6020"/>
        <function-ref name="get" scoped="" ref="0x7f40abaa61b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f40abaa6340"/>
        <function-ref name="led2On" scoped="" ref="0x7f40abaa6980"/>
        <function-ref name="set" scoped="" ref="0x7f40abaa6660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f40abaa64d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f40abaa67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f40abaa99d0" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f40abaa99d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f40abaa9d50"/>
        <function-ref name="nextByte" scoped="" ref="0x7f40abaa7020"/>
        <function-ref name="startSend" scoped="" ref="0x7f40abaa71b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f40abaa7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f40abaa90e0" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f40abaa90e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f40abaa9460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f40abaa95f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f40abaa9780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f40aba96d20" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f40aba96d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40aba9f0e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f40aba9f270"/>
        <function-ref name="receive" scoped="" ref="0x7f40aba9f400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f40aba9f590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f40aba9f720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f40aba9f8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40aba9fa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f40abaa3b70" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f40abaa3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f40abaa0020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f40abaa01b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f40abaa0340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f40abaa04d0"/>
        <function-ref name="putData" scoped="" ref="0x7f40abaa0660"/>
        <function-ref name="putDone" scoped="" ref="0x7f40abaa07f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f40abaa0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f40aba9fcc0" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f40aba9fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f40aba9e0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f40aba9e230"/>
        <function-ref name="led1On" scoped="" ref="0x7f40aba9e3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f40aba9e550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f40aba9e6e0"/>
        <function-ref name="get" scoped="" ref="0x7f40aba9e870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f40aba9ea00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f40aba931b0"/>
        <function-ref name="set" scoped="" ref="0x7f40aba9eb90"/>
        <function-ref name="led0On" scoped="" ref="0x7f40aba9ed20"/>
        <function-ref name="led2On" scoped="" ref="0x7f40aba93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f40aba77020" loc="6:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f40aba77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40aba773a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f40aba77530"/>
        <function-ref name="receive" scoped="" ref="0x7f40aba776c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f40aba77850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f40aba79890" loc="5:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f40aba79890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40aba79c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f40aba79da0"/>
        <function-ref name="receive" scoped="" ref="0x7f40aba78020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f40aba781b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f40aba78340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f40aba784d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40aba78660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f40aba79080" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f40aba79080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f40aba79400"/>
        <function-ref name="stop" scoped="" ref="0x7f40aba79590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f40ab7ecc70" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f40ab7ecc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f40ab7eb020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f40ab7eb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f40ab7ea440" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f40ab7ea440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40ab7ea7c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f40ab7ea950"/>
        <function-ref name="receive" scoped="" ref="0x7f40ab7eaae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f40ab7eac70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f40ab7e9020" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f40ab7e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f40ab7e93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f40ab7eb440" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f40ab7eb440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40ab7eb7c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f40ab7eb950"/>
        <function-ref name="receive" scoped="" ref="0x7f40ab7ebae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f40ab7ebc70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f40ab7ebe00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f40ab7ea020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40ab7ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f40ab7ec020" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f40ab7ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f40ab7ec3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f40ab7ec530"/>
        <function-ref name="request" scoped="" ref="0x7f40ab7ec6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f40ab7ec850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f40ab7ec9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f40aba0edd0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f40aba0edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f40aba10180"/>
        <function-ref name="configure" scoped="" ref="0x7f40aba10310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f40aba0c210" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f40aba0c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40aba0c590"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f40aba0c720"/>
        <function-ref name="receive" scoped="" ref="0x7f40aba0c8b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f40aba0ca40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f40aba0a600" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f40aba0a600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f40aba0a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f40aba10b50" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f40aba10b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40aba0f020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f40aba0f1b0"/>
        <function-ref name="receive" scoped="" ref="0x7f40aba0f340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f40aba0f4d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f40aba0f660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f40aba0f7f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40aba0f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f40aba0b370" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f40aba0b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f40aba0b6f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f40aba0b880"/>
        <function-ref name="request" scoped="" ref="0x7f40aba0ba10"/>
        <function-ref name="granted" scoped="" ref="0x7f40aba0bba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f40aba0bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f40aba12320" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f40aba12320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f40aba126a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f40aba12830"/>
        <function-ref name="request" scoped="" ref="0x7f40aba129c0"/>
        <function-ref name="granted" scoped="" ref="0x7f40aba12b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f40aba12ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f40aba05be0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f40aba05be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f40aba09020"/>
        <function-ref name="txDone" scoped="" ref="0x7f40aba091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f40ab980e70" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f40ab980e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f40ab97f240"/>
        <function-ref name="configure" scoped="" ref="0x7f40ab97f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f40ab97e890" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f40ab97e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40ab97ec30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f40ab97edc0"/>
        <function-ref name="receive" scoped="" ref="0x7f40ab97d020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f40ab97d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f40ab97c3e0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f40ab97c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f40ab97c780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f40ab97ca50" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f40ab97ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f40ab97cdd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f40ab97b020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f40ab97b1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f40ab97b340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f40ab97b4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f40ab97b660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f40ab97b7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f40ab97b980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f40ab97bb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f40ab97bca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f40ab97be30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f40ab97a020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f40ab97a1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f40ab97a440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f40ab97a5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f40ab97a760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f40ab97a8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f40ab97aa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f40ab97ac10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f40ab97ada0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f40ab979020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f40ab9791b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f40ab979340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f40ab9794d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ab979660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f40ab9799f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f40ab979b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f40ab979d10"/>
        <function-ref name="tx" scoped="" ref="0x7f40ab978020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f40ab9781b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f40ab978340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f40ab9784d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f40ab978660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f40ab9787f0"/>
        <function-ref name="rx" scoped="" ref="0x7f40ab978980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f40ab978b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f40ab978ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f40ab978e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f40ab977020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f40ab9771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f40ab97f790" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f40ab97f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40ab97fb30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f40ab97fcc0"/>
        <function-ref name="receive" scoped="" ref="0x7f40ab97fe50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f40ab97e020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f40ab97e1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f40ab97e340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40ab97e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f40ab976020" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f40ab976020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac146680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f40ac1469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f40ab976e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ab975800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ab975340"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ab975cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f40ab97d5b0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f40ab97d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f40ab97d950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f40ab97dae0"/>
        <function-ref name="request" scoped="" ref="0x7f40ab97dc70"/>
        <function-ref name="granted" scoped="" ref="0x7f40ab97de00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f40ab97c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f40ab9800d0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f40ab9800d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f40ab980470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f40ab980600"/>
        <function-ref name="request" scoped="" ref="0x7f40ab980790"/>
        <function-ref name="granted" scoped="" ref="0x7f40ab980920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f40ab980ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f40ab9775b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f40ab9775b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f40ab977950"/>
        <function-ref name="txDone" scoped="" ref="0x7f40ab977ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f40ab973120" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f40ab973120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f40ab9734a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f40ab973630"/>
        <function-ref name="led1On" scoped="" ref="0x7f40ab9737c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f40ab973950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f40ab973ae0"/>
        <function-ref name="get" scoped="" ref="0x7f40ab973c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f40ab973e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f40ab9724d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ab9721b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f40ab972020"/>
        <function-ref name="led0On" scoped="" ref="0x7f40ab972340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f40ab963080" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f40ab963080"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f40ab963400"/>
        <function-ref name="txDone" scoped="" ref="0x7f40ab963590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f40ab967ca0" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f40ab967ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f40ab9690a0"/>
        <function-ref name="stop" scoped="" ref="0x7f40ab969230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f40ab969550" loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f40ab969550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f40ab9698d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f40ab969a60"/>
        <function-ref name="setUctl" scoped="" ref="0x7f40ab969bf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f40ab969d80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f40ab968020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f40ab9681b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f40ab968340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f40ab9684d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f40ab968660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f40ab9687f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f40ab968980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f40ab968b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f40ab968ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f40ab966020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f40ab9661b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f40ab966340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f40ab9664d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f40ab966660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f40ab9667f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f40ab966980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f40ab966b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f40ab966ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f40ab966e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f40ab965020"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ab9651b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f40ab965540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f40ab9656d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f40ab965860"/>
        <function-ref name="tx" scoped="" ref="0x7f40ab9659f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f40ab965b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f40ab965d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f40ab964020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f40ab9641b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f40ab964340"/>
        <function-ref name="rx" scoped="" ref="0x7f40ab9644d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f40ab964660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f40ab9647f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f40ab964980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f40ab964b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f40ab964ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f40ab9551f0" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f40ab9551f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ab955570"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ab955700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ab955890"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ab955a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ab955bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ab955d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ab954020"/>
        <function-ref name="get" scoped="" ref="0x7f40ab9541b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ab954340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ab9544d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ab954660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ab9547f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ab954980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ab954c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ab954da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f40ab95a910" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f40ab95a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f40ab95ac90"/>
        <function-ref name="txDone" scoped="" ref="0x7f40ab95ae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f40ab9531f0" loc="81:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f40ab9531f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ab953570"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ab953700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ab953890"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ab953a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ab953bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ab953d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ab952020"/>
        <function-ref name="get" scoped="" ref="0x7f40ab9521b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ab952340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ab9524d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ab952660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ab9527f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ab952980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ab952c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ab952da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f40ab9501f0" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f40ab9501f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ab950570"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ab950700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ab950890"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ab950a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ab950bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ab950d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ab94f020"/>
        <function-ref name="get" scoped="" ref="0x7f40ab94f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ab94f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ab94f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ab94f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ab94f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ab94f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ab94fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ab94fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f40ab95fcc0" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f40ab95fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f40ab95e0a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f40ab95e230"/>
        <function-ref name="setUctl" scoped="" ref="0x7f40ab95e3c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f40ab95e550"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f40ab95e6e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f40ab95e870"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f40ab95ea00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f40ab95eb90"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f40ab95ed20"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f40ab95d020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f40ab95d1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f40ab95d340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f40ab95d4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f40ab95d760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f40ab95d8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f40ab95da80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f40ab95dc10"/>
        <function-ref name="isUart" scoped="" ref="0x7f40ab95dda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f40ab95c020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f40ab95c1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f40ab95c340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f40ab95c4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f40ab95c660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f40ab95c7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ab95c980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f40ab95cd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f40ab95b020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f40ab95b1b0"/>
        <function-ref name="tx" scoped="" ref="0x7f40ab95b340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f40ab95b4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f40ab95b660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f40ab95b7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f40ab95b980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f40ab95bb10"/>
        <function-ref name="rx" scoped="" ref="0x7f40ab95bca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f40ab95be30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f40ab95a020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f40ab95a1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f40ab95a340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f40ab95a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f40ab95f410" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f40ab95f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f40ab95f790"/>
        <function-ref name="stop" scoped="" ref="0x7f40ab95f920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f40ab9571f0" loc="79:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f40ab9571f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ab957570"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ab957700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ab957890"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ab957a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ab957bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ab957d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ab956020"/>
        <function-ref name="get" scoped="" ref="0x7f40ab9561b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ab956340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ab9564d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ab956660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ab9567f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ab956980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ab956c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ab956da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f40ab959210" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f40ab959210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40ab959590"/>
        <function-ref name="isInput" scoped="" ref="0x7f40ab959720"/>
        <function-ref name="setResistor" scoped="" ref="0x7f40ab9598b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40ab959a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40ab959bd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f40ab959d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40ab958020"/>
        <function-ref name="get" scoped="" ref="0x7f40ab9581b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f40ab958340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f40ab9584d0"/>
        <function-ref name="set" scoped="" ref="0x7f40ab958660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f40ab9587f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f40ab958980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f40ab958c10"/>
        <function-ref name="clr" scoped="" ref="0x7f40ab958da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f40ab8d2110" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f40ab8d2110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f40ac146680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f40ac1469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f40ab8d1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40ab8d19a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40ab8d14e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f40ab8d1e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f40ab116a90" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f40ab116a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f40ab116e10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f40ab115020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f40ab110be0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f40ab110be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f40ab10f020"/>
        <function-ref name="configure" scoped="" ref="0x7f40ab10f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f40ab110440" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f40ab110440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f40ab1107c0"/>
        <function-ref name="txDone" scoped="" ref="0x7f40ab110950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f40ab117e00" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f40ab117e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f40ab1161c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f40ab116350"/>
        <function-ref name="request" scoped="" ref="0x7f40ab1164e0"/>
        <function-ref name="granted" scoped="" ref="0x7f40ab116670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f40ab116800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f40ab115a50" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f40ab115a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f40ab115dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f40ab114020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f40ab1141b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f40ab114340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f40ab1144d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f40ab114660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f40ab1147f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f40ab114980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f40ab114b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f40ab114ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f40ab114e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f40ab113020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f40ab1131b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f40ab113440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f40ab1135d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f40ab113760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f40ab1138f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f40ab113a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f40ab113c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f40ab113da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f40ab112020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f40ab1121b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f40ab112340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f40ab1124d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f40ab112660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f40ab1129f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f40ab112b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f40ab112d10"/>
        <function-ref name="tx" scoped="" ref="0x7f40ab111020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f40ab1111b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f40ab111340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f40ab1114d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f40ab111660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f40ab1117f0"/>
        <function-ref name="rx" scoped="" ref="0x7f40ab111980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f40ab111b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f40ab111ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f40ab111e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f40ab110020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f40ab1101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f40ab1152b0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40ab1152b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f40ab115630"/>
        <function-ref name="userId" scoped="" ref="0x7f40ab1157c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f40ab8b4d50" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f40ab8b4d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f40ab8b3100"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f40ab8b3290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f40ab8b1370" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f40ab8b1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f40ab8b16f0"/>
        <function-ref name="configure" scoped="" ref="0x7f40ab8b1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f40ab8b8ce0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f40ab8b8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f40ab8b50a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f40ab8b5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f40ab8b5a60" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f40ab8b5a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f40ab8b5de0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f40ab8b4020"/>
        <function-ref name="request" scoped="" ref="0x7f40ab8b41b0"/>
        <function-ref name="granted" scoped="" ref="0x7f40ab8b4340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f40ab8b44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f40ab8b3590" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40ab8b3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f40ab8b3910"/>
        <function-ref name="userId" scoped="" ref="0x7f40ab8b3aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f40ab89c4b0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40ab89c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f40ab89c830"/>
        <function-ref name="userId" scoped="" ref="0x7f40ab89c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f40ab8ae5c0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f40ab8ae5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f40ab8ae960"/>
        <function-ref name="txDone" scoped="" ref="0x7f40ab8aeaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f40ab89de70" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f40ab89de70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ab89c220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f40ab89d020" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f40ab89d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40ab89d3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f40ab89d690" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f40ab89d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f40ab89da10"/>
        <function-ref name="txDone" scoped="" ref="0x7f40ab89dba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f40ab822bf0" loc="92:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f40ab822bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f40ab821020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f40ab8211b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f40ab820930" loc="96:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f40ab820930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f40ab820cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f40ab820e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f40ab821400" loc="93:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f40ab821400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f40ab821780"/>
        <function-ref name="requested" scoped="" ref="0x7f40ab821910"/>
        <function-ref name="granted" scoped="" ref="0x7f40ab821aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f40ab821c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f40ab821dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f40ab823e60" loc="91:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f40ab823e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f40ab822230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f40ab8223c0"/>
        <function-ref name="request" scoped="" ref="0x7f40ab822550"/>
        <function-ref name="granted" scoped="" ref="0x7f40ab8226e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f40ab822870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f40ab820060" loc="94:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40ab820060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f40ab8203e0"/>
        <function-ref name="userId" scoped="" ref="0x7f40ab820570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40ab0acca0" loc="44:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f40ab0acca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ab0ab0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f40ab0ab330" loc="45:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f40ab0ab330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f40ab0ab6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f40ab0ab840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f40ab0ab9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f40ab0abb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f40ab0a83a0" loc="55:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f40ab0a83a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f40ab0a8740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f40ab0a88d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f40ab0a6210" loc="60:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f40ab0a6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f40ab0a65b0"/>
        <function-ref name="configure" scoped="" ref="0x7f40ab0a6740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f40ab0a69d0" loc="61:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f40ab0a69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f40ab0a6d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f40ab0a4020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f40ab0a41b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f40ab0a4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f40ab0a8b20" loc="56:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f40ab0a8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f40ab0a7020"/>
        <function-ref name="requested" scoped="" ref="0x7f40ab0a71b0"/>
        <function-ref name="granted" scoped="" ref="0x7f40ab0a7340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f40ab0a74d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f40ab0a7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f40ab0a4590" loc="62:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f40ab0a4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f40ab0a4910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f40ab0a4aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f40ab0a4c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f40ab0a4dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f40ab0a3020"/>
        <function-ref name="get" scoped="" ref="0x7f40ab0a31b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f40ab0a3340"/>
        <function-ref name="led0On" scoped="" ref="0x7f40ab0a3980"/>
        <function-ref name="set" scoped="" ref="0x7f40ab0a3660"/>
        <function-ref name="led2On" scoped="" ref="0x7f40ab0a34d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f40ab0a37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f40ab0a9540" loc="54:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f40ab0a9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f40ab0a98e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f40ab0a9a70"/>
        <function-ref name="request" scoped="" ref="0x7f40ab0a9c00"/>
        <function-ref name="granted" scoped="" ref="0x7f40ab0a9d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f40ab0a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f40ab0a78b0" loc="57:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40ab0a78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f40ab0a7c30"/>
        <function-ref name="userId" scoped="" ref="0x7f40ab0a7dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f40ab0a3c50" loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f40ab0a3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40ab0a2020"/>
        <function-ref name="runTask" scoped="" ref="0x7f40ab0a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f40ab805400" loc="72:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f40ab805400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f40ab805780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f40ab8059d0" loc="73:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f40ab8059d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f40ab805d50"/>
        <function-ref name="requested" scoped="" ref="0x7f40ab804020"/>
        <function-ref name="granted" scoped="" ref="0x7f40ab8041b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f40ab804340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f40ab8044d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f40ab81bb20" loc="70:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f40ab81bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f40ab805020"/>
        <function-ref name="stop" scoped="" ref="0x7f40ab8051b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f40ab804720" loc="74:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40ab804720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f40ab804aa0"/>
        <function-ref name="userId" scoped="" ref="0x7f40ab804c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f40ab073b00" loc="62:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f40ab073b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f40ab073e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f40ab0720f0" loc="63:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f40ab0720f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f40ab072470"/>
        <function-ref name="requested" scoped="" ref="0x7f40ab072600"/>
        <function-ref name="granted" scoped="" ref="0x7f40ab072790"/>
        <function-ref name="isOwner" scoped="" ref="0x7f40ab072920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f40ab072ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f40ab0733a0" loc="60:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f40ab0733a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f40ab073720"/>
        <function-ref name="stop" scoped="" ref="0x7f40ab0738b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f40ab072d00" loc="64:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40ab072d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f40ab0710a0"/>
        <function-ref name="userId" scoped="" ref="0x7f40ab071230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f40ab7e5920" loc="3:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f40ab7e5920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f40ab7e5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f40ab7e4020" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f40ab7e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f40ab7e43a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f40ab7e4530"/>
        <function-ref name="request" scoped="" ref="0x7f40ab7e46c0"/>
        <function-ref name="granted" scoped="" ref="0x7f40ab7e4850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f40ab7e49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f40ab7e50c0" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f40ab7e50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f40ab7e5440"/>
        <function-ref name="stop" scoped="" ref="0x7f40ab7e55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f40ab7d28d0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f40ab7d28d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f40ab7d2c50"/>
        <function-ref name="offset" scoped="" ref="0x7f40ab7d2de0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f40ab7cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f40ab7b4720" loc="43:/home/jyxk/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f40ab7b4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f40ab78f5f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f40ab78e3a0"/>
        <function-ref name="element" scoped="" ref="0x7f40ab78ea10"/>
        <function-ref name="full" scoped="" ref="0x7f40ab791810"/>
        <function-ref name="maxSize" scoped="" ref="0x7f40ab78f170"/>
        <function-ref name="dequeue" scoped="" ref="0x7f40ab78fca0"/>
        <function-ref name="empty" scoped="" ref="0x7f40ab791390"/>
        <function-ref name="size" scoped="" ref="0x7f40ab791c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f40ab7885a0" loc="93:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f40ab7885a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f40ab7854a0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f40ab783260"/>
        <function-ref name="element" scoped="" ref="0x7f40ab7838d0"/>
        <function-ref name="full" scoped="" ref="0x7f40ab787680"/>
        <function-ref name="maxSize" scoped="" ref="0x7f40ab785020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f40ab785b50"/>
        <function-ref name="empty" scoped="" ref="0x7f40ab787200"/>
        <function-ref name="size" scoped="" ref="0x7f40ab787b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f40ab782020" loc="94:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f40ab782020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40ab7823a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f40ab782530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f40ab7826c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f40ab782850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40ab7829e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f40ab782c70" loc="95:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f40ab782c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40ab781020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f40ab7811b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f40ab781340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f40ab7814d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f40ab781660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f40ab77b020" loc="114:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7f40ab77b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40ab77b3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f40ab77b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40ab78a470" loc="89:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f40ab78a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ab78a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f40ab7818e0" loc="96:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f40ab7818e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f40ab781c60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f40ab781df0"/>
        <function-ref name="led1On" scoped="" ref="0x7f40ab780020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f40ab7801b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f40ab780340"/>
        <function-ref name="get" scoped="" ref="0x7f40ab7804d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f40ab780660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f40ab780ca0"/>
        <function-ref name="set" scoped="" ref="0x7f40ab7807f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f40ab780980"/>
        <function-ref name="led2On" scoped="" ref="0x7f40ab780b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f40ab786c90" loc="90:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f40ab786c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f40ab7880a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f40ab7657e0" loc="43:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f40ab7657e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f40ab765b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40ab762b20" loc="94:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f40ab762b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40ab75e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f40ab75e300" loc="95:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f40ab75e300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f40ab75e680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f40ab7560f0" loc="39:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f40ab7560f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f40ab756470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f40ab756810" loc="40:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f40ab756810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f40ab756b90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f40ab756d20"/>
        <function-ref name="start" scoped="" ref="0x7f40ab754020"/>
        <function-ref name="stop" scoped="" ref="0x7f40ab7541b0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f40ac320e10" loc="62:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f40ac321a20" loc="60:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f40ac2f0b40" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f40ac2f2de0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f40ac2f0420" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f40ac2f2700" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f40ac2f15a0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f40ac2f6910" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f40ac2f2020" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f40ac2f1cc0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f40ac493020" loc="62:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f40ac758dd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f40ac29d020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f40ac29ecc0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f40ac2a1390" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f40ac2e85a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f40ac2e6020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f40ac29d890" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f40ac29c7b0" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f40ac29e560" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f40ac29c020" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f40ac2a1b30" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f40ac2a0350" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f40ac2a0da0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f40ac2e85a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f40ac2e6020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f40ac2a0b20" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f40ac2e85a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f40ac2e6020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f40ac2900e0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f40ac28d730" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f40ac28d4b0" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f40ac28c2e0" loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f40ac28c060" loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f40ac28eca0" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f40ac28e3e0" loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f40ac290a90" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f40ac290810" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f40ac2973e0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f40ac297d60" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f40ac297ae0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f40ac295790" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f40ac295510" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f40ac2942a0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f40ac294020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f40ac294990" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f40ac2a7810" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f40ac2a42a0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f40ac2a4020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f40ac2a6020" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f40ac2adab0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f40ac2a6760" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f40ac2a99b0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f40ac2a7120" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f40ac2a9270" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f40ac2a80e0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f40ac2a89f0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f40ac2a8770" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f40ac2a4cb0" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f40ac2a4a30" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f40ac2661f0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f40ac3b6a80" loc="85:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f40ac3b51f0" loc="86:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f40ac3b62b0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f40ac5cf830" loc="52:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f40ac811020" loc="57:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f40ac810020" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f40ac811790" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f40ac805350" loc="67:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f40ac805ba0" loc="75:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f40ac142350" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f40ac142350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f40ac13a1f0" loc="136:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f40ac13fa60" loc="83:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f40ac13d820" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f40ac13d250" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f40ac13d590" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f40ac13ea60" loc="98:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f40ac139270" loc="151:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f40ac13a980" loc="144:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f40ac13e270" loc="92:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f40ac140020" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f40ac142c40" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f40ac13c820" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f40ac13c250" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f40ac13c590" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f40ac140ae0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f40ac140860" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f40ac13f350" loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f40ac1307b0" loc="61:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f40ac12e020" loc="67:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f40ac12e800" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f40ac12d7d0" loc="83:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f40ac12b020" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f40ac12b830" loc="117:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f40ac12d020" loc="77:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f40ac12a3f0" loc="134:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f40ac12a170" loc="134:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f40ac130020" loc="56:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f40ac12c020" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f40ac12c7b0" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f40ac114020" loc="44:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f40ac114750" loc="45:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f40ac1150e0" loc="42:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f40ac1135e0" loc="47:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f40ac1157e0" loc="43:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f40ac114e70" loc="46:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f40ac1172b0" loc="40:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f40ac117980" loc="41:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f40ac0e9020" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f40ac0e9770" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f40ac0e42e0" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f40ac0e4060" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f40ac0eb770" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f40ac0e8780" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f40ac0e4bd0" loc="117:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f40ac0e8020" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f40ac0ea820" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f40ac0e5020" loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f40ac0ea020" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f40ac0ef8c0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f40ac0e6020" loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f40ac0e57c0" loc="101:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f40ac0e67e0" loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f40ac0eb020" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f40abe9bc50" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f40abe9bc50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f40abe975a0" loc="61:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f40ace71920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f40abe925d0" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f40abe925d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f40abe92810" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f40abe92810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f40abe8d390" loc="109:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f40abe92810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f40abe8f3b0" loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f40abe8e9d0" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f40abe92810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f40abe92810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f40abe8e400" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f40abe92810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f40abe8e740" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f40abe92810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f40abe8fb90" loc="88:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f40abe8db80" loc="116:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f40abe92810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f40abe90390" loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f40abe92810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f40abe90110" loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f40abe92810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f40abe90bc0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f40abe24e20" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f40abe24e20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f40abe1f0d0" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f40abe1f0d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f40abe1f9f0" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f40abe1f0d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f40abe1eb10" loc="76:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f40abe1e2b0" loc="71:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f40abe1d2b0" loc="82:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f40abcfac90" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f40ac338d10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f40abcfa340" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f40ac338d10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f40abcfa6c0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f40abcfa9f0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f40abcf5620" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f40abcf5020" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f40abcf5350" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f40abcf46d0" loc="123:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f40abcf72a0" loc="96:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f40abcf7020" loc="96:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f40abcf67f0" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f40abcf6210" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f40abcf6560" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f40abcef020" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f40abcfcc60" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f40abcee110" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f40abcefe10" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f40abcea490" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f40abcece50" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f40abcea1c0" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f40abcec560" loc="106:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f40abced5e0" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f40abced020" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f40abced350" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f40abcdbd30" loc="177:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f40ac338930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f40abcdbab0" loc="177:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f40abce4a10" loc="88:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f40ac338d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f40abce4790" loc="88:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f40abcfbe60" loc="68:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f40ac338d10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f40abce6950" loc="78:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f40ac338d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f40abce66d0" loc="78:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f40abce13a0" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f40ac338d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f40abce2d70" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f40abce1110" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f40ac338d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f40abce3e50" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f40ac338d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f40abce3870" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f40abce3bc0" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f40ac338d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f40abcdf810" loc="147:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f40ac338550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f40abcdf590" loc="147:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f40abcdcb90" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f40ac338550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f40abcdc5e0" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f40abcdc900" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f40ac338550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f40abce0600" loc="136:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f40abce0380" loc="136:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f40abcd92f0" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f40ac338930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f40abcdacf0" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f40abcd9060" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f40ac338930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f40abcd8190" loc="195:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f40ac338930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f40abcd5ad0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f40abcd5850" loc="59:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f40abcd2cd0" loc="71:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f40abcd2a50" loc="71:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f40abcd1020" loc="85:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f40abcd3ce0" loc="85:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f40abcca5e0" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f40abcca020" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f40abcca350" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f40abcc5bb0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f40abcc55b0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f40abcc58e0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f40abcc9d20" loc="112:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f40abcc8900" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f40abcc8680" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f40abcc6e00" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f40abcc6820" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f40abcc6b70" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f40abc59ab0" loc="113:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f40abc59830" loc="113:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f40abc57020" loc="138:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f40abc58d30" loc="138:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f40abc5dd70" loc="104:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f40abc58350" loc="130:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f40abc53410" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
              <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f40abc5ba90" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f40abc5bde0" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f40abc53130" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f40abbe6630" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f40abbe6020" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f40abbe63a0" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f40abbe8670" loc="15:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f40abbe7620" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f40abbe7020" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f40ac328720"/>
                <typename><typedef-ref name="message_t" ref="0x7f40ac327d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f40abbe7390" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f40abbc90e0" loc="95:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f40abbc98f0" loc="105:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f40abbc7790" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f40abbc7020" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f40abbd1120" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f40abbd0560" loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f40abbcd2a0" loc="94:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f40abbcd020" loc="94:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f40abbd0de0" loc="79:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f40abbd1c90" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f40abbd1a10" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f40abbcdb00" loc="100:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f40abbcf6e0" loc="85:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f40abbd9990" loc="71:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f40abbd8350" loc="81:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f40abbd9020" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f40abbdcc30" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f40abbd7020" loc="91:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f40abbd8c50" loc="91:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f40abbdbc60" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f40abbd4a60" loc="69:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f40abbd47e0" loc="69:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f40abbd35c0" loc="80:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f40abbd3340" loc="80:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f40aba9dc40" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f40aba9d670" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f40aba9d9b0" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f40aba98a70" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f40aba987f0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f40aba97890" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f40aba972c0" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f40aba97600" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f40aba99610" loc="65:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f40aba962c0" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f40aba94820" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f40aba94b60" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f40aba96020" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f40aba98020" loc="72:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f40aba9c610" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f40aba9bbd0" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f40aba9c020" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f40aba9c370" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f40aba755b0" loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f40aba75330" loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f40aba75df0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f40aba73cf0" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f40aba73700" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f40aba73a60" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f40aba71b50" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f40aba19270" loc="53:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f40aba19ba0" loc="61:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f40aba15070" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f40aba3d450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f40aba3d870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f40aba1d9c0" loc="120:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f40aba1e990" loc="97:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f40aba1e020" loc="88:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f40aba1d1f0" loc="102:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f40aba1b470" loc="128:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f40aba0e510" loc="65:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f40aba11cc0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f40aba052a0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f40aba05020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f40aba07780" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f40ab9e0af0" loc="213:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f40ab9ec790" loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f40ab9f8530" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f40aba6d3b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f40aba6dbf0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f40ab9f82b0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f40aba6d3b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f40aba6dbf0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f40ab9ee870" loc="123:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f40ab9f6a40" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f40aba68360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f40aba68ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f40ab9f67c0" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f40aba68360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f40aba68ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f40ab9e5e70" loc="180:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f40ab9e2480" loc="197:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f40ab9f6020" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f40aba6a290"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f40aba6aa20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f40ab9f5270" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f40aba68360"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f40aba68ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f40ab9f1020" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f40ab9f2d30" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f40ab9f2610" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f40ab9e5740" loc="179:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f40ab9f7780" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f40aba6a290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f40aba6aa20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f40ab9f7500" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f40aba6a290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f40aba6aa20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f40ab9f3420" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f40ab9e45d0" loc="181:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f40ab9f3e00" loc="90:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f40ab9f3b80" loc="90:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f40ab9f0910" loc="113:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f40ab9ee0e0" loc="118:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f40ab9e7840" loc="177:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f40ab9e9790" loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f40ab9ed7e0" loc="133:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f40ab9e5020" loc="178:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f40ab9ea020" loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f40ab9e4cf0" loc="182:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f40ab9f1800" loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f40aba76330"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f40aba6fa50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f40ab9e34c0" loc="187:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f40ab9e0350" loc="207:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f40ab9f5c10" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f40ab9f5990" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f40ace71520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f40ab9df4d0" loc="224:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f40ab9df250" loc="224:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f40ab9f8d10" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f40aba6d3b0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f40aba6dbf0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f40ab9ed020" loc="128:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f40ab9ea770" loc="153:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f40ab9e7020" loc="174:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f40aba3d450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f40aba3d870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f40ab9e8cf0" loc="174:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f40aba3d450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f40aba3d870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f40ab9e82a0" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f40aba50420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f40aba50840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f40ab9e8020" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f40aba50420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f40aba50840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f40ab9dfd90" loc="231:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f40ab9e3cb0" loc="192:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f40ab9f0070" loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f40ab9e2be0" loc="202:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f40ab9e9020" loc="158:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f40ab9ec020" loc="138:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f40ab967030" loc="95:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f40ab967880" loc="105:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f40ab8c1020" loc="90:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f40ab8c1880" loc="98:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f40ab8aa4a0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f40ab891900" loc="56:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f40ab88fa20" loc="73:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f40ab891070" loc="46:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f40ab88f1f0" loc="65:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f40ab88e390" loc="81:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f40ab884b60" loc="79:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f40ab88db40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f40ab8848e0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f40ab88db40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f40ab888b90" loc="53:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f40ab8856f0" loc="62:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f40ab88db40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f40ab885470" loc="62:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f40ab88db40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f40ab884030" loc="70:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f40ab88db40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f40ab8174b0" loc="62:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f40ab7b01e0" loc="43:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f40ab7b01e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f40ab7ae9e0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f40ab7b01e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f40ab7ad4a0" loc="97:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40ac80ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f40ab7b01e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f40ab7ad220" loc="97:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f40ab7b01e0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f40ace77c30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7f40ace77c30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f40ab7aa440" loc="108:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f40ab7b01e0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f40ab7aa1c0" loc="108:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f40ab7af270" loc="57:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f40ab7ae270" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f40ab7ac610" loc="88:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f40ab7b01e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f40ab7b0a90" loc="50:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f40ac815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f40ab7af9f0" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f40ace71160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f40ab786940" loc="49:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f40ab7866c0" loc="49:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
