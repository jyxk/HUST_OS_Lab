<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="65:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f95d5d9e150"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f95d5ff6df0"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f95d5ff6df0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f95d5e34590"/></to>
    </wire>
    <wire loc="67:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7f95d5db9020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f95d596d370"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f95d596d370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f95d5b0f610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7f95d5dab670"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f95d5967c90"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f95d5967c90"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f95d5b0f610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x7f95d5da6be0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f95d59606d0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f95d59606d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f95d5b0f610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f95d5d94a80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f95d5dc5de0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f95d5dc5de0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f95d5d80710"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f95d5ff1320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f95d53bfb20"/></to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f95d5ff1320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f95d4cfdca0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f95d5ff1320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f95d5849bc0"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f95d5ff1320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f95d53e9d70"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f95d5ff1320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f95d5b06400"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f95d5e34c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f95d64863a0"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f95d64863a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f95d6031140"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f95d5e276c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f95d5ff3300"/></to>
    </wire>
    <wire loc="48:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f95d5ff3300"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f95d5fed510"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f95d5e27dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f95d5ff1320"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f95d5fedc20"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f95d5fee910"/></to>
    </wire>
    <wire loc="46:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f95d5fee910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f95d5fce850"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f95d5fec380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f95d5fef6d0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f95d5feca60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f95d5d57020"/></to>
    </wire>
    <wire loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f95d5fce850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f95d5fb57e0"/></to>
    </wire>
    <wire loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f95d5fc5de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f95d5fb4020"/></to>
    </wire>
    <wire loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f95d61094c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f95d5fb3360"/></to>
    </wire>
    <wire loc="113:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f95d5f705a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f95d5eac6d0"/></to>
    </wire>
    <wire loc="126:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f95d5f5e020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f95d5ea5b30"/></to>
    </wire>
    <wire loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f95d5f67700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f95d5eb2160"/></to>
    </wire>
    <wire loc="149:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f95d5f4ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f95d5e8bcb0"/></to>
    </wire>
    <wire loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f95d5f6eaa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f95d5eb3480"/></to>
    </wire>
    <wire loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f95d5f51020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f95d5e8b020"/></to>
    </wire>
    <wire loc="170:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f95d5f48a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f95d5e74cb0"/></to>
    </wire>
    <wire loc="154:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f95d5f595a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f95d5e85220"/></to>
    </wire>
    <wire loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f95d5f71b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f95d5f039d0"/></to>
    </wire>
    <wire loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f95d5f4da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f95d5e9a2f0"/></to>
    </wire>
    <wire loc="134:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f95d5f533e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f95d5e9b610"/></to>
    </wire>
    <wire loc="133:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f95d5f5d5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f95d5e9c220"/></to>
    </wire>
    <wire loc="115:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f95d5f66700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f95d5eaa7a0"/></to>
    </wire>
    <wire loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f95d5f4aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f95d5e832f0"/></to>
    </wire>
    <wire loc="140:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f95d5f5cbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f95d5e956d0"/></to>
    </wire>
    <wire loc="114:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f95d5f6d890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f95d5eabac0"/></to>
    </wire>
    <wire loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f95d5f81060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f95d5f11540"/></to>
    </wire>
    <wire loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f95d5f51da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f95d5e84610"/></to>
    </wire>
    <wire loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f95d5f770c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f95d5eb4020"/></to>
    </wire>
    <wire loc="161:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f95d5f57a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f95d5e7e6d0"/></to>
    </wire>
    <wire loc="101:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f95d5f616d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f95d5ebaa90"/></to>
    </wire>
    <wire loc="142:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f95d5f4ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f95d5e937a0"/></to>
    </wire>
    <wire loc="100:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f95d5f69cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f95d5ebbde0"/></to>
    </wire>
    <wire loc="141:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f95d5f521f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f95d5e94ac0"/></to>
    </wire>
    <wire loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f95d5f49a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f95d5e7b7a0"/></to>
    </wire>
    <wire loc="147:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f95d5f5a0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f95d5e8db30"/></to>
    </wire>
    <wire loc="120:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f95d5f606c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f95d5f093e0"/></to>
    </wire>
    <wire loc="162:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f95d5f50b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f95d5e7cac0"/></to>
    </wire>
    <wire loc="128:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f95d5f4ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f95d5ea3cb0"/></to>
    </wire>
    <wire loc="169:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f95d5f4fa20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f95d5e74020"/></to>
    </wire>
    <wire loc="127:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f95d5f54570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f95d5ea3020"/></to>
    </wire>
    <wire loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f95d5f55020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f95d5e76b30"/></to>
    </wire>
    <wire loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f95d5f0f450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f95d5f10d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f95d5f0faa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f95d5e6faa0"/></to>
    </wire>
    <wire loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f95d5f0e120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f95d5e6b260"/></to>
    </wire>
    <wire loc="102:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f95d5eb9930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f95d5f11540"/></to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f95d5eb7020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f95d5f10d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f95d5eb1020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f95d5f11540"/></to>
    </wire>
    <wire loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f95d5eb07a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f95d5f10d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f95d5ea9610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f95d5f11540"/></to>
    </wire>
    <wire loc="117:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f95d5ea8c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f95d5f10d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f95d5f072f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f95d5f08bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f95d5f07940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f95d5e6b9f0"/></to>
    </wire>
    <wire loc="123:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f95d5f06020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f95d5e6a240"/></to>
    </wire>
    <wire loc="129:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f95d5ea2b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f95d5f093e0"/></to>
    </wire>
    <wire loc="130:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f95d5ea02f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f95d5f08bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f95d5e99160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f95d5f093e0"/></to>
    </wire>
    <wire loc="137:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f95d5e987a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f95d5f08bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f95d5e92610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f95d5f093e0"/></to>
    </wire>
    <wire loc="144:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f95d5e91c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f95d5f08bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f95d5e8ab40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f95d5f093e0"/></to>
    </wire>
    <wire loc="151:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f95d5e882f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f95d5f08bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f95d5e82160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f95d5f093e0"/></to>
    </wire>
    <wire loc="158:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f95d5e817a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f95d5f08bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f95d5e7a610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f95d5f093e0"/></to>
    </wire>
    <wire loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f95d5e79c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f95d5f08bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f95d5e73b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f95d5f093e0"/></to>
    </wire>
    <wire loc="172:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f95d5e712f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f95d5f08bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f95d64f54f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f95d602f040"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f95d602b490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f95d641d3b0"/></to>
    </wire>
    <wire loc="68:BlinkC.nc">
      <from><interface-ref name="computeTask" scoped="" ref="0x7f95d5d92dd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f95d64f54f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f95d5d57020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f95d5d80110"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f95d5d78ce0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f95d5d81970"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f95d5d81970"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f95d5b41020"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f95d5d7c020"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f95d5d5ab60"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f95d5d5ab60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f95d5b2cb90"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f95d5d77340"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f95d5d59e70"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f95d5d59e70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f95d5b27710"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f95d5b302f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f95d5d01200"/></to>
    </wire>
    <wire loc="486:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f95d5d01200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bdd740"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f95d5b2bde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f95d5cff200"/></to>
    </wire>
    <wire loc="487:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f95d5cff200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bd8100"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f95d5b26930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f95d5cfd200"/></to>
    </wire>
    <wire loc="488:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f95d5cfd200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bd4d10"/></to>
    </wire>
    <wire loc="442:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f95d5d42020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c76100"/></to>
    </wire>
    <wire loc="455:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f95d5d2e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c47d10"/></to>
    </wire>
    <wire loc="531:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f95d5ce4560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c39d10"/></to>
    </wire>
    <wire loc="551:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f95d5cbf570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bad100"/></to>
    </wire>
    <wire loc="532:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f95d5ce2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c34740"/></to>
    </wire>
    <wire loc="460:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f95d5d29020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c3d100"/></to>
    </wire>
    <wire loc="473:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f95d5d15200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c0de00"/></to>
    </wire>
    <wire loc="497:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f95d5cf0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bb7d10"/></to>
    </wire>
    <wire loc="535:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f95d5cdc580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c2ad10"/></to>
    </wire>
    <wire loc="545:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f95d5ccc570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bca100"/></to>
    </wire>
    <wire loc="557:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f95d5cb7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5ba9d10"/></to>
    </wire>
    <wire loc="445:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f95d5d3c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c68100"/></to>
    </wire>
    <wire loc="536:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f95d5cda580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c25740"/></to>
    </wire>
    <wire loc="450:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f95d5d38020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c5f740"/></to>
    </wire>
    <wire loc="463:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f95d5d23020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c2e100"/></to>
    </wire>
    <wire loc="476:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f95d5d0f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bffd10"/></to>
    </wire>
    <wire loc="489:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f95d5cfa200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bcf740"/></to>
    </wire>
    <wire loc="500:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f95d5cea200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5ba9d10"/></to>
    </wire>
    <wire loc="440:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f95d5d46020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c81d10"/></to>
    </wire>
    <wire loc="453:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f95d5d32020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c50860"/></to>
    </wire>
    <wire loc="466:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f95d5d1d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c20100"/></to>
    </wire>
    <wire loc="530:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f95d5ce6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c39d10"/></to>
    </wire>
    <wire loc="548:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f95d5cc5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bbb100"/></to>
    </wire>
    <wire loc="555:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f95d5cb9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5ba9d10"/></to>
    </wire>
    <wire loc="541:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f95d5cd2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5be2d10"/></to>
    </wire>
    <wire loc="471:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f95d5d19020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c17a60"/></to>
    </wire>
    <wire loc="484:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f95d5d05200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5be6100"/></to>
    </wire>
    <wire loc="495:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f95d5cf4200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bc0740"/></to>
    </wire>
    <wire loc="549:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f95d5cc3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bb7d10"/></to>
    </wire>
    <wire loc="538:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f95d5cd8570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bf1d10"/></to>
    </wire>
    <wire loc="443:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f95d5d40020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c72d10"/></to>
    </wire>
    <wire loc="456:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f95d5d2c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c42740"/></to>
    </wire>
    <wire loc="493:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f95d5cf8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bca100"/></to>
    </wire>
    <wire loc="461:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f95d5d27020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c39d10"/></to>
    </wire>
    <wire loc="474:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f95d5d13200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c08740"/></to>
    </wire>
    <wire loc="498:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f95d5cee200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bb2740"/></to>
    </wire>
    <wire loc="540:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f95d5cd4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5be6100"/></to>
    </wire>
    <wire loc="438:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f95d5d530a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c8a6d0"/></to>
    </wire>
    <wire loc="451:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f95d5d36020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c5a100"/></to>
    </wire>
    <wire loc="464:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f95d5d21020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c2ad10"/></to>
    </wire>
    <wire loc="477:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f95d5d0d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bfa740"/></to>
    </wire>
    <wire loc="542:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f95d5cd0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c20100"/></to>
    </wire>
    <wire loc="546:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f95d5cc9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bc6d10"/></to>
    </wire>
    <wire loc="552:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f95d5cbd570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5ba9d10"/></to>
    </wire>
    <wire loc="482:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f95d5d09200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bf1d10"/></to>
    </wire>
    <wire loc="543:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f95d5cce580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c1cd10"/></to>
    </wire>
    <wire loc="441:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f95d5d44020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c7b740"/></to>
    </wire>
    <wire loc="454:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f95d5d30020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c4b270"/></to>
    </wire>
    <wire loc="467:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f95d5d1b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c1cd10"/></to>
    </wire>
    <wire loc="539:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f95d5cd6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bec740"/></to>
    </wire>
    <wire loc="550:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f95d5cc1570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bb2740"/></to>
    </wire>
    <wire loc="472:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f95d5d17200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c12460"/></to>
    </wire>
    <wire loc="485:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f95d5d03200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5be2d10"/></to>
    </wire>
    <wire loc="496:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f95d5cf2200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bbb100"/></to>
    </wire>
    <wire loc="444:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f95d5d3e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c6d740"/></to>
    </wire>
    <wire loc="494:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f95d5cf6200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bc6d10"/></to>
    </wire>
    <wire loc="449:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f95d5d3a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c64d10"/></to>
    </wire>
    <wire loc="462:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f95d5d25020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c34740"/></to>
    </wire>
    <wire loc="475:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f95d5d11200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c03100"/></to>
    </wire>
    <wire loc="499:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f95d5cec200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bad100"/></to>
    </wire>
    <wire loc="439:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f95d5d48020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c85100"/></to>
    </wire>
    <wire loc="452:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f95d5d34020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c55d10"/></to>
    </wire>
    <wire loc="465:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f95d5d1f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c25740"/></to>
    </wire>
    <wire loc="478:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f95d5d0b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bf5100"/></to>
    </wire>
    <wire loc="534:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f95d5cde560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c2e100"/></to>
    </wire>
    <wire loc="547:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f95d5cc7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bc0740"/></to>
    </wire>
    <wire loc="533:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f95d5ce0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c2e100"/></to>
    </wire>
    <wire loc="483:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f95d5d07200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bec740"/></to>
    </wire>
    <wire loc="554:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f95d5cbb570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bad100"/></to>
    </wire>
    <wire loc="558:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f95d5cb5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5bcf740"/></to>
    </wire>
    <wire loc="529:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f95d5ce81f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f95d5c3d100"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f95d5b0f610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f95d5b051d0"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f95d5b051d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f95d598e150"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f95d5b06400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f95d5a09020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f95d5afca80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f95d5980790"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f95d5a09020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f95d4ee0380"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f95d5988640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f95d59dd2f0"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f95d59d8850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f95d5a09870"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f95d5a09870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f95d4ed9020"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f95d597fa60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f95d5a82900"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f95d5a82900"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f95d5a66cf0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f95d4ee0380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f95d4ec5a30"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f95d4ed3780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f95d4ee0bd0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f95d4ee0bd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f95d4ec4340"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f95d4ed63d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f95d5a82900"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f95d4ec04c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f95d4eca7b0"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f95d4eca7b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f95d5add8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f95d4ebfa90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f95d4ec9da0"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f95d4ec9da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f95d5ada560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f95d4ebeda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f95d4ec70c0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f95d4ec70c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f95d5ad8020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f95d5add8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f95d5f606c0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f95d5ada560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f95d5f5e020"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f95d5ad8020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f95d5f54570"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f95d5add8b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f95d5f606c0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f95d5ada560"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f95d5f5cbe0"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f95d5ad8020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f95d5f521f0"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f95d5add8b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f95d5f606c0"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f95d5ada560"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f95d5f5a0c0"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f95d5ad8020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f95d5f51020"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f95d5add8b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f95d5f606c0"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f95d5ada560"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f95d5f595a0"/></to>
    </wire>
    <wire loc="76:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f95d5ad8020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f95d5f51da0"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f95d5add8b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f95d5f606c0"/></to>
    </wire>
    <wire loc="79:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f95d5ada560"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f95d5f57a50"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f95d5ad8020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f95d5f50b80"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f95d5add8b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f95d5f606c0"/></to>
    </wire>
    <wire loc="83:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f95d5ada560"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f95d5f55020"/></to>
    </wire>
    <wire loc="84:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f95d5ad8020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f95d5f4fa20"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f95d5a480f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f95d5a80990"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f95d5a80990"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f95d5a7ab80"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f95d5a6bc50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f95d5f606c0"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f95d59d49c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f95d64f54f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f95d5983a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f95d64f54f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f95d53e4020"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f95d540c930"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f95d53df100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f95d5413020"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f95d5413020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f95d4e26750"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f95d53dfd50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f95d5413c30"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f95d5413c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f95d58ae7e0"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f95d53c27e0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f95d53e25f0"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f95d58ae7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f95d584e400"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f95d54128b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f95d58ad470"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f95d58ad470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f95d5850cb0"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f95d5410020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f95d58abb20"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f95d58abb20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f95d584d060"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f95d4e25460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f95d590bcf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f95d4e240e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f95d58ad470"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f95d590bcf0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f95d58bf580"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f95d58bd400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f95d58b43f0"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f95d58b43f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f95d58a47d0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f95d58bc060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f95d58ad470"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f95d58bb720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f95d58ae7e0"/></to>
    </wire>
    <wire loc="169:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f95d58ba480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f95d64f54f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f95d58bac60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f95d64f54f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f95d58af3b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f95d58462f0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f95d58462f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f95d5836450"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f95d58ae1d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f95d58506c0"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f95d5849bc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f95d5837d60"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f95d5843940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f95d58a8620"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f95d584d9f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f95d5845e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f95d584b760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f95d5845320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f95d5843020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f95d542b8d0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f95d5845e10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f95d5703830"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f95d5845320"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f95d5703110"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f95d5702760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f95d5843020"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f95d582edc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f95d5843940"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f95d5700590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f95d5843940"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f95d56f7cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f95d5843940"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f95d57010e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f95d582cad0"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f95d57019d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f95d582f4a0"/></to>
    </wire>
    <wire loc="77:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f95d5826e30"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f95d56fcb70"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f95d5821e00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f95d56d1080"/></to>
    </wire>
    <wire loc="17:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f95d56d1080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f95d543d0c0"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f95d56eed20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f95d56d1890"/></to>
    </wire>
    <wire loc="13:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f95d56d1890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f95d5444440"/></to>
    </wire>
    <wire loc="332:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f95d57cee40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f95d64f54f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f95d5806d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f95d64f54f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f95d57d1400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f95d64f54f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f95d57ca0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f95d64f54f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f95d56ffc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f95d64f54f0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f95d56fe480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f95d64f54f0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f95d56cf020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f95d5443440"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f95d5443440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f95d5665210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f95d5444440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f95d5668b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f95d5441020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f95d543d920"/></to>
    </wire>
    <wire loc="19:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f95d543c020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f95d5445020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f95d5445020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f95d566b320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f95d5445c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f95d4d67020"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f95d4d67020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f95d550ed50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f95d5662600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f95d5441020"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f95d4d61440"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f95d5666dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f95d5663370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f95d4d68340"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f95d4d68340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f95d550fa60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f95d565ebe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f95d4d62c10"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f95d4d62c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f95d5513ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f95d5666dd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f95d55d9e70"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f95d5665210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f95d55d7890"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f95d5668b50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f95d55d8790"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f95d566b320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f95d55d90d0"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f95d55d43e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f95d5662600"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f95d55d55b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f95d5663370"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f95d55cf5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f95d565ebe0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f95d55d4a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f95d55c2550"/></to>
    </wire>
    <wire loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f95d55c2550"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f95d55b7cc0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f95d55ce020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f95d552a110"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f95d552a110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f95d5a80990"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f95d55cc120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f95d5dc5de0"/></to>
    </wire>
    <wire loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f95d55bb080"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f95d55b2910"/></to>
    </wire>
    <wire loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f95d55bfca0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f95d55b7410"/></to>
    </wire>
    <wire loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f95d55b1210"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f95d5cd6580"/></to>
    </wire>
    <wire loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f95d55af1f0"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f95d5cd4580"/></to>
    </wire>
    <wire loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f95d55ad1f0"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f95d5cd2580"/></to>
    </wire>
    <wire loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f95d55ab1f0"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f95d5cce580"/></to>
    </wire>
    <wire loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f95d55a91f0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f95d5cd0580"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f95d4d66020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f95d55c2550"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f95d4d677c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f95d550d590"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f95d550d590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f95d5478060"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f95d550c370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f95d4d61440"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f95d550ed50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f95d547bbf0"/></to>
    </wire>
    <wire loc="106:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f95d547bbf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f95d4cf83a0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f95d5513ce0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f95d55075c0"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f95d550fa60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f95d547ce60"/></to>
    </wire>
    <wire loc="105:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f95d547ce60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f95d4cf9540"/></to>
    </wire>
    <wire loc="108:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f95d5478060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f95d4cf78b0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f95d54f5690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f95d55bb080"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f95d5478930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f95d550c370"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f95d54f44b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f95d5478060"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f95d545e9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f95d547a400"/></to>
    </wire>
    <wire loc="107:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f95d547a400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f95d4cf8b20"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f95d5473b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f95d55bfca0"/></to>
    </wire>
    <wire loc="109:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f95d4cf6210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f95d5478930"/></to>
    </wire>
    <wire loc="111:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f95d4cf69d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f95d4cfc330"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f95d4cf4c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f95d64f54f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f95d4cc33a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f95d5473b20"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f95d4cc3b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f95d545e400"/></to>
    </wire>
    <wire loc="84:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f95d4cc20f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f95d545e9d0"/></to>
    </wire>
    <wire loc="85:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f95d4cc2d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f95d545d720"/></to>
    </wire>
    <wire loc="114:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f95d53d81d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f95d64f54f0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f95d53bb300"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f95d53c27e0"/></to>
    </wire>
    <wire loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f95d53b30f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f95d5ff6df0"/></to>
    </wire>
    <wire loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f95d53b3810"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f95d58af3b0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/jyxk/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/jyxk/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/jyxk/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BlinkC" loc="51:BlinkC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/jyxk/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5e1b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f95d5e1b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5e1b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f95d5e1b9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5e1b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f95d5e1b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5e1b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f95d5e1b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f95d5dcf550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BigQueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f95d5f43890" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f95d5f43c30" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f95d5f42020" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f95d5f423a0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f95d5f42720" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f95d5f42a90" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f95d5f42e20" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f95d5f40200" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f95d5f405d0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f95d5f05e80" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f95d5f01270" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f95d5cb0a10" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f95d5cb0dc0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f95d5caf1a0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f95d5caf550" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f95d5caf8c0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f95d5abdcc0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f95d5abdcc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f95d5a7ba40" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f95d5a7ba40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f95d5a65570" loc="55:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f95d5a65570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f95d5a65d40" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f95d5a65d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f95d5a63160" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f95d5a63160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f95d5a63940" loc="58:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f95d5a63940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f95d5a63d10" loc="59:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f95d5a62540" loc="60:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f95d5a62540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f95d5a886e0" loc="52:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f95d5a886e0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f95d5a41020" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f95d5a41020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f95d5a41410" loc="54:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f95d5a41410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f95d5a41bf0" loc="55:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f95d5a41bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f95d5a3f020" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f95d5a05cd0" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f95d5a05cd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f95d59cf230" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f95d59cf230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f95d59cf560" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f95d5981de0" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f95d5981de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f95d59578c0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f95d5dcf550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f95d59270d0" loc="43:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f95d5dcf550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f95d59030d0" loc="45:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f95d54ee020" loc="89:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f95d54e20d0" loc="42:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f95d54c7800" loc="52:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BigQueueC" loc="42:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f95d540e500" loc="42:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f95d540e500"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f95d540e890" loc="42:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f95d5ff1320" loc="58:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f95d5ff1320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5ff16a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f95d5ff6df0" loc="57:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f95d5ff6df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f95d5ff51c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f95d5ff3300" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f95d5ff3300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5ff3680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f95d5fec380" loc="6:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f95d5fec380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5fec700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f95d5fed510" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f95d5fed510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5fed890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f95d5fedc20" loc="5:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f95d5fedc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5fec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f95d5feca60" loc="7:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f95d5feca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5fecde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f95d5fef6d0" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f95d5fef6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5fefa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f95d5fee910" loc="39:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f95d5fee910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5feec90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f95d5fc5de0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f95d5fc5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f95d5fcac70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f95d5fca310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f95d5fca4a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f95d5fca630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f95d5fca180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f95d5fca7c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f95d5fca950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f95d5fcaae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f95d5fce850" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f95d5fce850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5fcebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f95d5fb4020" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f95d5fb4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f95d5fb3020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f95d5fb4530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f95d5fb46c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f95d5fb4850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f95d5fb43a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f95d5fb49e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f95d5fb4b70"/>
        <function-ref name="initClocks" scoped="" ref="0x7f95d5fb4d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f95d5fb3360" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f95d5fb3360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f95d5fb36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f95d5fb57e0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f95d5fb57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5fb5b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f95d5f705a0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f95d5f705a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5f70920"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5f70ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5f70c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5f70dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5f6f020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5f6f1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5f6f340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5f6f4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5f6f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f95d5f5e020" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f95d5f5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5f5e3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5f5e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5f5e6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5f5e850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5f5e9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5f5eb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5f5ed00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5f5d020"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5f5d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f95d5f67700" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f95d5f67700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f67a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5f67c10"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5f67da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5f66020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5f661b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5f66340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f95d5f4ba20" loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f95d5f4ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f4bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5f4a020"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5f4a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5f4a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5f4a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5f4a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f95d5f6eaa0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f95d5f6eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f6ee20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5f6d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5f6d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5f6d340"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5f6d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f95d5f51020" loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f95d5f51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f513a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5f51530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5f516c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5f51850"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5f519e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f95d5f48a20" loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f95d5f48a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f48da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5f47020"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5f471b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5f47340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5f474d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5f47660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f95d5f595a0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f95d5f595a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5f59920"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5f59ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5f59c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5f59dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5f57020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5f571b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5f57340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5f574d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5f57660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f95d5f71b10" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f95d5f71b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5f78020"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5f781b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5f78340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5f784d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5f78660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5f787f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5f78980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5f78b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5f78ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f95d5f4da20" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f95d5f4da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f4dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5f4c020"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5f4c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5f4c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5f4c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5f4c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f95d5f533e0" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f95d5f533e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f53760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5f538f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5f53a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5f53c10"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5f53da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f95d5f5d5a0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f95d5f5d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5f5da20"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5f5dbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5f5dd40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5f5c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5f5c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5f5c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5f5c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5f5c660"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5f5c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f95d5f66700" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f95d5f66700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f66a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5f66c10"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5f66da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5f60020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5f601b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5f60340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f95d5f4aa20" loc="69:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f95d5f4aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f4ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5f49020"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5f491b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5f49340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5f494d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5f49660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f95d5f5cbe0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f95d5f5cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5f5b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5f5b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5f5b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5f5b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5f5b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5f5b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5f5b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5f5bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5f5bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f95d5f6d890" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f95d5f6d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f6dc10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5f6dda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5f68020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5f681b0"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5f68340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f95d5f81060" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f95d5f81060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d5f813e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d5f81570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5f81700"/>
        <function-ref name="get" scoped="" ref="0x7f95d5f81890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5f81a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5f81bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d5f81d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5f80020"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5f801b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d5f80340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d5f804d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f95d5f51da0" loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f95d5f51da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f50180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5f50310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5f504a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5f50630"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5f507c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f95d5f770c0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f95d5f770c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5f77440"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5f775d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5f77760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5f778f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5f77a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5f77c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5f77da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5f70020"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5f701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f95d5f57a50" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f95d5f57a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5f57dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5f56020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5f561b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5f56340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5f564d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5f56660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5f567f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5f56980"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5f56b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f95d5f616d0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f95d5f616d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f61a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5f61be0"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5f61d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5f67020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5f671b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5f67340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f95d5f4ca20" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f95d5f4ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f4cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5f4b020"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5f4b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5f4b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5f4b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5f4b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f95d5f69cf0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f95d5f69cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f6e0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5f6e230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5f6e3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5f6e550"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5f6e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f95d5f521f0" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f95d5f521f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f52570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5f52700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5f52890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5f52a20"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5f52bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f95d5f49a20" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f95d5f49a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f49da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5f48020"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5f481b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5f48340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5f484d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5f48660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f95d5f5a0c0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f95d5f5a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5f5a440"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5f5a5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5f5a760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5f5a8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5f5aa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5f5ac10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5f5ada0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5f59020"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5f591b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f95d5f606c0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f95d5f606c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d5f60a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d5f60bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5f60d60"/>
        <function-ref name="get" scoped="" ref="0x7f95d5f5f020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5f5f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5f5f340"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d5f5f4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5f5f660"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5f5f7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d5f5f980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d5f5fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f95d5f50b80" loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f95d5f50b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f4f020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5f4f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5f4f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5f4f4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5f4f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f95d5f4ea20" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f95d5f4ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f4eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5f4d020"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5f4d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5f4d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5f4d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5f4d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f95d5f4fa20" loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f95d5f4fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f4e020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5f4e1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5f4e340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5f4e4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5f4e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f95d5f54570" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f95d5f54570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5f548f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5f54a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5f54c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5f54da0"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5f53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f95d5f55020" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f95d5f55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5f553a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5f55530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5f556c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5f55850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5f559e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5f55b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5f55d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5f54020"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5f541b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f95d5f0faa0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f95d5f0faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5f0fe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f95d5f0f450" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f95d5f0f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5f0f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f95d5f0e120" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f95d5f0e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5f0e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f95d5f10d80" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f95d5f10d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5f0f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f95d5f11540" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f95d5f11540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d5f118c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d5f11a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5f11be0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5f11d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5f10020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5f101b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d5f10340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5f104d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5f10660"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d5f107f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d5f10980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f95d5f07940" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f95d5f07940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5f07cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f95d5f072f0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f95d5f072f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5f07670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f95d5f06020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f95d5f06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5f063a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f95d5f08bf0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f95d5f08bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5f07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f95d5f093e0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f95d5f093e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d5f09760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d5f098f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5f09a80"/>
        <function-ref name="get" scoped="" ref="0x7f95d5f09c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5f09da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5f08020"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d5f081b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5f08340"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5f084d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d5f08660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d5f087f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f95d5ebaa90" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f95d5ebaa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5ebae10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5eb9020"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5eb91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5eb9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5eb94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5eb9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f95d5f039d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f95d5f039d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5f03d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5ebb020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5ebb1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5ebb340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5ebb4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5ebb660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5ebb7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5ebb980"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5ebbb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f95d5eb7020" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f95d5eb7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5eb73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f95d5ebbde0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f95d5ebbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5eba180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5eba310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5eba4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5eba630"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5eba7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f95d5eb9930" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f95d5eb9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d5eb9cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d5eb9e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5eb8020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5eb81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5eb8340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5eb84d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d5eb8660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5eb87f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5eb8980"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d5eb8b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d5eb8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f95d5eb2160" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f95d5eb2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5eb24e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5eb2670"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5eb2800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5eb2990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5eb2b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5eb2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f95d5eb4020" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f95d5eb4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5eb43a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5eb4530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5eb46c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5eb4850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5eb49e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5eb4b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5eb4d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5eb3020"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5eb31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f95d5eb07a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f95d5eb07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5eb0b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f95d5eb3480" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f95d5eb3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5eb3800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5eb3990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5eb3b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5eb3cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5eb3e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f95d5eb1020" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f95d5eb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d5eb13a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d5eb1530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5eb16c0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5eb1850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5eb19e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5eb1b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d5eb1d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5eb0020"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5eb01b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d5eb0340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d5eb04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f95d5eaa7a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f95d5eaa7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5eaab20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5eaacb0"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5eaae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5ea9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5ea91b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5ea9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f95d5eac6d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f95d5eac6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5eaca50"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5eacbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5eacd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5eab020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5eab1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5eab340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5eab4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5eab660"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5eab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f95d5ea8c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f95d5ea8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5ea7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f95d5eabac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f95d5eabac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5eabe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5eaa020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5eaa1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5eaa340"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5eaa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f95d5ea9610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f95d5ea9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d5ea9990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d5ea9b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5ea9cb0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5ea9e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5ea8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5ea81b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d5ea8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5ea84d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5ea8660"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d5ea87f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d5ea8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f95d5ea3cb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f95d5ea3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5ea20a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5ea2230"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5ea23c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5ea2550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5ea26e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5ea2870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f95d5ea5b30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f95d5ea5b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5ea4020"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5ea41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5ea4340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5ea44d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5ea4660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5ea47f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5ea4980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5ea4b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5ea4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f95d5ea02f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f95d5ea02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5ea0670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f95d5ea3020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f95d5ea3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5ea33a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5ea3530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5ea36c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5ea3850"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5ea39e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f95d5ea2b40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f95d5ea2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d5ea1020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d5ea11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5ea1340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5ea14d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5ea1660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5ea17f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d5ea1980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5ea1b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5ea1ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d5ea1e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d5ea0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f95d5e9a2f0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f95d5e9a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5e9a670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5e9a800"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5e9a990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5e9ab20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5e9acb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5e9ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f95d5e9c220" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f95d5e9c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5e9c5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5e9c730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5e9c8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5e9ca50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5e9cbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5e9cd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5e9b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5e9b1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5e9b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f95d5e987a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f95d5e987a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5e98b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f95d5e9b610" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f95d5e9b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5e9b990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5e9bb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5e9bcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5e9be40"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5e9a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f95d5e99160" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f95d5e99160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d5e994e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d5e99670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5e99800"/>
        <function-ref name="get" scoped="" ref="0x7f95d5e99990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5e99b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5e99cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d5e99e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5e98020"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5e981b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d5e98340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d5e984d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f95d5e937a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f95d5e937a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5e93b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5e93cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5e93e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5e92020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5e921b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5e92340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f95d5e956d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f95d5e956d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5e95a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5e95be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5e95d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5e94020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5e941b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5e94340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5e944d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5e94660"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5e947f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f95d5e91c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f95d5e91c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5e90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f95d5e94ac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f95d5e94ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5e94e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5e93020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5e931b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5e93340"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5e934d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f95d5e92610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f95d5e92610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d5e92990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d5e92b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5e92cb0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5e92e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5e91020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5e911b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d5e91340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5e914d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5e91660"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d5e917f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d5e91980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f95d5e8bcb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f95d5e8bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5e8a0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5e8a230"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5e8a3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5e8a550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5e8a6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5e8a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f95d5e8db30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f95d5e8db30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5e8c020"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5e8c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5e8c340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5e8c4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5e8c660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5e8c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5e8c980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5e8cb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5e8cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f95d5e882f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f95d5e882f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5e88670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f95d5e8b020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f95d5e8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5e8b3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5e8b530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5e8b6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5e8b850"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5e8b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f95d5e8ab40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f95d5e8ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d5e89020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d5e891b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5e89340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5e894d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5e89660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5e897f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d5e89980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5e89b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5e89ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d5e89e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d5e88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f95d5e832f0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f95d5e832f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5e83670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5e83800"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5e83990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5e83b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5e83cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5e83e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f95d5e85220" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f95d5e85220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5e855a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5e85730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5e858c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5e85a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5e85be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5e85d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5e84020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5e841b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5e84340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f95d5e817a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f95d5e817a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5e81b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f95d5e84610" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f95d5e84610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5e84990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5e84b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5e84cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5e84e40"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5e83020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f95d5e82160" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f95d5e82160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d5e824e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d5e82670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5e82800"/>
        <function-ref name="get" scoped="" ref="0x7f95d5e82990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5e82b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5e82cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d5e82e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5e81020"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5e811b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d5e81340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d5e814d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f95d5e7b7a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f95d5e7b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5e7bb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5e7bcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5e7be40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5e7a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5e7a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5e7a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f95d5e7e6d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f95d5e7e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5e7ea50"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5e7ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5e7ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5e7c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5e7c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5e7c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5e7c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5e7c660"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5e7c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f95d5e79c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f95d5e79c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5e78020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f95d5e7cac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f95d5e7cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5e7ce40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5e7b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5e7b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5e7b340"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5e7b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f95d5e7a610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f95d5e7a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d5e7a990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d5e7ab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5e7acb0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5e7ae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5e79020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5e791b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d5e79340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5e794d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5e79660"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d5e797f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d5e79980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f95d5e74cb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f95d5e74cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5e730a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f95d5e73230"/>
        <function-ref name="captured" scoped="" ref="0x7f95d5e733c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5e73550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5e736e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f95d5e73870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f95d5e76b30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f95d5e76b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5e75020"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5e751b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5e75340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5e754d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5e75660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5e757f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5e75980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5e75b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5e75ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f95d5e712f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f95d5e712f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5e71670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f95d5e74020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f95d5e74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5e743a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5e74530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5e746c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5e74850"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5e749e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f95d5e73b40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f95d5e73b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d5e72020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d5e721b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5e72340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5e724d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5e72660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5e727f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d5e72980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5e72b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5e72ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d5e72e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d5e71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f95d5e6a240" loc="7:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f95d5e6a240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5e6a5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f95d5e6faa0" loc="4:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f95d5e6faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5e6fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f95d5e6b260" loc="5:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f95d5e6b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5e6b5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f95d5e6b9f0" loc="6:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f95d5e6b9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d5e6bd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f95d61094c0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f95d61094c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f95d6109840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f95d641d3b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f95d641d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f95d641d730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f95d641d8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f95d641da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f95d6245be0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f95d6245be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f95d6381020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f95d5fccb50" loc="39:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f95d5fccb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f95d5e33b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f95d5e331b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f95d5e33340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f95d5e334d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f95d5e33020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f95d5e33660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f95d5e337f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f95d5e33980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f95d5e27dc0" loc="60:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f95d5e27dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5e26180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f95d5e34590" loc="57:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f95d5e34590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f95d5e34910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f95d5e276c0" loc="59:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f95d5e276c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5e27a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f95d5e34c00" loc="58:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f95d5e34c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5e27020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f95d5e271b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f95d5e27340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f95d64f54f0" loc="48:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f95d64f54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f95d64f5870"/>
        <function-ref name="runTask" scoped="" ref="0x7f95d64f5a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f95d64863a0" loc="47:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f95d64863a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d6486720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f95d64868b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f95d6486a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f95d602f040" loc="56:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f95d602f040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f95d602f3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f95d602f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f95d602b490" loc="57:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f95d602b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f95d602b810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f95d602b9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f95d602bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f95d6031140" loc="55:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f95d6031140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d60314c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f95d6031650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f95d60317e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x7f95d5db9020" loc="53:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer0" scoped="" ref="0x7f95d5db9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f95d5dac630"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5db8a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f95d5dad920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f95d5dad4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f95d5dab020"/>
        <function-ref name="gett0" scoped="" ref="0x7f95d5dacab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f95d5dad020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f95d5db9c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f95d5dac020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f95d5db8110"/>
        <function-ref name="stop" scoped="" ref="0x7f95d5db85e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f95d5d9e150" loc="57:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f95d5d9e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f95d5d9e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="computeTask" ref="0x7f95d5d92dd0" loc="68:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="computeTask" scoped="" ref="0x7f95d5d92dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f95d5d91180"/>
        <function-ref name="runTask" scoped="" ref="0x7f95d5d91310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7f95d5dab670" loc="54:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x7f95d5dab670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f95d5da7c40"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5da81e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f95d5da7020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f95d5da8ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f95d5da6590"/>
        <function-ref name="gett0" scoped="" ref="0x7f95d5da6110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f95d5da8660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f95d5daa390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f95d5da7630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f95d5daa860"/>
        <function-ref name="stop" scoped="" ref="0x7f95d5daad30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f95d5d94a80" loc="56:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f95d5d94a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f95d5d94e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f95d5d9f020"/>
        <function-ref name="led1On" scoped="" ref="0x7f95d5d9f1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f95d5d9f340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f95d5d9f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d9f660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f95d5d9f7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f95d5d9fe30"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d9f980"/>
        <function-ref name="led0On" scoped="" ref="0x7f95d5d9fb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f95d5d9fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x7f95d5da6be0" loc="55:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer2" scoped="" ref="0x7f95d5da6be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f95d5da1110"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5da36a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f95d5da24a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f95d5da2020"/>
        <function-ref name="getdt" scoped="" ref="0x7f95d5da1a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f95d5da1590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f95d5da3b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f95d5da5860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f95d5da2ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f95d5da5d30"/>
        <function-ref name="stop" scoped="" ref="0x7f95d5da3220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f95d5dc5de0" loc="46:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f95d5dc5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f95d5d84180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f95d5d84310"/>
        <function-ref name="led1On" scoped="" ref="0x7f95d5d844a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f95d5d84630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f95d5d847c0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d84950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f95d5d84ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f95d5d831b0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d84c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f95d5d84e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f95d5d83020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f95d5d78ce0" loc="50:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f95d5d78ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d7d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d7d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d7d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d7d550"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d7d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d7d870"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d7da00"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d7db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f95d5d80110" loc="46:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f95d5d80110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5d80490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f95d5d7c020" loc="51:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f95d5d7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d7c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d7c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d7c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d7c850"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d7c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d7cb70"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d7cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d77020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f95d5d80710" loc="47:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f95d5d80710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f95d5d80a90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f95d5d80c20"/>
        <function-ref name="led1On" scoped="" ref="0x7f95d5d80db0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f95d5d7f020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f95d5d7f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d7f340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f95d5d7f4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f95d5d7fb10"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d7f660"/>
        <function-ref name="led0On" scoped="" ref="0x7f95d5d7f7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f95d5d7f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f95d5d77340" loc="52:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f95d5d77340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d776c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d77850"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d779e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d77b70"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d77d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d76020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d761b0"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d76340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f95d5d81970" loc="41:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f95d5d81970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d81cf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d81e80"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d5a030"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d5a1c0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d5a350"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d5a4e0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d5a670"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d5a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f95d5d5ab60" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f95d5d5ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d59020"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d591b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d59340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d594d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d59660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d597f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d59980"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d59b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f95d5d57020" loc="44:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f95d5d57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5d573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f95d5d59e70" loc="43:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f95d5d59e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d58220"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d583b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d58540"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d586d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d58860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d589f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d58b80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d58d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f95d5d42020" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f95d5d42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d423a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d42530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d426c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d42850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d429e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d42b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d42d00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d41020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d411b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d41340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d414d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d41660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d417f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d41a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d41c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f95d5d2e020" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f95d5d2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d2e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d2e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d2e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d2e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d2e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d2eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d2ed00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d2d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d2d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d2d340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d2d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d2d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d2d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d2da80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d2dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f95d5ce4560" loc="145:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f95d5ce4560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5ce48e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5ce4a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5ce4c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5ce4d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5ce3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5ce31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5ce3340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5ce34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5ce3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5ce37f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5ce3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5ce3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5ce3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5ce2020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5ce21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f95d5cbf570" loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f95d5cbf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cbf8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cbfa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cbfc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cbfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cbe020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cbe1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cbe340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cbe4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cbe660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cbe7f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cbe980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cbeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cbeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cbd020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cbd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f95d5ce2580" loc="146:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f95d5ce2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5ce2900"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5ce2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5ce2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5ce2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5ce1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5ce11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5ce1340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5ce14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5ce1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5ce17f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5ce1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5ce1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5ce1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5ce0020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5ce01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f95d5d29020" loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f95d5d29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d293a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d29530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d296c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d29850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d299e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d29b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d29d00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d28020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d281b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d28340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d284d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d28660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d287f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d28a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d28c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f95d5d15200" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f95d5d15200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d15580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d15710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d158a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d15a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d15bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d15d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d14020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d141b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d14340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d144d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d14660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d147f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d14980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d14c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d14da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f95d5d01200" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f95d5d01200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d01580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d01710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d018a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d01a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d01bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d01d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d00020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d001b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d00340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d004d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d00660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d007f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d00980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d00c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d00da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f95d5cf0200" loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f95d5cf0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cf0580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cf0710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cf08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cf0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cf0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cf0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cef020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cef1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cef340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cef4d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cef660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cef7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cef980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cefc10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cefda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f95d5cdc580" loc="149:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f95d5cdc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cdc900"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cdca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cdcc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cdcdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cdb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cdb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cdb340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cdb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cdb660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cdb7f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cdb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cdbb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cdbca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cda020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cda1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f95d5ccc570" loc="159:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f95d5ccc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5ccc8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5ccca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cccc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cccda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cca020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cca340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cca4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cca660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cca7f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cca980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5ccab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5ccaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cc9020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cc91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f95d5cb7580" loc="171:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f95d5cb7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cb7900"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cb7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cb7c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cb7db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cb6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cb61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cb6340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cb64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cb6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cb67f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cb6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cb6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cb6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cb5020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cb51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f95d5d3c020" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f95d5d3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d3c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d3c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d3c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d3c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d3c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d3cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d3cd00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d3b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d3b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d3b340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d3b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d3b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d3b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d3ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d3bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f95d5cda580" loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f95d5cda580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cda900"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cdaa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cdac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cdadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cd9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cd91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cd9340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cd94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cd9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cd97f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cd9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cd9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cd9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cd8020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cd81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f95d5d38020" loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f95d5d38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d383a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d38530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d386c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d38850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d389e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d38b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d38d00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d37020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d371b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d37340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d374d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d37660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d377f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d37a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d37c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f95d5d23020" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f95d5d23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d233a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d23530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d236c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d23850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d239e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d23b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d23d00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d22020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d221b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d22340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d224d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d22660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d227f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d22a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d22c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f95d5d0f200" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f95d5d0f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d0f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d0f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d0f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d0fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d0fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d0fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d0e020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d0e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d0e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d0e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d0e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d0e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d0e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d0ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d0eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f95d5cfa200" loc="100:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f95d5cfa200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cfa580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cfa710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cfa8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cfaa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cfabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cfad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cf9020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cf91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cf9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cf94d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cf9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cf97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cf9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cf9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cf9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f95d5cea200" loc="111:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f95d5cea200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cea580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cea710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cea8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5ceaa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5ceabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cead50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5ce9020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5ce91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5ce9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5ce94d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5ce9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5ce97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5ce9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5ce9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5ce9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f95d5d46020" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f95d5d46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d463a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d46530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d466c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d46850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d469e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d46b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d46d00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d45020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d451b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d45340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d454d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d45660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d457f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d45a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d45c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f95d5d32020" loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f95d5d32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d324a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d32630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d327c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d32950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d32ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d32c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d32e00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d31020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d311b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d31340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d314d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d31660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d317f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d31a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d31c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f95d5d1d020" loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f95d5d1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d1d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d1d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d1d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d1d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d1d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d1db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d1dd00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d1c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d1c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d1c340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d1c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d1c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d1c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d1ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d1cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f95d5ce6580" loc="144:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f95d5ce6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5ce6900"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5ce6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5ce6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5ce6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5ce5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5ce51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5ce5340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5ce54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5ce5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5ce57f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5ce5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5ce5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5ce5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5ce4020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5ce41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f95d5cc5570" loc="162:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f95d5cc5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cc58f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cc5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cc5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cc5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cc4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cc41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cc4340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cc44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cc4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cc47f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cc4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cc4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cc4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cc3020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cc31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f95d5cb9570" loc="169:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f95d5cb9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cb98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cb9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cb9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cb9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cb8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cb81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cb8340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cb84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cb8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cb87f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cb8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cb8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cb8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cb7020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cb71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f95d5cd2580" loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f95d5cd2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cd2900"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cd2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cd2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cd2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cd1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cd11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cd1340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cd14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cd1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cd17f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cd1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cd1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cd1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cd0020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cd01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f95d5d19020" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f95d5d19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d195a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d19730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d198c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d19a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d19be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d19d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d18020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d181b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d18340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d184d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d18660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d187f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d18980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d18c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d18da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f95d5d05200" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f95d5d05200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d05580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d05710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d058a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d05a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d05bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d05d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d04020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d041b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d04340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d044d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d04660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d047f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d04980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d04c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d04da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f95d5cf4200" loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f95d5cf4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cf4580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cf4710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cf48a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cf4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cf4bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cf4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cf3020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cf31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cf3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cf34d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cf3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cf37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cf3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cf3c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cf3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f95d5cc3570" loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f95d5cc3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cc38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cc3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cc3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cc3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cc2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cc21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cc2340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cc24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cc2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cc27f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cc2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cc2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cc2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cc1020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cc11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f95d5cd8570" loc="152:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f95d5cd8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cd88f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cd8a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cd8c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cd8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cd7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cd71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cd7340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cd74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cd7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cd77f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cd7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cd7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cd7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cd6020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cd61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f95d5d40020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f95d5d40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d403a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d40530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d406c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d40850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d409e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d40b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d40d00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d3f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d3f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d3f340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d3f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d3f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d3f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d3fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d3fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f95d5d2c020" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f95d5d2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d2c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d2c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d2c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d2c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d2c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d2cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d2cd00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d2b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d2b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d2b340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d2b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d2b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d2b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d2ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d2bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f95d5cf8200" loc="104:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f95d5cf8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cf8580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cf8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cf88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cf8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cf8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cf8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cf7020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cf71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cf7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cf74d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cf7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cf77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cf7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cf7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cf7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f95d5d27020" loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f95d5d27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d273a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d27530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d276c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d27850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d279e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d27b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d27d00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d26020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d261b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d26340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d264d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d26660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d267f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d26a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d26c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f95d5d13200" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f95d5d13200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d13580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d13710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d138a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d13a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d13bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d13d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d12020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d121b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d12340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d124d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d12660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d127f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d12980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d12c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d12da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f95d5cff200" loc="98:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f95d5cff200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cff580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cff710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cff8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cffa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cffbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cffd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cfe020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cfe1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cfe340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cfe4d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cfe660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cfe7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cfe980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cfec10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cfeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f95d5cee200" loc="109:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f95d5cee200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cee580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cee710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cee8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5ceea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5ceebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5ceed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5ced020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5ced1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5ced340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5ced4d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5ced660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5ced7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5ced980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cedc10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cedda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f95d5cd4580" loc="154:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f95d5cd4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cd4900"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cd4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cd4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cd4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cd3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cd31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cd3340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cd34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cd3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cd37f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cd3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cd3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cd3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cd2020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cd21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f95d5d530a0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f95d5d530a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d53420"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d535b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d53740"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d538d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d53a60"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d53bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d53d80"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d52020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d52340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d52660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d527f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d52a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d52c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f95d5d36020" loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f95d5d36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d363a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d36530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d366c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d36850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d369e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d36b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d36d00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d35020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d351b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d35340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d354d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d35660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d357f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d35a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d35c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f95d5d21020" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f95d5d21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d213a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d21530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d216c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d21850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d219e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d21b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d21d00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d20020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d201b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d20340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d204d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d20660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d207f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d20a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d20c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f95d5d0d200" loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f95d5d0d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d0d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d0d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d0d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d0da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d0dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d0dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d0c020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d0c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d0c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d0c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d0c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d0c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d0c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d0cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d0cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f95d5cd0580" loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f95d5cd0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cd0900"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cd0a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cd0c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cd0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5ccf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5ccf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5ccf340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5ccf4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5ccf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5ccf7f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5ccf980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5ccfb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5ccfca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cce020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f95d5cc9570" loc="160:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f95d5cc9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cc98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cc9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cc9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cc9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cc8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cc81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cc8340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cc84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cc8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cc87f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cc8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cc8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cc8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cc7020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cc71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f95d5cbd570" loc="166:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f95d5cbd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cbd8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cbda80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cbdc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cbdda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cbc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cbc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cbc340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cbc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cbc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cbc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cbc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cbcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cbcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cbb020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cbb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f95d5d09200" loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f95d5d09200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d09580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d09710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d098a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d09a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d09bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d09d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d08020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d081b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d08340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d084d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d08660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d087f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d08980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d08c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d08da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f95d5cce580" loc="157:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f95d5cce580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cce900"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5ccea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5ccec20"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5ccedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5ccd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5ccd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5ccd340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5ccd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5ccd660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5ccd7f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5ccd980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5ccdb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5ccdca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5ccc020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5ccc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f95d5d44020" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f95d5d44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d443a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d44530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d446c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d44850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d449e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d44b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d44d00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d43020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d431b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d43340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d434d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d43660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d437f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d43a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d43c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f95d5d30020" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f95d5d30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d303a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d30530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d306c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d30850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d309e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d30b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d30d00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d2f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d2f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d2f340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d2f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d2f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d2f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d2fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d2fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f95d5d1b020" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f95d5d1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d1b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d1b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d1b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d1b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d1b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d1bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d1bd00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d1a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d1a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d1a340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d1a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d1a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d1a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d1aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d1ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f95d5cd6580" loc="153:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f95d5cd6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cd6900"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cd6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cd6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cd6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cd5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cd51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cd5340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cd54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cd5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cd57f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cd5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cd5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cd5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cd4020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cd41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f95d5cc1570" loc="164:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f95d5cc1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cc18f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cc1a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cc1c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cc1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cc0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cc01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cc0340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cc04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cc0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cc07f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cc0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cc0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cc0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cbf020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cbf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f95d5d17200" loc="83:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f95d5d17200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d17580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d17710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d178a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d17a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d17bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d17d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d16020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d161b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d16340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d164d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d16660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d167f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d16980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d16c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d16da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f95d5d03200" loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f95d5d03200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d03580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d03710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d038a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d03a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d03bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d03d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d02020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d021b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d02340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d024d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d02660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d027f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d02980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d02c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d02da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f95d5cf2200" loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f95d5cf2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cf2580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cf2710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cf28a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cf2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cf2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cf2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cf1020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cf11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cf1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cf14d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cf1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cf17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cf1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cf1c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cf1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f95d5d3e020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f95d5d3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d3e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d3e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d3e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d3e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d3e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d3eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d3ed00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d3d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d3d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d3d340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d3d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d3d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d3d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d3da80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d3dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f95d5cf6200" loc="105:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f95d5cf6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cf6580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cf6710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cf68a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cf6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cf6bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cf6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cf5020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cf51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cf5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cf54d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cf5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cf57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cf5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cf5c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cf5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f95d5d3a020" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f95d5d3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d3a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d3a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d3a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d3a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d3a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d3ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d3ad00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d39020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d391b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d39340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d394d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d39660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d397f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d39a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d39c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f95d5d25020" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f95d5d25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d253a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d25530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d256c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d25850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d259e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d25b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d25d00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d24020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d241b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d24340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d244d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d24660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d247f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d24a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d24c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f95d5d11200" loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f95d5d11200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d11580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d11710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d118a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d11a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d11bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d11d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d10020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d101b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d10340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d104d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d10660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d107f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d10980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d10c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d10da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f95d5cfd200" loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f95d5cfd200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cfd580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cfd710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cfd8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cfda30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cfdbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cfdd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cfc020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cfc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cfc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cfc4d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cfc660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cfc7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cfc980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cfcc10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cfcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f95d5cec200" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f95d5cec200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cec580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cec710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cec8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5ceca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cecbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cecd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5ceb020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5ceb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5ceb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5ceb4d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5ceb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5ceb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5ceb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cebc10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cebda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f95d5d48020" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f95d5d48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d483a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d48530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d486c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d48850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d489e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d48b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d48d00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d47020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d471b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d47340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d474d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d47660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d477f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d47a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d47c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f95d5d34020" loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f95d5d34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d343a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d34530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d346c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d34850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d349e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d34b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d34d00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d33020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d331b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d33340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d334d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d33660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d337f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d33a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d33c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f95d5d1f020" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f95d5d1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d1f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d1f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d1f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d1f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d1f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d1fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d1fd00"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d1e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d1e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d1e340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d1e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d1e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d1e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d1ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d1ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f95d5d0b200" loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f95d5d0b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d0b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d0b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d0b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d0ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d0bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d0bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d0a020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d0a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d0a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d0a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d0a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d0a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d0a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d0ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d0ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f95d5cde560" loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f95d5cde560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cde8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cdea70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cdec00"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cded90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cdd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cdd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cdd340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cdd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cdd660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cdd7f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cdd980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cddb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cddca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cdc020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cdc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f95d5cc7570" loc="161:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f95d5cc7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cc78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cc7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cc7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cc7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cc6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cc61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cc6340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cc64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cc6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cc67f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cc6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cc6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cc6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cc5020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cc51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f95d5ce0580" loc="147:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f95d5ce0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5ce0900"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5ce0a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5ce0c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5ce0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cdf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cdf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cdf340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cdf4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cdf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cdf7f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cdf980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cdfb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cdfca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cde020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cde1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f95d5d07200" loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f95d5d07200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5d07580"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5d07710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5d078a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5d07a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5d07bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5d07d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5d06020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5d061b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5d06340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5d064d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5d06660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5d067f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5d06980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5d06c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5d06da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f95d5cbb570" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f95d5cbb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cbb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cbba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cbbc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cbbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cba020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cba1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cba340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cba4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cba660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cba7f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cba980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cbab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cbaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cb9020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cb91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f95d5cb5580" loc="172:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f95d5cb5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5cb5900"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5cb5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5cb5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5cb5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5cb4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5cb41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5cb4340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5cb44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5cb4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5cb47f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5cb4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5cb4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5cb4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5cb3020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5cb31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f95d5ce81f0" loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f95d5ce81f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5ce8970"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5ce8b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5ce8c90"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5ce8e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5ce7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5ce71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5ce7340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5ce74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5ce7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5ce77f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5ce7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5ce7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5ce7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5ce6020"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5ce61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c8a6d0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c8a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c8aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c8abe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c8ad70"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c89020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c891b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c89340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c894d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c89660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c897f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c89980"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c89b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c89ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c89e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c88120"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c882b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c85100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c85100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c85480"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c85610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c857a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c85930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c85ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c85c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c85de0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c84020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c841b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c84340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c844d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c84660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c847f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c84a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c84c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c81d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c81d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c800e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c80270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c80400"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c80590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c80720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c808b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c80a40"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c80bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c80d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c7f020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c7f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c7f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c7f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c7f760"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c7f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c7b740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c7b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c7bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c7bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c7bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c7a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c7a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c7a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c7a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c7a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c7a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c7a980"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c7ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c7aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c7ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c79120"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c792b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c76100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c76100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c76480"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c76610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c767a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c76930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c76ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c76c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c76de0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c75020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c751b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c75340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c754d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c75660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c757f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c75a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c75c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c72d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c72d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c710e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c71270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c71400"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c71590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c71720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c718b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c71a40"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c71bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c71d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c70020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c701b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c70340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c704d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c70760"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c708f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c6d740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c6d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c6dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c6dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c6dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c6c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c6c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c6c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c6c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c6c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c6c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c6c980"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c6cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c6cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c6ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c6b120"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c6b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c68100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c68100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c68480"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c68610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c687a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c68930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c68ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c68c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c68de0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c67020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c671b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c67340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c674d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c67660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c677f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c67a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c67c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c64d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c64d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c630e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c63270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c63400"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c63590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c63720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c638b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c63a40"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c63bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c63d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c62020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c621b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c62340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c624d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c62760"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c628f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c5f740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c5f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c5fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c5fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c5fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c5e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c5e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c5e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c5e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c5e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c5e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c5e980"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c5eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c5eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c5ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c5d120"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c5d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c5a100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c5a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c5a480"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c5a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c5a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c5a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c5aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c5ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c5ade0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c58020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c581b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c58340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c584d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c58660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c587f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c58a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c58c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c55d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c55d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c540e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c54270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c54400"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c54590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c54720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c548b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c54a40"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c54bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c54d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c53020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c531b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c53340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c534d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c53760"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c538f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c50860" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c50860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c50be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c50d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c4f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c4f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c4f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c4f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c4f660"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c4f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c4f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c4fb10"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c4fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c4fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c4e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c4e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c4e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c4b270" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c4b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c4b5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c4b780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c4b910"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c4baa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c4bc30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c4bdc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c4a020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c4a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c4a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c4a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c4a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c4a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c4a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c4ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c4ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c47d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c47d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c460e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c46270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c46400"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c46590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c46720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c468b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c46a40"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c46bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c46d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c45020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c451b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c45340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c454d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c45760"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c458f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c42740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c42740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c42ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c42c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c42de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c41020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c411b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c41340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c414d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c41660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c417f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c41980"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c41b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c41ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c41e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c40120"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c402b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c3d100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c3d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c3d480"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c3d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c3d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c3d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c3dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c3dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c3dde0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c3c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c3c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c3c340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c3c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c3c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c3c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c3ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c3cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c39d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c39d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c380e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c38270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c38400"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c38590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c38720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c388b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c38a40"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c38bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c38d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c37020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c371b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c37340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c374d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c37760"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c378f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c34740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c34740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c34ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c34c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c34de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c32020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c321b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c32340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c324d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c32660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c327f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c32980"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c32b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c32ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c32e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c31120"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c312b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c2e100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c2e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c2e480"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c2e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c2e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c2e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c2eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c2ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c2ede0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c2d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c2d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c2d340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c2d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c2d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c2d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c2da80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c2dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c2ad10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c2ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c290e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c29270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c29400"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c29590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c29720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c298b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c29a40"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c29bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c29d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c28020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c281b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c28340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c284d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c28760"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c288f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c25740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c25740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c25ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c25c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c25de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c24020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c241b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c24340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c244d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c24660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c247f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c24980"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c24b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c24ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c24e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c23120"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c232b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c20100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c20100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c20480"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c20610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c207a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c20930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c20ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c20c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c20de0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c1f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c1f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c1f340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c1f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c1f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c1f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c1fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c1fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c1cd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c1cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c1b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c1b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c1b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c1b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c1b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c1b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c1ba40"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c1bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c1bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c1a020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c1a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c1a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c1a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c1a760"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c1a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c17a60" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c17a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c17de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c16020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c161b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c16340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c164d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c16660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c167f0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c16980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c16b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c16ca0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c16e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c15020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c151b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c15440"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c155d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c12460" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c12460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c127e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c12970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c12b00"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c12c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c12e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c11020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c111b0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c11340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c114d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c11660"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c117f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c11980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c11b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c11da0"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c10020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c0de00" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c0de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c0c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c0c350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c0c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c0c670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c0c800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c0c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c0cb20"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c0ccb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c0ce40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c0b020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c0b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c0b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c0b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c0b760"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c0b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c08740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c08740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c08ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c08c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c08de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c07020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c071b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c07340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c074d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c07660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c077f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c07980"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c07b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c07ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c07e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c06120"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c062b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5c03100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5c03100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5c03480"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5c03610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5c037a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5c03930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5c03ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5c03c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5c03de0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5c02020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5c021b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5c02340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5c024d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5c02660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5c027f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5c02a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5c02c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5bffd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5bffd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5bfe0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5bfe270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5bfe400"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5bfe590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5bfe720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5bfe8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5bfea40"/>
        <function-ref name="get" scoped="" ref="0x7f95d5bfebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5bfed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5bfd020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5bfd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5bfd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5bfd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5bfd760"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5bfd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5bfa740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5bfa740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5bfaac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5bfac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5bfade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5bf9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5bf91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5bf9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5bf94d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5bf9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5bf97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5bf9980"/>
        <function-ref name="set" scoped="" ref="0x7f95d5bf9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5bf9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5bf9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5bf8120"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5bf82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5bf5100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5bf5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5bf5480"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5bf5610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5bf57a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5bf5930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5bf5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5bf5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5bf5de0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5bf4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5bf41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5bf4340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5bf44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5bf4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5bf47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5bf4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5bf4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5bf1d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5bf1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5bf00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5bf0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5bf0400"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5bf0590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5bf0720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5bf08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5bf0a40"/>
        <function-ref name="get" scoped="" ref="0x7f95d5bf0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5bf0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5bef020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5bef1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5bef340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5bef4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5bef760"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5bef8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5bec740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5bec740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5becac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5becc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5becde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5bea020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5bea1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5bea340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5bea4d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5bea660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5bea7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5bea980"/>
        <function-ref name="set" scoped="" ref="0x7f95d5beab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5beaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5beae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5be9120"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5be92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5be6100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5be6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5be6480"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5be6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5be67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5be6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5be6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5be6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5be6de0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5be5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5be51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5be5340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5be54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5be5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5be57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5be5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5be5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5be2d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5be2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5be10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5be1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5be1400"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5be1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5be1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5be18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5be1a40"/>
        <function-ref name="get" scoped="" ref="0x7f95d5be1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5be1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5be0020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5be01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5be0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5be04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5be0760"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5be08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5bdd740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5bdd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5bddac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5bddc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5bddde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5bdc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5bdc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5bdc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5bdc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5bdc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5bdc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5bdc980"/>
        <function-ref name="set" scoped="" ref="0x7f95d5bdcb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5bdcca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5bdce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5bdb120"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5bdb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5bd8100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5bd8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5bd8480"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5bd8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5bd87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5bd8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5bd8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5bd8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5bd8de0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5bd7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5bd71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5bd7340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5bd74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5bd7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5bd77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5bd7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5bd7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5bd4d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5bd4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5bd30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5bd3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5bd3400"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5bd3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5bd3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5bd38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5bd3a40"/>
        <function-ref name="get" scoped="" ref="0x7f95d5bd3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5bd3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5bd2020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5bd21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5bd2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5bd24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5bd2760"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5bd28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5bcf740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5bcf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5bcfac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5bcfc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5bcfde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5bce020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5bce1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5bce340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5bce4d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5bce660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5bce7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5bce980"/>
        <function-ref name="set" scoped="" ref="0x7f95d5bceb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5bceca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5bcee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5bcd120"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5bcd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5bca100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5bca100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5bca480"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5bca610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5bca7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5bca930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5bcaac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5bcac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5bcade0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5bc9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5bc91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5bc9340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5bc94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5bc9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5bc97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5bc9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5bc9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5bc6d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5bc6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5bc40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5bc4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5bc4400"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5bc4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5bc4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5bc48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5bc4a40"/>
        <function-ref name="get" scoped="" ref="0x7f95d5bc4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5bc4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5bc3020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5bc31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5bc3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5bc34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5bc3760"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5bc38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5bc0740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5bc0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5bc0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5bc0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5bc0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5bbf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5bbf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5bbf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5bbf4d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5bbf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5bbf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5bbf980"/>
        <function-ref name="set" scoped="" ref="0x7f95d5bbfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5bbfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5bbfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5bbe120"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5bbe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5bbb100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5bbb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5bbb480"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5bbb610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5bbb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5bbb930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5bbbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5bbbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5bbbde0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5bba020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5bba1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5bba340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5bba4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5bba660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5bba7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5bbaa80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5bbac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5bb7d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5bb7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5bb60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5bb6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5bb6400"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5bb6590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5bb6720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5bb68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5bb6a40"/>
        <function-ref name="get" scoped="" ref="0x7f95d5bb6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5bb6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5bb5020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5bb51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5bb5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5bb54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5bb5760"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5bb58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5bb2740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5bb2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5bb2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5bb2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5bb2de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5bb1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5bb11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5bb1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5bb14d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5bb1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5bb17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5bb1980"/>
        <function-ref name="set" scoped="" ref="0x7f95d5bb1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5bb1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5bb1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5bb0120"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5bb02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5bad100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5bad100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5bad480"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5bad610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5bad7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5bad930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5badac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5badc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5badde0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5bac020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5bac1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5bac340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5bac4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5bac660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5bac7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5baca80"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5bacc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f95d5ba9d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f95d5ba9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5ba80e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5ba8270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5ba8400"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5ba8590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5ba8720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5ba88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5ba8a40"/>
        <function-ref name="get" scoped="" ref="0x7f95d5ba8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5ba8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5ba7020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5ba71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5ba7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5ba74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5ba7760"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5ba78f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f95d5b302f0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f95d5b302f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5b30670"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5b30800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5b30990"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5b30b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5b30cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5b30e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5b2e020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5b2e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5b2e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5b2e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5b2e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5b2e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5b2e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5b2ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5b2eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f95d5b41020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f95d5b41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5b413a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5b41530"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5b416c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5b41850"/>
        <function-ref name="get" scoped="" ref="0x7f95d5b419e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5b41b70"/>
        <function-ref name="set" scoped="" ref="0x7f95d5b41d00"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5b30020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f95d5b2bde0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f95d5b2bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5b2a180"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5b2a310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5b2a4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5b2a630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5b2a7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5b2a950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5b2aae0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5b2ac70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5b2ae00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5b29020"/>
        <function-ref name="set" scoped="" ref="0x7f95d5b291b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5b29340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5b294d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5b29760"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5b298f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f95d5b2cb90" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f95d5b2cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5b2b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5b2b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5b2b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5b2b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d5b2b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5b2b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f95d5b2b980"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5b2bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f95d5b26930" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f95d5b26930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5b26cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5b26e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d5b25020"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5b251b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5b25340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d5b254d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5b25660"/>
        <function-ref name="get" scoped="" ref="0x7f95d5b257f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d5b25980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d5b25b10"/>
        <function-ref name="set" scoped="" ref="0x7f95d5b25ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d5b25e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d5b24020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d5b242b0"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5b24440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f95d5b27710" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f95d5b27710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d5b27a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d5b27c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d5b27db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d5b26020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5b261b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d5b26340"/>
        <function-ref name="set" scoped="" ref="0x7f95d5b264d0"/>
        <function-ref name="clr" scoped="" ref="0x7f95d5b26660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f95d596d370" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f95d596d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f95d596a870"/>
        <function-ref name="fired" scoped="" ref="0x7f95d596ce40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f95d596bc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f95d596b780"/>
        <function-ref name="getdt" scoped="" ref="0x7f95d59681e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f95d596acf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f95d596b300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f95d596c020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f95d596a260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f95d596c4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f95d596c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f95d5b0f610" loc="49:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f95d5b0f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f95d5b0bc40"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5b0c1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f95d5b0b020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f95d5b0cae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f95d5b0a590"/>
        <function-ref name="gett0" scoped="" ref="0x7f95d5b0a110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f95d5b0c660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f95d5b0e390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f95d5b0b630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f95d5b0e860"/>
        <function-ref name="stop" scoped="" ref="0x7f95d5b0ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f95d5b051d0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f95d5b051d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f95d5b01630"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5b04c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f95d5b039d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f95d5b03550"/>
        <function-ref name="getdt" scoped="" ref="0x7f95d5b00020"/>
        <function-ref name="gett0" scoped="" ref="0x7f95d5b01ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f95d5b030d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f95d5b05dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f95d5b01020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f95d5b042e0"/>
        <function-ref name="stop" scoped="" ref="0x7f95d5b047b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f95d5afca80" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f95d5afca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f95d5afe6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f95d5b06400" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f95d5b06400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5b06780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f95d5a09870" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f95d5a09870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f95d5a06090"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5a07090"/>
        <function-ref name="startAt" scoped="" ref="0x7f95d5a07a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f95d5a07550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f95d5a06550"/>
        <function-ref name="start" scoped="" ref="0x7f95d5a086a0"/>
        <function-ref name="stop" scoped="" ref="0x7f95d5a08bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f95d5a09020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f95d5a09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5a093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f95d4ee0bd0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f95d4ee0bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5e1b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f95d5e1b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f95d4edd4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f95d4ede4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f95d4edee60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f95d4ede9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f95d4edd9a0"/>
        <function-ref name="start" scoped="" ref="0x7f95d4edfa80"/>
        <function-ref name="stop" scoped="" ref="0x7f95d4ede020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f95d4ee0380" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f95d4ee0380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d4ee0700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f95d4ec70c0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f95d4ec70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d4ec7440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d4ec75d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d4ec7760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d4ec78f0"/>
        <function-ref name="fired" scoped="" ref="0x7f95d4ec7a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f95d4eca7b0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f95d4eca7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d4ecab30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d4ecacc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d4ecae50"/>
        <function-ref name="get" scoped="" ref="0x7f95d4ec9020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d4ec91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d4ec9340"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d4ec94d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d4ec9660"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d4ec97f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d4ec9980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d4ec9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f95d4ec9da0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f95d4ec9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d4ec8180"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d4ec8310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d4ec84a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d4ec8630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d4ec87c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d4ec8950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d4ec8ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d4ec8c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d4ec8e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f95d5ad8020" loc="52:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f95d5ad8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d5ad83a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d5ad8530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d5ad86c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d5ad8850"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5ad89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f95d5add8b0" loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f95d5add8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d5addc30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d5adddc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5adc020"/>
        <function-ref name="get" scoped="" ref="0x7f95d5adc1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5adc340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5adc4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d5adc660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5adc7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5adc980"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d5adcb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d5adcca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f95d5ada560" loc="51:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f95d5ada560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d5ada8e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d5adaa70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5adac00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d5adad90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d5ad9020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5ad91b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d5ad9340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d5ad94d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d5ad9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f95d4ebeda0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f95d4ebeda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f95d4ebd180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f95d4ebd310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f95d4ebd4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f95d4ebd630"/>
        <function-ref name="fired" scoped="" ref="0x7f95d4ebd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f95d4ec04c0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f95d4ec04c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d4ec0840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d4ec09d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d4ec0b60"/>
        <function-ref name="get" scoped="" ref="0x7f95d4ec0cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d4ec0e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d4ebf030"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d4ebf1c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d4ebf350"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d4ebf4e0"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d4ebf670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d4ebf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f95d4ec4340" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f95d4ec4340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5e1b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f95d5e1b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f95d4ec1ba0"/>
        <function-ref name="fired" scoped="" ref="0x7f95d4ec3b80"/>
        <function-ref name="startAt" scoped="" ref="0x7f95d4ec1550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f95d4ec1090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f95d4ec0090"/>
        <function-ref name="start" scoped="" ref="0x7f95d4ec31b0"/>
        <function-ref name="stop" scoped="" ref="0x7f95d4ec36c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f95d4ec5a30" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f95d4ec5a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d4ec5db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f95d4ebfa90" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f95d4ebfa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f95d4ebfe10"/>
        <function-ref name="getControl" scoped="" ref="0x7f95d4ebe020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d4ebe1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f95d4ebe340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f95d4ebe4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d4ebe660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f95d4ebe7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f95d4ebe980"/>
        <function-ref name="setControl" scoped="" ref="0x7f95d4ebeb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f95d5a82900" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f95d5a82900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f95d5a87780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5a86150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5a87c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5a86610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f95d5a80990" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f95d5a80990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5e1b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f95d5e1b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f95d5a7d7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5a7c170"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5a7dc80"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5a7c630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f95d5a6bc50" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f95d5a6bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d5a6a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f95d5a6a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f95d5a6a340"/>
        <function-ref name="get" scoped="" ref="0x7f95d5a6a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f95d5a6a660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5a6a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d5a6a980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5a6ab10"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5a6aca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f95d5a6ae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f95d5a69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f95d5a7ab80" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f95d5a7ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5e1b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f95d5e1b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f95d5a6c9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5a6b360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5a6ce70"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5a6b820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f95d5a480f0" loc="63:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f95d5a480f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5e1b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f95d5e1b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f95d5a46020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5a469a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5a464e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5a46e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f95d5a66cf0" loc="62:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f95d5a66cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f95d5a4ab60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5a49550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5a49090"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5a49a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f95d4ed9020" loc="61:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f95d4ed9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f95d4ed7870"/>
        <function-ref name="fired" scoped="" ref="0x7f95d4ed8840"/>
        <function-ref name="startAt" scoped="" ref="0x7f95d4ed7220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f95d4ed8d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f95d4ed7d30"/>
        <function-ref name="start" scoped="" ref="0x7f95d4ed9e30"/>
        <function-ref name="stop" scoped="" ref="0x7f95d4ed8380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f95d4ed3780" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f95d4ed3780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5e1b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f95d5e1b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f95d4ed0020"/>
        <function-ref name="fired" scoped="" ref="0x7f95d4ed1020"/>
        <function-ref name="startAt" scoped="" ref="0x7f95d4ed19a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f95d4ed14e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f95d4ed04e0"/>
        <function-ref name="start" scoped="" ref="0x7f95d4ed25d0"/>
        <function-ref name="stop" scoped="" ref="0x7f95d4ed2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f95d4ed63d0" loc="68:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f95d4ed63d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f95d4ed5240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d4ed5bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d4ed5700"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d4ed30d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f95d59d49c0" loc="74:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f95d59d49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f95d59d4d40"/>
        <function-ref name="runTask" scoped="" ref="0x7f95d59d3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f95d59d8850" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f95d59d8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f95d59d4090"/>
        <function-ref name="fired" scoped="" ref="0x7f95d59d6090"/>
        <function-ref name="startAt" scoped="" ref="0x7f95d59d6a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f95d59d6550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f95d59d4550"/>
        <function-ref name="start" scoped="" ref="0x7f95d59d76a0"/>
        <function-ref name="stop" scoped="" ref="0x7f95d59d7bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f95d59dd2f0" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f95d59dd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f95d59d9870"/>
        <function-ref name="fired" scoped="" ref="0x7f95d59dce40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f95d59dbc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f95d59db780"/>
        <function-ref name="getdt" scoped="" ref="0x7f95d59d81e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f95d59d9cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f95d59db300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f95d59dc020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f95d59d9260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f95d59dc4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f95d59dc9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f95d5983a00" loc="71:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f95d5983a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f95d5983d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f95d5982020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f95d5988640" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f95d5988640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f95d5984c40"/>
        <function-ref name="fired" scoped="" ref="0x7f95d59851e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f95d5984020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f95d5985ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f95d5983590"/>
        <function-ref name="gett0" scoped="" ref="0x7f95d5983110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f95d5985660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f95d5987390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f95d5984630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f95d5987860"/>
        <function-ref name="stop" scoped="" ref="0x7f95d5987d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f95d598e150" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f95d598e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f95d598a700"/>
        <function-ref name="fired" scoped="" ref="0x7f95d598dc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f95d598ba50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f95d598b5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f95d5988090"/>
        <function-ref name="gett0" scoped="" ref="0x7f95d598aba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f95d598b110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f95d598ed60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f95d598a0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f95d598d2a0"/>
        <function-ref name="stop" scoped="" ref="0x7f95d598d790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f95d5980790" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f95d5980790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f95d597f3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f95d597fa60" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f95d597fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f95d5974890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d5973260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d5974d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5973720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f95d5967c90" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f95d5967c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f95d5963170"/>
        <function-ref name="fired" scoped="" ref="0x7f95d5965720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f95d5964510"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f95d5964090"/>
        <function-ref name="getdt" scoped="" ref="0x7f95d5963a70"/>
        <function-ref name="gett0" scoped="" ref="0x7f95d59635f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f95d5965ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f95d59668a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f95d5964b20"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f95d5966d70"/>
        <function-ref name="stop" scoped="" ref="0x7f95d59652a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f95d59606d0" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f95d59606d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5fcfea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f95d5e1b240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f95d595dc40"/>
        <function-ref name="fired" scoped="" ref="0x7f95d595e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f95d595d020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f95d595eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f95d595b590"/>
        <function-ref name="gett0" scoped="" ref="0x7f95d595b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f95d595e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f95d595f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f95d595d630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f95d595f860"/>
        <function-ref name="stop" scoped="" ref="0x7f95d595fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f95d5413020" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f95d5413020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d54133a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f95d5413530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f95d54136c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f95d5413850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f95d54139e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f95d5413c30" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f95d5413c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d5412020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f95d54121b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f95d5412340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f95d54124d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f95d5412660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f95d54128b0" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f95d54128b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f95d5412c30"/>
        <function-ref name="source" scoped="" ref="0x7f95d5412dc0"/>
        <function-ref name="address" scoped="" ref="0x7f95d5411020"/>
        <function-ref name="destination" scoped="" ref="0x7f95d54111b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f95d5411340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f95d54114d0"/>
        <function-ref name="type" scoped="" ref="0x7f95d5411660"/>
        <function-ref name="setType" scoped="" ref="0x7f95d54117f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f95d5411980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f95d5411b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f95d5411ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f95d5410020" loc="52:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f95d5410020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f95d54103a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f95d5410530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f95d54106c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f95d4e26750" loc="44:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f95d4e26750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d4e26ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f95d4e26c60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f95d4e26df0"/>
        <function-ref name="cancel" scoped="" ref="0x7f95d4e25020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f95d4e251b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f95d4e25460" loc="46:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f95d4e25460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d4e257e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f95d4e25970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f95d4e25b00"/>
        <function-ref name="cancel" scoped="" ref="0x7f95d4e25c90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f95d4e25e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f95d4e240e0" loc="47:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f95d4e240e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f95d4e24460"/>
        <function-ref name="source" scoped="" ref="0x7f95d4e245f0"/>
        <function-ref name="address" scoped="" ref="0x7f95d4e24780"/>
        <function-ref name="destination" scoped="" ref="0x7f95d4e24910"/>
        <function-ref name="setSource" scoped="" ref="0x7f95d4e24aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f95d4e24c30"/>
        <function-ref name="type" scoped="" ref="0x7f95d4e24dc0"/>
        <function-ref name="setType" scoped="" ref="0x7f95d4e23020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f95d4e231b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f95d4e23340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f95d4e234d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f95d590bcf0" loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f95d590bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d59080a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f95d5908230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f95d59083c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f95d5908550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f95d59086e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f95d58bd400" loc="48:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f95d58bd400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f95d5dcf550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d58bd7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f95d58bd930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f95d58bdac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f95d58bdc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f95d58bdde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f95d58bf580" loc="46:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f95d58bf580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d58bf920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f95d58bfab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f95d58bfc40"/>
        <function-ref name="cancel" scoped="" ref="0x7f95d58bfdd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f95d58bd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f95d58bb720" loc="50:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f95d58bb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d58bbaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f95d58bbc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f95d58bbdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f95d58ba020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f95d58ba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f95d58ba480" loc="169:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f95d58ba480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f95d58ba800"/>
        <function-ref name="runTask" scoped="" ref="0x7f95d58ba990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f95d58bac60" loc="126:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f95d58bac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f95d58b9020"/>
        <function-ref name="runTask" scoped="" ref="0x7f95d58b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f95d58bc060" loc="49:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f95d58bc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f95d58bc3e0"/>
        <function-ref name="source" scoped="" ref="0x7f95d58bc570"/>
        <function-ref name="address" scoped="" ref="0x7f95d58bc700"/>
        <function-ref name="destination" scoped="" ref="0x7f95d58bc890"/>
        <function-ref name="setSource" scoped="" ref="0x7f95d58bca20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f95d58bcbb0"/>
        <function-ref name="type" scoped="" ref="0x7f95d58bcd40"/>
        <function-ref name="setType" scoped="" ref="0x7f95d58bb020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f95d58bb1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f95d58bb340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f95d58bb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f95d58af3b0" loc="46:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f95d58af3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f95d58af730"/>
        <function-ref name="stopDone" scoped="" ref="0x7f95d58af8c0"/>
        <function-ref name="start" scoped="" ref="0x7f95d58afa50"/>
        <function-ref name="stop" scoped="" ref="0x7f95d58afbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f95d58b43f0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f95d58b43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f95d5dcf550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d58b4770"/>
        <function-ref name="getPayload" scoped="" ref="0x7f95d58b4900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f95d58b4a90"/>
        <function-ref name="cancel" scoped="" ref="0x7f95d58b4c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f95d58b4db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f95d58ae7e0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f95d58ae7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d58aeb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f95d58aecf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f95d58aee80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f95d58ad030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f95d58ad1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f95d58ae1d0" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f95d58ae1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f95d5dcf550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f95d58ae550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f95d58a8620" loc="53:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f95d58a8620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f95d58a89a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f95d58a8b30"/>
        <function-ref name="led1On" scoped="" ref="0x7f95d58a8cc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f95d58a8e50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f95d58a7020"/>
        <function-ref name="get" scoped="" ref="0x7f95d58a71b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f95d58a7340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f95d58a7980"/>
        <function-ref name="set" scoped="" ref="0x7f95d58a74d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f95d58a7660"/>
        <function-ref name="led2On" scoped="" ref="0x7f95d58a77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f95d58abb20" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f95d58abb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f95d58a8020"/>
        <function-ref name="noAck" scoped="" ref="0x7f95d58a81b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f95d58a8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f95d58ad470" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f95d58ad470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f95d58ad7f0"/>
        <function-ref name="source" scoped="" ref="0x7f95d58ad980"/>
        <function-ref name="address" scoped="" ref="0x7f95d58adb10"/>
        <function-ref name="destination" scoped="" ref="0x7f95d58adca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f95d58ade30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f95d58ab020"/>
        <function-ref name="type" scoped="" ref="0x7f95d58ab1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f95d58ab340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f95d58ab4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f95d58ab660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f95d58ab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f95d584d9f0" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f95d584d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d584dd70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f95d584b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f95d584b1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f95d584b340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f95d584b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f95d584b760" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f95d584b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f95d584bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f95d58a47d0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f95d58a47d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f95d5dcf550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d58a4b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f95d58a4d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f95d5850020"/>
        <function-ref name="cancel" scoped="" ref="0x7f95d58501b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f95d5850340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f95d584e400" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f95d584e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d584e780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f95d584e910"/>
        <function-ref name="getPayload" scoped="" ref="0x7f95d584eaa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f95d584ec30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f95d584edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f95d58506c0" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f95d58506c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f95d5dcf550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f95d5850a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f95d584d060" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f95d584d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f95d584d3e0"/>
        <function-ref name="noAck" scoped="" ref="0x7f95d584d570"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f95d584d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f95d5850cb0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f95d5850cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f95d584f0a0"/>
        <function-ref name="source" scoped="" ref="0x7f95d584f230"/>
        <function-ref name="address" scoped="" ref="0x7f95d584f3c0"/>
        <function-ref name="destination" scoped="" ref="0x7f95d584f550"/>
        <function-ref name="setSource" scoped="" ref="0x7f95d584f6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f95d584f870"/>
        <function-ref name="type" scoped="" ref="0x7f95d584fa00"/>
        <function-ref name="setType" scoped="" ref="0x7f95d584fb90"/>
        <function-ref name="isForMe" scoped="" ref="0x7f95d584fd20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f95d584e020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f95d584e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f95d58462f0" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f95d58462f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f95d5846670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f95d5846800"/>
        <function-ref name="start" scoped="" ref="0x7f95d5846990"/>
        <function-ref name="stop" scoped="" ref="0x7f95d5846b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f95d5845e10" loc="52:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f95d5845e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f95d5dcd0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d58441c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f95d5844350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f95d58444e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f95d5844670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f95d5844800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f95d5849bc0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f95d5849bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5846020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f95d5845320" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f95d5845320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f95d5dcd0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f95d58456a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f95d5843940" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f95d5843940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f95d5843cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f95d5843e50"/>
        <function-ref name="led1On" scoped="" ref="0x7f95d5842020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f95d58421b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f95d5842340"/>
        <function-ref name="get" scoped="" ref="0x7f95d58424d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f95d5842660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f95d5842ca0"/>
        <function-ref name="set" scoped="" ref="0x7f95d58427f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f95d5842980"/>
        <function-ref name="led2On" scoped="" ref="0x7f95d5842b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f95d5843020" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f95d5843020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f95d5dcd0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f95d58433a0"/>
        <function-ref name="offset" scoped="" ref="0x7f95d5843530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f95d58436c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f95d5836450" loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f95d5836450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f95d58367d0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f95d5836960"/>
        <function-ref name="start" scoped="" ref="0x7f95d5836af0"/>
        <function-ref name="stop" scoped="" ref="0x7f95d5836c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f95d57cee40" loc="332:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f95d57cee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f95d57cd1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f95d57cd370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f95d5821e00" loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f95d5821e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f95d58231c0"/>
        <function-ref name="stop" scoped="" ref="0x7f95d5823350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f95d5806d10" loc="191:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f95d5806d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f95d58050e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f95d5805270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f95d5837d60" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f95d5837d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d5836180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f95d581fa80" loc="75:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f95d581fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f95d581fe00"/>
        <function-ref name="flush" scoped="" ref="0x7f95d5822020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f95d57d1400" loc="322:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f95d57d1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f95d57d1780"/>
        <function-ref name="runTask" scoped="" ref="0x7f95d57d1910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f95d5826e30" loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f95d5826e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f95d582e1e0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f95d582e370"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f95d582e500"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f95d582e690"/>
        <function-ref name="putData" scoped="" ref="0x7f95d582e820"/>
        <function-ref name="putDone" scoped="" ref="0x7f95d582e9b0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f95d582eb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f95d582edc0" loc="73:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f95d582edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f95d582a180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f95d582a310"/>
        <function-ref name="led1On" scoped="" ref="0x7f95d582a4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f95d582a630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f95d582a7c0"/>
        <function-ref name="get" scoped="" ref="0x7f95d582a950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f95d582aae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f95d58241b0"/>
        <function-ref name="set" scoped="" ref="0x7f95d582ac70"/>
        <function-ref name="led0On" scoped="" ref="0x7f95d582ae00"/>
        <function-ref name="led2On" scoped="" ref="0x7f95d5824020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f95d57ca0c0" loc="341:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f95d57ca0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f95d57ca440"/>
        <function-ref name="runTask" scoped="" ref="0x7f95d57ca5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f95d582f4a0" loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f95d582f4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f95d582f820"/>
        <function-ref name="nextByte" scoped="" ref="0x7f95d582f9b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f95d582fb40"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f95d582fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f95d582cad0" loc="68:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f95d582cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f95d582ce50"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f95d5833020"/>
        <function-ref name="endPacket" scoped="" ref="0x7f95d58331b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f95d56ffc50" loc="275:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f95d56ffc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f95d56fe020"/>
        <function-ref name="runTask" scoped="" ref="0x7f95d56fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f95d5703830" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f95d5703830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f95d5dcd0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d5703bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f95d5703d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f95d5702020"/>
        <function-ref name="cancel" scoped="" ref="0x7f95d57021b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f95d5702340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f95d56fe480" loc="158:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f95d56fe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f95d56fe800"/>
        <function-ref name="runTask" scoped="" ref="0x7f95d56fe990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f95d5703110" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f95d5703110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f95d5dcd0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f95d57034b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f95d5702760" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f95d5702760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f95d5dcd0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f95d5702b00"/>
        <function-ref name="offset" scoped="" ref="0x7f95d5702c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f95d5702e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f95d5700590" loc="57:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f95d5700590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f95d5700910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f95d5700aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f95d5700c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f95d5700dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f95d56ff020"/>
        <function-ref name="get" scoped="" ref="0x7f95d56ff1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f95d56ff340"/>
        <function-ref name="led2On" scoped="" ref="0x7f95d56ff980"/>
        <function-ref name="set" scoped="" ref="0x7f95d56ff660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f95d56ff4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f95d56ff7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f95d57019d0" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f95d57019d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f95d5701d50"/>
        <function-ref name="nextByte" scoped="" ref="0x7f95d5700020"/>
        <function-ref name="startSend" scoped="" ref="0x7f95d57001b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f95d5700340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f95d57010e0" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f95d57010e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f95d5701460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f95d57015f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f95d5701780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f95d56eed20" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f95d56eed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d56f70e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f95d56f7270"/>
        <function-ref name="receive" scoped="" ref="0x7f95d56f7400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f95d56f7590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f95d56f7720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f95d56f78b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f95d56f7a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f95d56fcb70" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f95d56fcb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f95d56f9020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f95d56f91b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f95d56f9340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f95d56f94d0"/>
        <function-ref name="putData" scoped="" ref="0x7f95d56f9660"/>
        <function-ref name="putDone" scoped="" ref="0x7f95d56f97f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f95d56f9980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f95d56f7cc0" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f95d56f7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f95d56f60a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f95d56f6230"/>
        <function-ref name="led1On" scoped="" ref="0x7f95d56f63c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f95d56f6550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f95d56f66e0"/>
        <function-ref name="get" scoped="" ref="0x7f95d56f6870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f95d56f6a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f95d56eb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f95d56f6b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f95d56f6d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f95d56eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f95d56cf020" loc="6:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f95d56cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d56cf3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f95d56cf530"/>
        <function-ref name="receive" scoped="" ref="0x7f95d56cf6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f95d56cf850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f95d56d1890" loc="5:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f95d56d1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d56d1c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f95d56d1da0"/>
        <function-ref name="receive" scoped="" ref="0x7f95d56d0020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f95d56d01b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f95d56d0340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f95d56d04d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f95d56d0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f95d56d1080" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f95d56d1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f95d56d1400"/>
        <function-ref name="stop" scoped="" ref="0x7f95d56d1590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f95d5445c70" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f95d5445c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f95d5444020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f95d54441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f95d5443440" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f95d5443440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d54437c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f95d5443950"/>
        <function-ref name="receive" scoped="" ref="0x7f95d5443ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f95d5443c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f95d5441020" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f95d5441020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f95d54413a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f95d5444440" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f95d5444440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d54447c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f95d5444950"/>
        <function-ref name="receive" scoped="" ref="0x7f95d5444ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f95d5444c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f95d5444e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f95d5443020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f95d54431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f95d5445020" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f95d5445020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f95d54453a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f95d5445530"/>
        <function-ref name="request" scoped="" ref="0x7f95d54456c0"/>
        <function-ref name="granted" scoped="" ref="0x7f95d5445850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f95d54459e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f95d5666dd0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f95d5666dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f95d5668180"/>
        <function-ref name="configure" scoped="" ref="0x7f95d5668310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f95d5665210" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f95d5665210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d5665590"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f95d5665720"/>
        <function-ref name="receive" scoped="" ref="0x7f95d56658b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f95d5665a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f95d5662600" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f95d5662600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f95d5662980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f95d5668b50" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f95d5668b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d5667020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f95d56671b0"/>
        <function-ref name="receive" scoped="" ref="0x7f95d5667340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f95d56674d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f95d5667660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f95d56677f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f95d5667980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f95d5663370" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f95d5663370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f95d56636f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f95d5663880"/>
        <function-ref name="request" scoped="" ref="0x7f95d5663a10"/>
        <function-ref name="granted" scoped="" ref="0x7f95d5663ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f95d5663d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f95d566b320" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f95d566b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f95d566b6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f95d566b830"/>
        <function-ref name="request" scoped="" ref="0x7f95d566b9c0"/>
        <function-ref name="granted" scoped="" ref="0x7f95d566bb50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f95d566bce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f95d565ebe0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f95d565ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f95d5661020"/>
        <function-ref name="txDone" scoped="" ref="0x7f95d56611b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f95d55d9e70" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f95d55d9e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f95d55d8240"/>
        <function-ref name="configure" scoped="" ref="0x7f95d55d83d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f95d55d7890" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f95d55d7890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d55d7c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f95d55d7dc0"/>
        <function-ref name="receive" scoped="" ref="0x7f95d55d5020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f95d55d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f95d55d43e0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f95d55d43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f95d55d4780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f95d55d4a50" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f95d55d4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f95d55d4dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f95d55d3020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f95d55d31b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f95d55d3340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f95d55d34d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f95d55d3660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f95d55d37f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f95d55d3980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f95d55d3b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f95d55d3ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f95d55d3e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f95d55d2020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f95d55d21b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f95d55d2440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f95d55d25d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f95d55d2760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f95d55d28f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f95d55d2a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f95d55d2c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f95d55d2da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f95d55d1020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f95d55d11b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f95d55d1340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f95d55d14d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d55d1660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f95d55d19f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f95d55d1b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f95d55d1d10"/>
        <function-ref name="tx" scoped="" ref="0x7f95d55d0020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f95d55d01b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f95d55d0340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f95d55d04d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f95d55d0660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f95d55d07f0"/>
        <function-ref name="rx" scoped="" ref="0x7f95d55d0980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f95d55d0b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f95d55d0ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f95d55d0e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f95d55cf020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f95d55cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f95d55d8790" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f95d55d8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d55d8b30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f95d55d8cc0"/>
        <function-ref name="receive" scoped="" ref="0x7f95d55d8e50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f95d55d7020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f95d55d71b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f95d55d7340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f95d55d74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f95d55ce020" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f95d55ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5e1b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f95d5e1b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f95d55cee30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d55cd800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d55cd340"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d55cdcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f95d55d55b0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f95d55d55b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f95d55d5950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f95d55d5ae0"/>
        <function-ref name="request" scoped="" ref="0x7f95d55d5c70"/>
        <function-ref name="granted" scoped="" ref="0x7f95d55d5e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f95d55d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f95d55d90d0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f95d55d90d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f95d55d9470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f95d55d9600"/>
        <function-ref name="request" scoped="" ref="0x7f95d55d9790"/>
        <function-ref name="granted" scoped="" ref="0x7f95d55d9920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f95d55d9ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f95d55cf5b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f95d55cf5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f95d55cf950"/>
        <function-ref name="txDone" scoped="" ref="0x7f95d55cfae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f95d55cc120" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f95d55cc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f95d55cc4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f95d55cc630"/>
        <function-ref name="led1On" scoped="" ref="0x7f95d55cc7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f95d55cc950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f95d55ccae0"/>
        <function-ref name="get" scoped="" ref="0x7f95d55ccc70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f95d55cce00"/>
        <function-ref name="led2On" scoped="" ref="0x7f95d55cb4d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d55cb1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f95d55cb020"/>
        <function-ref name="led0On" scoped="" ref="0x7f95d55cb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f95d55bb080" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f95d55bb080"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f95d55bb400"/>
        <function-ref name="txDone" scoped="" ref="0x7f95d55bb590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f95d55bfca0" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f95d55bfca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f95d55c20a0"/>
        <function-ref name="stop" scoped="" ref="0x7f95d55c2230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f95d55c2550" loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f95d55c2550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f95d55c28d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f95d55c2a60"/>
        <function-ref name="setUctl" scoped="" ref="0x7f95d55c2bf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f95d55c2d80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f95d55c1020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f95d55c11b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f95d55c1340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f95d55c14d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f95d55c1660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f95d55c17f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f95d55c1980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f95d55c1b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f95d55c1ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f95d55be020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f95d55be1b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f95d55be340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f95d55be4d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f95d55be660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f95d55be7f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f95d55be980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f95d55beb10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f95d55beca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f95d55bee30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f95d55bd020"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d55bd1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f95d55bd540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f95d55bd6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f95d55bd860"/>
        <function-ref name="tx" scoped="" ref="0x7f95d55bd9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f95d55bdb80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f95d55bdd10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f95d55bc020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f95d55bc1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f95d55bc340"/>
        <function-ref name="rx" scoped="" ref="0x7f95d55bc4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f95d55bc660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f95d55bc7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f95d55bc980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f95d55bcb10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f95d55bcca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f95d55ad1f0" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f95d55ad1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d55ad570"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d55ad700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d55ad890"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d55ada20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d55adbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d55add40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d55ac020"/>
        <function-ref name="get" scoped="" ref="0x7f95d55ac1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d55ac340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d55ac4d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d55ac660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d55ac7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d55ac980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d55acc10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d55acda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f95d55b2910" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f95d55b2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f95d55b2c90"/>
        <function-ref name="txDone" scoped="" ref="0x7f95d55b2e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f95d55ab1f0" loc="81:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f95d55ab1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d55ab570"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d55ab700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d55ab890"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d55aba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d55abbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d55abd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d55aa020"/>
        <function-ref name="get" scoped="" ref="0x7f95d55aa1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d55aa340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d55aa4d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d55aa660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d55aa7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d55aa980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d55aac10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d55aada0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f95d55a91f0" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f95d55a91f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d55a9570"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d55a9700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d55a9890"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d55a9a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d55a9bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d55a9d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d55a8020"/>
        <function-ref name="get" scoped="" ref="0x7f95d55a81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d55a8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d55a84d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d55a8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d55a87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d55a8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d55a8c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d55a8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f95d55b7cc0" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f95d55b7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f95d55b60a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f95d55b6230"/>
        <function-ref name="setUctl" scoped="" ref="0x7f95d55b63c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f95d55b6550"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f95d55b66e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f95d55b6870"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f95d55b6a00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f95d55b6b90"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f95d55b6d20"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f95d55b5020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f95d55b51b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f95d55b5340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f95d55b54d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f95d55b5760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f95d55b58f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f95d55b5a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f95d55b5c10"/>
        <function-ref name="isUart" scoped="" ref="0x7f95d55b5da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f95d55b4020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f95d55b41b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f95d55b4340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f95d55b44d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f95d55b4660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f95d55b47f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d55b4980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f95d55b4d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f95d55b3020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f95d55b31b0"/>
        <function-ref name="tx" scoped="" ref="0x7f95d55b3340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f95d55b34d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f95d55b3660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f95d55b37f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f95d55b3980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f95d55b3b10"/>
        <function-ref name="rx" scoped="" ref="0x7f95d55b3ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f95d55b3e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f95d55b2020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f95d55b21b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f95d55b2340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f95d55b24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f95d55b7410" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f95d55b7410"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f95d55b7790"/>
        <function-ref name="stop" scoped="" ref="0x7f95d55b7920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f95d55af1f0" loc="79:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f95d55af1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d55af570"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d55af700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d55af890"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d55afa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d55afbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d55afd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d55ae020"/>
        <function-ref name="get" scoped="" ref="0x7f95d55ae1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d55ae340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d55ae4d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d55ae660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d55ae7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d55ae980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d55aec10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d55aeda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f95d55b1210" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f95d55b1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f95d55b1590"/>
        <function-ref name="isInput" scoped="" ref="0x7f95d55b1720"/>
        <function-ref name="setResistor" scoped="" ref="0x7f95d55b18b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f95d55b1a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f95d55b1bd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f95d55b1d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f95d55b0020"/>
        <function-ref name="get" scoped="" ref="0x7f95d55b01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f95d55b0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f95d55b04d0"/>
        <function-ref name="set" scoped="" ref="0x7f95d55b0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f95d55b07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f95d55b0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f95d55b0c10"/>
        <function-ref name="clr" scoped="" ref="0x7f95d55b0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f95d552a110" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f95d552a110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f95d5e1b680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f95d5e1b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f95d5529020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f95d55299a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f95d55294e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f95d5529e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f95d4d67020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f95d4d67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f95d4d673a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f95d4d67530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f95d4d61440" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f95d4d61440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f95d4d617c0"/>
        <function-ref name="configure" scoped="" ref="0x7f95d4d61950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f95d4d62c10" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f95d4d62c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f95d4d61020"/>
        <function-ref name="txDone" scoped="" ref="0x7f95d4d611b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f95d4d68340" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f95d4d68340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f95d4d686c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f95d4d68850"/>
        <function-ref name="request" scoped="" ref="0x7f95d4d689e0"/>
        <function-ref name="granted" scoped="" ref="0x7f95d4d68b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f95d4d68d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f95d4d66020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f95d4d66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f95d4d663a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f95d4d66530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f95d4d666c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f95d4d66850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f95d4d669e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f95d4d66b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f95d4d66d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f95d4d65020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f95d4d651b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f95d4d65340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f95d4d654d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f95d4d65660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f95d4d657f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f95d4d65a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f95d4d65c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f95d4d65da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f95d4d64020"/>
        <function-ref name="isUart" scoped="" ref="0x7f95d4d641b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f95d4d64340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f95d4d644d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f95d4d64660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f95d4d647f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f95d4d64980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f95d4d64b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f95d4d64ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f95d4d63220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f95d4d633b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f95d4d63540"/>
        <function-ref name="tx" scoped="" ref="0x7f95d4d636d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f95d4d63860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f95d4d639f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f95d4d63b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f95d4d63d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f95d4d62020"/>
        <function-ref name="rx" scoped="" ref="0x7f95d4d621b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f95d4d62340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f95d4d624d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f95d4d62660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f95d4d627f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f95d4d62980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f95d4d677c0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f95d4d677c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f95d4d67b40"/>
        <function-ref name="userId" scoped="" ref="0x7f95d4d67cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f95d550ed50" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f95d550ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f95d550d100"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f95d550d290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f95d550c370" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f95d550c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f95d550c6f0"/>
        <function-ref name="configure" scoped="" ref="0x7f95d550c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f95d5513ce0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f95d5513ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f95d550f0a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f95d550f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f95d550fa60" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f95d550fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f95d550fde0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f95d550e020"/>
        <function-ref name="request" scoped="" ref="0x7f95d550e1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f95d550e340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f95d550e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f95d550d590" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f95d550d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f95d550d910"/>
        <function-ref name="userId" scoped="" ref="0x7f95d550daa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f95d54f44b0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f95d54f44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f95d54f4830"/>
        <function-ref name="userId" scoped="" ref="0x7f95d54f49c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f95d55075c0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f95d55075c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f95d5507960"/>
        <function-ref name="txDone" scoped="" ref="0x7f95d5507af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f95d54f5e70" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f95d54f5e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d54f4220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f95d54f5020" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f95d54f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f95d54f53c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f95d54f5690" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f95d54f5690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f95d54f5a10"/>
        <function-ref name="txDone" scoped="" ref="0x7f95d54f5ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f95d547bbf0" loc="92:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f95d547bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f95d547a020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f95d547a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f95d5478930" loc="96:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f95d5478930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f95d5478cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f95d5478e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f95d547a400" loc="93:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f95d547a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f95d547a780"/>
        <function-ref name="requested" scoped="" ref="0x7f95d547a910"/>
        <function-ref name="granted" scoped="" ref="0x7f95d547aaa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f95d547ac30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f95d547adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f95d547ce60" loc="91:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f95d547ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f95d547b230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f95d547b3c0"/>
        <function-ref name="request" scoped="" ref="0x7f95d547b550"/>
        <function-ref name="granted" scoped="" ref="0x7f95d547b6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f95d547b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f95d5478060" loc="94:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f95d5478060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f95d54783e0"/>
        <function-ref name="userId" scoped="" ref="0x7f95d5478570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f95d4cfdca0" loc="44:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f95d4cfdca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d4cfc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f95d4cfc330" loc="45:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f95d4cfc330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f95d4cfc6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f95d4cfc840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f95d4cfc9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f95d4cfcb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f95d4cf83a0" loc="55:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f95d4cf83a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f95d4cf8740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f95d4cf88d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f95d4cf6210" loc="60:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f95d4cf6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f95d4cf65b0"/>
        <function-ref name="configure" scoped="" ref="0x7f95d4cf6740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f95d4cf69d0" loc="61:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f95d4cf69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f95d4cf6d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f95d4cf5020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f95d4cf51b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f95d4cf5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f95d4cf8b20" loc="56:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f95d4cf8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f95d4cf7020"/>
        <function-ref name="requested" scoped="" ref="0x7f95d4cf71b0"/>
        <function-ref name="granted" scoped="" ref="0x7f95d4cf7340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f95d4cf74d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f95d4cf7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f95d4cf5590" loc="62:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f95d4cf5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f95d4cf5910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f95d4cf5aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f95d4cf5c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f95d4cf5dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f95d4cf4020"/>
        <function-ref name="get" scoped="" ref="0x7f95d4cf41b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f95d4cf4340"/>
        <function-ref name="led0On" scoped="" ref="0x7f95d4cf4980"/>
        <function-ref name="set" scoped="" ref="0x7f95d4cf4660"/>
        <function-ref name="led2On" scoped="" ref="0x7f95d4cf44d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f95d4cf47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f95d4cf9540" loc="54:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f95d4cf9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f95d4cf98e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f95d4cf9a70"/>
        <function-ref name="request" scoped="" ref="0x7f95d4cf9c00"/>
        <function-ref name="granted" scoped="" ref="0x7f95d4cf9d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f95d4cf8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f95d4cf78b0" loc="57:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f95d4cf78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f95d4cf7c30"/>
        <function-ref name="userId" scoped="" ref="0x7f95d4cf7dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f95d4cf4c50" loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f95d4cf4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f95d4cf3020"/>
        <function-ref name="runTask" scoped="" ref="0x7f95d4cf31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f95d545e400" loc="72:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f95d545e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f95d545e780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f95d545e9d0" loc="73:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f95d545e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f95d545ed50"/>
        <function-ref name="requested" scoped="" ref="0x7f95d545d020"/>
        <function-ref name="granted" scoped="" ref="0x7f95d545d1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f95d545d340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f95d545d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f95d5473b20" loc="70:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f95d5473b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f95d545e020"/>
        <function-ref name="stop" scoped="" ref="0x7f95d545e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f95d545d720" loc="74:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f95d545d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f95d545daa0"/>
        <function-ref name="userId" scoped="" ref="0x7f95d545dc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f95d4cc3b00" loc="62:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f95d4cc3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f95d4cc3e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f95d4cc20f0" loc="63:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f95d4cc20f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f95d4cc2470"/>
        <function-ref name="requested" scoped="" ref="0x7f95d4cc2600"/>
        <function-ref name="granted" scoped="" ref="0x7f95d4cc2790"/>
        <function-ref name="isOwner" scoped="" ref="0x7f95d4cc2920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f95d4cc2ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f95d4cc33a0" loc="60:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f95d4cc33a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f95d4cc3720"/>
        <function-ref name="stop" scoped="" ref="0x7f95d4cc38b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f95d4cc2d00" loc="64:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f95d4cc2d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f95d4cc10a0"/>
        <function-ref name="userId" scoped="" ref="0x7f95d4cc1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f95d543d920" loc="3:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f95d543d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f95d543dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f95d543c020" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f95d543c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f95d543c3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f95d543c530"/>
        <function-ref name="request" scoped="" ref="0x7f95d543c6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f95d543c850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f95d543c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f95d543d0c0" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f95d543d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f95d543d440"/>
        <function-ref name="stop" scoped="" ref="0x7f95d543d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f95d542b8d0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f95d542b8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f95d542bc50"/>
        <function-ref name="offset" scoped="" ref="0x7f95d542bde0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f95d5428020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f95d540c930" loc="43:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f95d540c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f95d53eb790"/>
        <function-ref name="enqueue" scoped="" ref="0x7f95d53ea0d0"/>
        <function-ref name="element" scoped="" ref="0x7f95d53ea5a0"/>
        <function-ref name="full" scoped="" ref="0x7f95d53ec9e0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f95d53eb310"/>
        <function-ref name="dequeue" scoped="" ref="0x7f95d53ebc10"/>
        <function-ref name="empty" scoped="" ref="0x7f95d53ec560"/>
        <function-ref name="size" scoped="" ref="0x7f95d53ece60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f95d53e4020" loc="93:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f95d53e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f95d53e3e50"/>
        <function-ref name="enqueue" scoped="" ref="0x7f95d53e1780"/>
        <function-ref name="element" scoped="" ref="0x7f95d53e1c50"/>
        <function-ref name="full" scoped="" ref="0x7f95d53e30d0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f95d53e39d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f95d53e1300"/>
        <function-ref name="empty" scoped="" ref="0x7f95d53e4c10"/>
        <function-ref name="size" scoped="" ref="0x7f95d53e3550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f95d53df100" loc="94:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f95d53df100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f95d53df480"/>
        <function-ref name="getPayload" scoped="" ref="0x7f95d53df610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f95d53df7a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f95d53df930"/>
        <function-ref name="sendDone" scoped="" ref="0x7f95d53dfac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f95d53dfd50" loc="95:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f95d53dfd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f95d53de100"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f95d53de290"/>
        <function-ref name="getPayload" scoped="" ref="0x7f95d53de420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f95d53de5b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f95d53de740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f95d53d81d0" loc="114:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7f95d53d81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f95d53d8550"/>
        <function-ref name="runTask" scoped="" ref="0x7f95d53d86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f95d53e9d70" loc="89:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f95d53e9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d53e5180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f95d53de9c0" loc="96:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f95d53de9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f95d53ded40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f95d53dd020"/>
        <function-ref name="led1On" scoped="" ref="0x7f95d53dd1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f95d53dd340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f95d53dd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f95d53dd660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f95d53dd7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f95d53dde30"/>
        <function-ref name="set" scoped="" ref="0x7f95d53dd980"/>
        <function-ref name="led0On" scoped="" ref="0x7f95d53ddb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f95d53ddca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f95d53e25f0" loc="90:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f95d53e25f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f95d53e2970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f95d53c27e0" loc="43:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f95d53c27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f95d53c2b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f95d53bfb20" loc="94:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f95d53bfb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f95d53bb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f95d53bb300" loc="95:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f95d53bb300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f95d53bb680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f95d53b30f0" loc="39:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f95d53b30f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f95d53b3470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f95d53b3810" loc="40:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f95d53b3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f95d53b3b90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f95d53b3d20"/>
        <function-ref name="start" scoped="" ref="0x7f95d53b2020"/>
        <function-ref name="stop" scoped="" ref="0x7f95d53b21b0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f95d5ff5e10" loc="62:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f95d5ff6a20" loc="60:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f95d5fc5b40" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f95d5fc8de0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f95d5fc5420" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f95d5fc8700" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f95d5fc65a0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f95d5fcb910" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f95d5fc8020" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f95d5fc6cc0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f95d6109020" loc="62:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f95d63cedd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f95d5f72020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f95d5f73cc0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f95d5f76390" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f95d5fbd5a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f95d5fbb440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f95d5f72890" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f95d5f717b0" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f95d5f73560" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f95d5f71020" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f95d5f76b30" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f95d5f75350" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f95d5f75da0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f95d5fbd5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f95d5fbb440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f95d5f75b20" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f95d5fbd5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f95d5fbb440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f95d5f650e0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f95d5f62730" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f95d5f624b0" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f95d5f612e0" loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f95d5f61060" loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f95d5f63ca0" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f95d5f633e0" loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f95d5f65a90" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f95d5f65810" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f95d5f6c3e0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f95d5f6cd60" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f95d5f6cae0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f95d5f6a790" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f95d5f6a510" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f95d5f692a0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f95d5f69020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f95d5f69990" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f95d5f7c810" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f95d5f792a0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f95d5f79020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f95d5f7b020" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f95d5f82ab0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f95d5f7b760" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f95d5f7f9b0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f95d5f7c120" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f95d5f7f270" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f95d5f7d0e0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f95d5f7d9f0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f95d5f7d770" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f95d5f79cb0" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f95d5f79a30" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f95d5f3b1f0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f95d602ca80" loc="85:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f95d602b1f0" loc="86:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f95d602c2b0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f95d6245830" loc="52:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f95d6487020" loc="57:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f95d6486020" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f95d6487790" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f95d647b350" loc="67:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f95d647bba0" loc="75:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f95d5dbabf0" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f95d5dbabf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f95d5db0980" loc="136:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f95d5db41f0" loc="83:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f95d5db2020" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f95d5db39a0" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f95d5db3ce0" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f95d5db31f0" loc="98:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f95d5dafa10" loc="151:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f95d5daf190" loc="144:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f95d5db49d0" loc="92:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f95d5db7790" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f95d5db7510" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f95d5db0020" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f95d5db29c0" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f95d5db2d00" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f95d5db52a0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f95d5db5020" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f95d5db5aa0" loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f95d5d9ba60" loc="61:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f95d5d99270" loc="67:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f95d5d99a50" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f95d5d98a20" loc="83:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f95d5d961f0" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f95d5d96a00" loc="117:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f95d5d98270" loc="77:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f95d5d945a0" loc="134:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f95d5d94320" loc="134:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f95d5d9b2d0" loc="56:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f95d5d97270" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f95d5d97a00" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f95d5d7a3b0" loc="44:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f95d5d7aae0" loc="45:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f95d5d7b580" loc="42:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f95d5d789b0" loc="47:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f95d5d7bc80" loc="43:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f95d5d78270" loc="46:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f95d5d7e760" loc="40:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f95d5d7ee30" loc="41:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f95d5d4f350" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f95d5d4faa0" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f95d5d49390" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f95d5d49110" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f95d5d51bd0" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f95d5d4d9d0" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f95d5d49c80" loc="117:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f95d5d4d270" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f95d5d50b90" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f95d5d4b0e0" loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f95d5d50390" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f95d5d54d10" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f95d5d4c190" loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f95d5d4b880" loc="101:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f95d5d4c950" loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f95d5d51480" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f95d5b00c50" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f95d5b00c50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f95d5afc5a0" loc="61:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f95d6ae7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f95d5af75d0" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f95d5af75d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f95d5af7810" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f95d5af7810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f95d5af2390" loc="109:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f95d5af7810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f95d5af53b0" loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f95d5af39d0" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f95d5af7810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f95d5af7810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f95d5af3400" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f95d5af7810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f95d5af3740" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f95d5af7810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f95d5af5b90" loc="88:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f95d5af2b80" loc="116:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f95d5af7810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f95d5af6390" loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f95d5af7810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f95d5af6110" loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f95d5af7810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f95d5af6bc0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f95d5a8ae20" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f95d5a8ae20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f95d5a850d0" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f95d5a850d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f95d5a859f0" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f95d5a850d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f95d5a83b10" loc="76:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f95d5a832b0" loc="71:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f95d5a822b0" loc="82:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f95d59510d0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f95d5dcfd10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f95d5952730" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f95d5dcfd10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f95d5952ab0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f95d5952de0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f95d594d6d0" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f95d594d0d0" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f95d594d400" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f95d594c840" loc="123:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f95d5950430" loc="96:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f95d59501b0" loc="96:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f95d594e950" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f95d594e370" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f95d594e6c0" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f95d5948020" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f95d5954c60" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f95d5946110" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f95d5948e10" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f95d5942490" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f95d5944e50" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f95d59421c0" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f95d5944560" loc="106:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f95d59455e0" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f95d5945020" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f95d5945350" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f95d5933d30" loc="177:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f95d5dcf930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f95d5933ab0" loc="177:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f95d593ca10" loc="88:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f95d5dcfd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f95d593c790" loc="88:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f95d5953e60" loc="68:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f95d5dcfd10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f95d593f950" loc="78:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f95d5dcfd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f95d593f6d0" loc="78:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f95d59393a0" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f95d5dcfd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f95d593ed70" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f95d5939110" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f95d5dcfd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f95d593be50" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f95d5dcfd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f95d593b870" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f95d593bbc0" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f95d5dcfd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f95d5937810" loc="147:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f95d5dcf550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f95d5937590" loc="147:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f95d5934b90" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f95d5dcf550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f95d59345e0" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f95d5934900" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f95d5dcf550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f95d5938600" loc="136:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f95d5938380" loc="136:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f95d59322f0" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f95d5dcf930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f95d5935cf0" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f95d5932060" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f95d5dcf930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f95d5930190" loc="195:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f95d5dcf930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f95d592dad0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f95d592d850" loc="59:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f95d592bcd0" loc="71:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f95d592ba50" loc="71:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f95d5929020" loc="85:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f95d592cce0" loc="85:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f95d59225e0" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f95d5922020" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f95d5922350" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f95d591dbb0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f95d591d5b0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f95d591d8e0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f95d591ed20" loc="112:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f95d5920900" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f95d5920680" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f95d591fe00" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f95d591f820" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f95d591fb70" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f95d58b2ab0" loc="113:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f95d58b2830" loc="113:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f95d58af020" loc="138:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f95d58b1d30" loc="138:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f95d58b5d70" loc="104:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f95d58b1350" loc="130:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f95d58ac410" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
              <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f95d58b3a90" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f95d58b3de0" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f95d58ac130" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f95d583e630" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f95d583e020" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f95d583e3a0" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f95d5841670" loc="15:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f95d583f620" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f95d583f020" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f95d5dbe080"/>
                <typename><typedef-ref name="message_t" ref="0x7f95d5dbd6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f95d583f390" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f95d58210e0" loc="95:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f95d58218f0" loc="105:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f95d581f790" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f95d581f020" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f95d5829120" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f95d5828560" loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f95d58262a0" loc="94:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f95d5826020" loc="94:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f95d5828de0" loc="79:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f95d5829c90" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f95d5829a10" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f95d5826b00" loc="100:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f95d58276e0" loc="85:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f95d5831990" loc="71:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f95d5830350" loc="81:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f95d5831020" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f95d5835c30" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f95d582f020" loc="91:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f95d5830c50" loc="91:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f95d5834c60" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f95d582da60" loc="69:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f95d582d7e0" loc="69:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f95d582c5c0" loc="80:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f95d582c340" loc="80:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f95d56f5c40" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f95d56f5670" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f95d56f59b0" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f95d56f0a70" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f95d56f07f0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f95d56ef890" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f95d56ef2c0" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f95d56ef600" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f95d56f2610" loc="65:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f95d56ee2c0" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f95d56ed820" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f95d56edb60" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f95d56ee020" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f95d56f0020" loc="72:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f95d56f4610" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f95d56f3bd0" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f95d56f4020" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f95d56f4370" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f95d56cd5b0" loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f95d56cd330" loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f95d56cddf0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f95d56cccf0" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f95d56cc700" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f95d56cca60" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f95d56cab50" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f95d5671270" loc="53:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f95d5671ba0" loc="61:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f95d566d070" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f95d5696450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f95d5696870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f95d56759c0" loc="120:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f95d5676990" loc="97:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f95d5676020" loc="88:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f95d56751f0" loc="102:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f95d5674470" loc="128:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f95d5666510" loc="65:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f95d5669cc0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f95d565e2a0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f95d565e020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f95d565f780" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f95d5639af0" loc="213:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f95d5644790" loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f95d5651530" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f95d56c53b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f95d56c5bf0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f95d56512b0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f95d56c53b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f95d56c5bf0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f95d5647870" loc="123:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f95d564ea40" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f95d56c0360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f95d56c0ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f95d564e7c0" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f95d56c0360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f95d56c0ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f95d563ee70" loc="180:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f95d563a480" loc="197:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f95d564e020" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f95d56c3290"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f95d56c3a20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f95d564d270" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f95d56c0360"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f95d56c0ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f95d5649020" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f95d564ad30" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f95d564a610" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f95d563e740" loc="179:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f95d5650780" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f95d56c3290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f95d56c3a20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f95d5650500" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f95d56c3290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f95d56c3a20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f95d564c420" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f95d563c5d0" loc="181:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f95d564ce00" loc="90:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f95d564cb80" loc="90:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f95d5648910" loc="113:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f95d56470e0" loc="118:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f95d563f840" loc="177:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f95d5642790" loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f95d56457e0" loc="133:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f95d563e020" loc="178:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f95d5643020" loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f95d563ccf0" loc="182:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f95d5649800" loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f95d56ce330"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f95d56c7a50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f95d563b4c0" loc="187:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f95d5639350" loc="207:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f95d564dc10" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f95d564d990" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f95d56374d0" loc="224:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f95d5637250" loc="224:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f95d5651d10" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f95d56c53b0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f95d56c5bf0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f95d5645020" loc="128:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f95d5643770" loc="153:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f95d563f020" loc="174:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f95d5696450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f95d5696870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f95d5640cf0" loc="174:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f95d5696450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f95d5696870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f95d56402a0" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f95d56a9420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f95d56a9840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f95d5640020" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f95d56a9420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f95d56a9840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f95d5637d90" loc="231:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f95d563bcb0" loc="192:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f95d5648070" loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f95d563abe0" loc="202:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f95d5642020" loc="158:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f95d5644020" loc="138:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f95d55bf030" loc="95:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f95d55bf880" loc="105:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f95d5519020" loc="90:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f95d5519880" loc="98:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f95d6ae7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f95d55024a0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f95d54e9900" loc="56:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f95d54e8a20" loc="73:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f95d54e9070" loc="46:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f95d54e81f0" loc="65:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f95d54e6390" loc="81:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f95d54dcb60" loc="79:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f95d54e5b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f95d54dc8e0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f95d54e5b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f95d54e1b90" loc="53:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f95d54de6f0" loc="62:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f95d54e5b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f95d54de470" loc="62:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f95d54e5b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f95d54dc030" loc="70:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f95d54e5b40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f95d546f4b0" loc="62:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BigQueue" loc="43:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-09-19 17:29:17 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f95d54092a0" loc="43:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <interfacedef-ref qname="BigQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f95d54092a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f95d5406ac0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f95d54092a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f95d5405cb0" loc="97:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param newVal - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f95d6482cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f95d54092a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f95d5405a30" loc="97:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f95d54092a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f95d5404720" loc="108:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f95d54092a0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f95d54044a0" loc="108:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f95d5408350" loc="57:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f95d5406350" loc="72:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f95d54052b0" loc="88:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f95d54092a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f95d5409b50" loc="50:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f95d648b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f95d5408ae0" loc="65:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f95d6ae7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f95d53e22a0" loc="49:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f95d53e2020" loc="49:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
