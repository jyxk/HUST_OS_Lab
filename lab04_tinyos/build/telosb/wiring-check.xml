<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="63:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7feea766d790"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7feea7864df0"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7feea7864df0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7feea7696590"/></to>
    </wire>
    <wire loc="65:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7feea767c7f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feea723f370"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feea723f370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7feea73e1610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7feea7679cb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feea7239c90"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feea7239c90"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7feea73e1610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x7feea7673190"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feea72326d0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feea72326d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7feea73e1610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feea76610d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feea768ab10"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feea768ab10"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feea7652620"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feea7860320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feea6c8cb20"/></to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feea7860320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feea65cbca0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feea7860320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feea711bbc0"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feea7860320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feea6cb4470"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feea7860320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feea73d8400"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7feea7696c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7feea7d533a0"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7feea7d533a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7feea78fe140"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7feea76956c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feea7862300"/></to>
    </wire>
    <wire loc="48:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feea7862300"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feea785b510"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feea7695dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7feea7860320"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7feea785bc20"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7feea785c910"/></to>
    </wire>
    <wire loc="46:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7feea785c910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feea783c850"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7feea785a380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feea785d6d0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7feea785aa60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feea762add0"/></to>
    </wire>
    <wire loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feea783c850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feea7823c00"/></to>
    </wire>
    <wire loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7feea7833de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7feea7822350"/></to>
    </wire>
    <wire loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7feea79d64c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7feea7821680"/></to>
    </wire>
    <wire loc="113:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7feea77de5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feea771b6d0"/></to>
    </wire>
    <wire loc="126:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7feea77cc020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feea7714b30"/></to>
    </wire>
    <wire loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7feea77d5700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feea7721160"/></to>
    </wire>
    <wire loc="149:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7feea77b9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feea76facb0"/></to>
    </wire>
    <wire loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7feea77dcaa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feea7722480"/></to>
    </wire>
    <wire loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7feea77bf020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feea76fa020"/></to>
    </wire>
    <wire loc="170:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7feea77b6a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feea76e3cb0"/></to>
    </wire>
    <wire loc="154:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7feea77c65a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feea76f4220"/></to>
    </wire>
    <wire loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7feea77dfb10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feea77719d0"/></to>
    </wire>
    <wire loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7feea77bba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feea77092f0"/></to>
    </wire>
    <wire loc="134:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7feea77c13e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feea770a610"/></to>
    </wire>
    <wire loc="133:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7feea77cb5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feea770b220"/></to>
    </wire>
    <wire loc="115:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7feea77d4700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feea77197a0"/></to>
    </wire>
    <wire loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7feea77b8a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feea76f22f0"/></to>
    </wire>
    <wire loc="140:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7feea77cabe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feea77046d0"/></to>
    </wire>
    <wire loc="114:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7feea77db890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feea771aac0"/></to>
    </wire>
    <wire loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7feea77ef060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feea777f540"/></to>
    </wire>
    <wire loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7feea77bfda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feea76f3610"/></to>
    </wire>
    <wire loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7feea77e50c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feea7723020"/></to>
    </wire>
    <wire loc="161:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7feea77c5a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feea76ec6d0"/></to>
    </wire>
    <wire loc="101:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7feea77cf6d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feea7729a90"/></to>
    </wire>
    <wire loc="142:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7feea77baa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feea77027a0"/></to>
    </wire>
    <wire loc="100:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7feea77d7cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feea772ade0"/></to>
    </wire>
    <wire loc="141:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7feea77c01f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feea7703ac0"/></to>
    </wire>
    <wire loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7feea77b7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feea76ea7a0"/></to>
    </wire>
    <wire loc="147:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7feea77c70c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feea76fcb30"/></to>
    </wire>
    <wire loc="120:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7feea77ce6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feea77773e0"/></to>
    </wire>
    <wire loc="162:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7feea77beb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feea76ebac0"/></to>
    </wire>
    <wire loc="128:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7feea77bca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feea7712cb0"/></to>
    </wire>
    <wire loc="169:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7feea77bda20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feea76e3020"/></to>
    </wire>
    <wire loc="127:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7feea77c2570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feea7712020"/></to>
    </wire>
    <wire loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7feea77c3020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7feea76e5b30"/></to>
    </wire>
    <wire loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7feea777d450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feea777ed80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7feea777daa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7feea76deaa0"/></to>
    </wire>
    <wire loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7feea777c120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7feea76da260"/></to>
    </wire>
    <wire loc="102:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feea7728930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feea777f540"/></to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feea7726020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feea777ed80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feea7720020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feea777f540"/></to>
    </wire>
    <wire loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feea771e7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feea777ed80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feea7718610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feea777f540"/></to>
    </wire>
    <wire loc="117:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feea7717c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feea777ed80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7feea77752f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feea7776bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7feea7775940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7feea76da9f0"/></to>
    </wire>
    <wire loc="123:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7feea7774020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7feea76d9240"/></to>
    </wire>
    <wire loc="129:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feea7711b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feea77773e0"/></to>
    </wire>
    <wire loc="130:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feea770f2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feea7776bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feea7708160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feea77773e0"/></to>
    </wire>
    <wire loc="137:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feea77077a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feea7776bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feea7701610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feea77773e0"/></to>
    </wire>
    <wire loc="144:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feea7700c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feea7776bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feea76f9b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feea77773e0"/></to>
    </wire>
    <wire loc="151:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feea76f72f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feea7776bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feea76f1160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feea77773e0"/></to>
    </wire>
    <wire loc="158:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feea76f07a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feea7776bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feea76e9610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feea77773e0"/></to>
    </wire>
    <wire loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feea76e8c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feea7776bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feea76e2b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feea77773e0"/></to>
    </wire>
    <wire loc="172:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7feea76e02f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7feea7776bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7feea7dc24f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feea78fc040"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7feea78f8490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7feea7cea3b0"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feea762add0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feea7652020"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7feea764ab50"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7feea76535a0"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7feea76535a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7feea7413020"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7feea7650e30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7feea762c830"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7feea762c830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7feea73feb90"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7feea7649020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7feea762bb50"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7feea762bb50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7feea73f9710"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7feea74022f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7feea75d3200"/></to>
    </wire>
    <wire loc="486:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7feea75d3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74af740"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7feea73fdde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7feea75d1200"/></to>
    </wire>
    <wire loc="487:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7feea75d1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74aa100"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7feea73f8930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7feea75cf200"/></to>
    </wire>
    <wire loc="488:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7feea75cf200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74a6d10"/></to>
    </wire>
    <wire loc="442:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7feea7614020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7548100"/></to>
    </wire>
    <wire loc="455:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7feea7600020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7519d10"/></to>
    </wire>
    <wire loc="531:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7feea75b6560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea750bd10"/></to>
    </wire>
    <wire loc="551:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7feea7591570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea747f100"/></to>
    </wire>
    <wire loc="532:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7feea75b4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7506740"/></to>
    </wire>
    <wire loc="460:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7feea75fb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea750f100"/></to>
    </wire>
    <wire loc="473:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7feea75e7200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74dfe00"/></to>
    </wire>
    <wire loc="497:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7feea75c2200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7489d10"/></to>
    </wire>
    <wire loc="535:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7feea75ae580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74fcd10"/></to>
    </wire>
    <wire loc="545:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7feea759e570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea749c100"/></to>
    </wire>
    <wire loc="557:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7feea7589580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea747bd10"/></to>
    </wire>
    <wire loc="445:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7feea760e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea753a100"/></to>
    </wire>
    <wire loc="536:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7feea75ac580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74f7740"/></to>
    </wire>
    <wire loc="450:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7feea760a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7531740"/></to>
    </wire>
    <wire loc="463:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7feea75f5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7500100"/></to>
    </wire>
    <wire loc="476:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7feea75e1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74d1d10"/></to>
    </wire>
    <wire loc="489:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7feea75cc200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74a1740"/></to>
    </wire>
    <wire loc="500:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7feea75bc200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea747bd10"/></to>
    </wire>
    <wire loc="440:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7feea7618020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7553d10"/></to>
    </wire>
    <wire loc="453:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7feea7604020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7522860"/></to>
    </wire>
    <wire loc="466:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7feea75ef020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74f2100"/></to>
    </wire>
    <wire loc="530:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7feea75b8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea750bd10"/></to>
    </wire>
    <wire loc="548:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7feea7597570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea748d100"/></to>
    </wire>
    <wire loc="555:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7feea758b570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea747bd10"/></to>
    </wire>
    <wire loc="541:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7feea75a4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74b4d10"/></to>
    </wire>
    <wire loc="471:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7feea75eb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74e9a60"/></to>
    </wire>
    <wire loc="484:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7feea75d7200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74b8100"/></to>
    </wire>
    <wire loc="495:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7feea75c6200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7492740"/></to>
    </wire>
    <wire loc="549:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7feea7595570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7489d10"/></to>
    </wire>
    <wire loc="538:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7feea75aa570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74c3d10"/></to>
    </wire>
    <wire loc="443:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7feea7612020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7544d10"/></to>
    </wire>
    <wire loc="456:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7feea75fe020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7514740"/></to>
    </wire>
    <wire loc="493:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7feea75ca200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea749c100"/></to>
    </wire>
    <wire loc="461:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7feea75f9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea750bd10"/></to>
    </wire>
    <wire loc="474:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7feea75e5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74da740"/></to>
    </wire>
    <wire loc="498:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7feea75c0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7484740"/></to>
    </wire>
    <wire loc="540:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7feea75a6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74b8100"/></to>
    </wire>
    <wire loc="438:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7feea7625020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea755c6d0"/></to>
    </wire>
    <wire loc="451:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7feea7608020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea752c100"/></to>
    </wire>
    <wire loc="464:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7feea75f3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74fcd10"/></to>
    </wire>
    <wire loc="477:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7feea75df200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74cc740"/></to>
    </wire>
    <wire loc="542:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7feea75a2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74f2100"/></to>
    </wire>
    <wire loc="546:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7feea759b570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7498d10"/></to>
    </wire>
    <wire loc="552:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7feea758f570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea747bd10"/></to>
    </wire>
    <wire loc="482:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7feea75db200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74c3d10"/></to>
    </wire>
    <wire loc="543:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7feea75a0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74eed10"/></to>
    </wire>
    <wire loc="441:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7feea7616020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea754d740"/></to>
    </wire>
    <wire loc="454:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7feea7602020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea751d270"/></to>
    </wire>
    <wire loc="467:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7feea75ed020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74eed10"/></to>
    </wire>
    <wire loc="539:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7feea75a8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74be740"/></to>
    </wire>
    <wire loc="550:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7feea7593570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7484740"/></to>
    </wire>
    <wire loc="472:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7feea75e9200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74e4460"/></to>
    </wire>
    <wire loc="485:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7feea75d5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74b4d10"/></to>
    </wire>
    <wire loc="496:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7feea75c4200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea748d100"/></to>
    </wire>
    <wire loc="444:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7feea7610020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea753f740"/></to>
    </wire>
    <wire loc="494:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7feea75c8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7498d10"/></to>
    </wire>
    <wire loc="449:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7feea760c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7536d10"/></to>
    </wire>
    <wire loc="462:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7feea75f7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7506740"/></to>
    </wire>
    <wire loc="475:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7feea75e3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74d5100"/></to>
    </wire>
    <wire loc="499:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7feea75be200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea747f100"/></to>
    </wire>
    <wire loc="439:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7feea761a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7557100"/></to>
    </wire>
    <wire loc="452:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7feea7606020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7527d10"/></to>
    </wire>
    <wire loc="465:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7feea75f1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74f7740"/></to>
    </wire>
    <wire loc="478:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7feea75dd200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74c7100"/></to>
    </wire>
    <wire loc="534:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7feea75b0560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7500100"/></to>
    </wire>
    <wire loc="547:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7feea7599570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7492740"/></to>
    </wire>
    <wire loc="533:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7feea75b2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea7500100"/></to>
    </wire>
    <wire loc="483:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7feea75d9200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74be740"/></to>
    </wire>
    <wire loc="554:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7feea758d570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea747f100"/></to>
    </wire>
    <wire loc="558:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7feea7587580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea74a1740"/></to>
    </wire>
    <wire loc="529:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7feea75ba1f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feea750f100"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7feea73e1610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7feea73d71d0"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7feea73d71d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feea7260150"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feea73d8400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feea72db020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7feea73cea80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7feea7252790"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feea72db020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feea67b0c40"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7feea725a640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feea72af2f0"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7feea72aa850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feea72db870"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7feea72db870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feea67a9890"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feea7251a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feea7354900"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feea7354900"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feea7338cf0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feea67b0c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feea6793660"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7feea67a20a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feea67ae4f0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7feea67ae4f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feea6792020"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feea67a5c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feea7354900"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feea678e190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7feea6798340"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feea6798340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7feea73af8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feea678d770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feea6797a80"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feea6797a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feea73ac560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feea678ca80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7feea6796da0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feea6796da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7feea73aa020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feea73af8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7feea77ce6c0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feea73ac560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7feea77cc020"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feea73aa020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7feea77c2570"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feea73af8b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7feea77ce6c0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feea73ac560"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7feea77cabe0"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feea73aa020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7feea77c01f0"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feea73af8b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7feea77ce6c0"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feea73ac560"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7feea77c70c0"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feea73aa020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7feea77bf020"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feea73af8b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7feea77ce6c0"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feea73ac560"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7feea77c65a0"/></to>
    </wire>
    <wire loc="76:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feea73aa020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7feea77bfda0"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feea73af8b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7feea77ce6c0"/></to>
    </wire>
    <wire loc="79:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feea73ac560"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7feea77c5a50"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feea73aa020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7feea77beb80"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feea73af8b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7feea77ce6c0"/></to>
    </wire>
    <wire loc="83:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feea73ac560"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7feea77c3020"/></to>
    </wire>
    <wire loc="84:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7feea73aa020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7feea77bda20"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7feea731a0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7feea7352990"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7feea7352990"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feea734cb80"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7feea733dc50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7feea77ce6c0"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7feea72a69c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feea7dc24f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7feea7255a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feea7dc24f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7feea6cb35a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7feea6cde720"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7feea6cac020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7feea6ce5020"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7feea6ce5020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7feea66f4750"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7feea6cacc70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feea6ce5c30"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7feea6ce5c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feea71807e0"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7feea6c8f7e0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7feea6cb1c90"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7feea71807e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feea7120400"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7feea6ce48b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feea717f470"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7feea717f470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feea7122cb0"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7feea6ce2020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feea717db20"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feea717db20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feea711f060"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7feea66f3460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feea71ddcf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7feea66f20e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feea717f470"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7feea71ddcf0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feea7191580"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7feea718f400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7feea71863f0"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7feea71863f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7feea71767d0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7feea718e060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feea717f470"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7feea718d720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feea71807e0"/></to>
    </wire>
    <wire loc="169:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7feea718c480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feea7dc24f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7feea718cc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feea7dc24f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7feea71813b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feea71182f0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7feea71182f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feea7108450"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feea71801d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feea71226c0"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feea711bbc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feea7109d60"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feea7115940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feea717a620"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feea711f9f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feea7117e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feea711d760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feea7117320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7feea7115020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7feea6cfd8d0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7feea7117e10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feea6fd5830"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feea7117320"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feea6fd5110"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7feea6fd4760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7feea7115020"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feea7100dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feea7115940"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feea6fd2590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feea7115940"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feea6fc9cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feea7115940"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7feea6fd30e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7feea70fead0"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7feea6fd39d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7feea71014a0"/></to>
    </wire>
    <wire loc="77:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7feea70f8e30"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7feea6fceb70"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7feea70f3e00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7feea6fa3080"/></to>
    </wire>
    <wire loc="17:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7feea6fa3080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7feea6d0f0c0"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7feea6fc0d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7feea6fa3890"/></to>
    </wire>
    <wire loc="13:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7feea6fa3890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7feea6d16440"/></to>
    </wire>
    <wire loc="332:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7feea70a0e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feea7dc24f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7feea70d8d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feea7dc24f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7feea70a3400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feea7dc24f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7feea709c0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feea7dc24f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7feea6fd1c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feea7dc24f0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7feea6fd0480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feea7dc24f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7feea6fa1020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7feea6d15440"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7feea6d15440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7feea6f37210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7feea6d16440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7feea6f3ab50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7feea6d13020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7feea6d0f920"/></to>
    </wire>
    <wire loc="19:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feea6d0e020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feea6d17020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feea6d17020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feea6f3d320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7feea6d17c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7feea6635020"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7feea6635020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7feea6dded50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7feea6f34600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7feea6d13020"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7feea662f440"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7feea6f38dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7feea6f35370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feea6636340"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feea6636340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feea6ddfa60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7feea6f30be0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7feea6630c10"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7feea6630c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7feea6de3ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7feea6f38dd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7feea6eabe70"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7feea6f37210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7feea6ea9890"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7feea6f3ab50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7feea6eaa790"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feea6f3d320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feea6eab0d0"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7feea6ea63e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7feea6f34600"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7feea6ea75b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7feea6f35370"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7feea6ea15b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7feea6f30be0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7feea6ea6a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7feea6e94550"/></to>
    </wire>
    <wire loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7feea6e94550"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7feea6e89cc0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feea6ea0020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feea6dfa110"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feea6dfa110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7feea7352990"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feea6e9e120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feea768ab10"/></to>
    </wire>
    <wire loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7feea6e8d080"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7feea6e84910"/></to>
    </wire>
    <wire loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7feea6e91ca0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7feea6e89410"/></to>
    </wire>
    <wire loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7feea6e83210"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7feea75a8580"/></to>
    </wire>
    <wire loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7feea6e811f0"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7feea75a6580"/></to>
    </wire>
    <wire loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7feea6e7f1f0"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7feea75a4580"/></to>
    </wire>
    <wire loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7feea6e7d1f0"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7feea75a0580"/></to>
    </wire>
    <wire loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7feea6e7b1f0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7feea75a2580"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7feea6634020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7feea6e94550"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7feea66357c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7feea6ddd590"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7feea6ddd590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7feea6d4a060"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7feea6ddc370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7feea662f440"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7feea6dded50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7feea6d4dbf0"/></to>
    </wire>
    <wire loc="106:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7feea6d4dbf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7feea65c73a0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7feea6de3ce0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7feea6dd95c0"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feea6ddfa60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feea6d4ee60"/></to>
    </wire>
    <wire loc="105:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feea6d4ee60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feea65c8540"/></to>
    </wire>
    <wire loc="108:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7feea6d4a060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7feea65c58b0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7feea6dc7690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7feea6e8d080"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7feea6d4a930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7feea6ddc370"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7feea6dc64b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7feea6d4a060"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7feea6d309d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7feea6d4c400"/></to>
    </wire>
    <wire loc="107:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7feea6d4c400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7feea65c7b20"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7feea6d45b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7feea6e91ca0"/></to>
    </wire>
    <wire loc="109:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7feea65c4210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7feea6d4a930"/></to>
    </wire>
    <wire loc="111:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7feea65c49d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7feea65ca330"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7feea65c2c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feea7dc24f0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7feea65923a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7feea6d45b20"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7feea6592b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7feea6d30400"/></to>
    </wire>
    <wire loc="84:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7feea65910f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7feea6d309d0"/></to>
    </wire>
    <wire loc="85:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7feea6591d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7feea6d2f720"/></to>
    </wire>
    <wire loc="114:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7feea6ca6020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feea7dc24f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7feea6c88300"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7feea6c8f7e0"/></to>
    </wire>
    <wire loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7feea6c800f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7feea7864df0"/></to>
    </wire>
    <wire loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7feea6c80810"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feea71813b0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/jyxk/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/jyxk/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/jyxk/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BlinkC" loc="51:BlinkC.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/jyxk/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7689680"/>
            <typename><typedef-ref name="T32khz" ref="0x7feea76899f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7689680"/>
            <typename><typedef-ref name="T32khz" ref="0x7feea76899f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7689680"/>
            <typename><typedef-ref name="T32khz" ref="0x7feea76899f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7689680"/>
            <typename><typedef-ref name="T32khz" ref="0x7feea76899f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7feea787b550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/jyxk/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7feea77b1890" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7feea77b1c30" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7feea77b0020" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7feea77b03a0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7feea77b0720" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7feea77b0a90" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7feea77b0e20" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7feea77ae200" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7feea77ae5d0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7feea7773e80" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7feea7770270" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7feea7582a10" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7feea7582dc0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7feea75811a0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7feea7581550" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7feea75818c0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7feea738dcc0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7feea738dcc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7feea734da40" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7feea734da40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7feea7337570" loc="55:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7feea7337570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7feea7337d40" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7feea7337d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7feea7335160" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7feea7335160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7feea7335940" loc="58:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7feea7335940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7feea7335d10" loc="59:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7feea7334540" loc="60:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7feea7334540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7feea735a6e0" loc="52:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7feea735a6e0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7feea7313020" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7feea7313020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7feea7313410" loc="54:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7feea7313410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7feea7313bf0" loc="55:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7feea7313bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7feea7311020" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feea72d7cd0" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feea72d7cd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feea72a1230" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feea72a1230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7feea72a1560" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feea7253de0" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feea7253de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7feea72298c0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7feea787b550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7feea71f90d0" loc="43:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7feea787b550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7feea71d50d0" loc="45:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7feea6dc0020" loc="89:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7feea6db40d0" loc="42:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7feea6d99800" loc="52:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/jyxk/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7feea6ce04a0" loc="42:/home/jyxk/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7feea6ce04a0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7feea6ce0820" loc="42:/home/jyxk/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7feea7860320" loc="58:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7feea7860320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea78606a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7feea7864df0" loc="57:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7feea7864df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7feea78631c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feea7862300" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feea7862300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea7862680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7feea785a380" loc="6:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7feea785a380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea785a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feea785b510" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feea785b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea785b890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7feea785bc20" loc="5:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7feea785bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea785a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7feea785aa60" loc="7:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7feea785aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea785ade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feea785d6d0" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feea785d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea785da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7feea785c910" loc="39:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7feea785c910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea785cc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7feea7833de0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7feea7833de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7feea7838c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7feea7838310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7feea78384a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7feea7838630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7feea7838180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7feea78387c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7feea7838950"/>
        <function-ref name="initClocks" scoped="" ref="0x7feea7838ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feea783c850" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feea783c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea783cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7feea7822350" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7feea7822350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7feea7821340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7feea7822860"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7feea78229f0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7feea7822b80"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7feea78226d0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7feea7822d10"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7feea7821020"/>
        <function-ref name="initClocks" scoped="" ref="0x7feea78211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7feea7821680" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7feea7821680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7feea7821a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feea7823c00" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feea7823c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea7822020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7feea77de5a0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7feea77de5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea77de920"/>
        <function-ref name="getControl" scoped="" ref="0x7feea77deab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea77dec40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea77dedd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea77dd020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea77dd1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea77dd340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea77dd4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7feea77dd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7feea77cc020" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7feea77cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea77cc3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7feea77cc530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea77cc6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea77cc850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea77cc9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea77ccb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea77ccd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea77cb020"/>
        <function-ref name="setControl" scoped="" ref="0x7feea77cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7feea77d5700" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7feea77d5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77d5a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea77d5c10"/>
        <function-ref name="captured" scoped="" ref="0x7feea77d5da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea77d4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77d41b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea77d4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7feea77b9a20" loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7feea77b9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77b9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea77b8020"/>
        <function-ref name="captured" scoped="" ref="0x7feea77b81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea77b8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77b84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea77b8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7feea77dcaa0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7feea77dcaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77dce20"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea77db020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea77db1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea77db340"/>
        <function-ref name="fired" scoped="" ref="0x7feea77db4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7feea77bf020" loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7feea77bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77bf3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea77bf530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea77bf6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea77bf850"/>
        <function-ref name="fired" scoped="" ref="0x7feea77bf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7feea77b6a20" loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7feea77b6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77b6da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea77b5020"/>
        <function-ref name="captured" scoped="" ref="0x7feea77b51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea77b5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77b54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea77b5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7feea77c65a0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7feea77c65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea77c6920"/>
        <function-ref name="getControl" scoped="" ref="0x7feea77c6ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea77c6c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea77c6dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea77c5020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea77c51b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea77c5340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea77c54d0"/>
        <function-ref name="setControl" scoped="" ref="0x7feea77c5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7feea77dfb10" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7feea77dfb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea77e6020"/>
        <function-ref name="getControl" scoped="" ref="0x7feea77e61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea77e6340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea77e64d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea77e6660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea77e67f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea77e6980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea77e6b10"/>
        <function-ref name="setControl" scoped="" ref="0x7feea77e6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7feea77bba20" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7feea77bba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77bbda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea77ba020"/>
        <function-ref name="captured" scoped="" ref="0x7feea77ba1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea77ba340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77ba4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea77ba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7feea77c13e0" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7feea77c13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77c1760"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea77c18f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea77c1a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea77c1c10"/>
        <function-ref name="fired" scoped="" ref="0x7feea77c1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7feea77cb5a0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7feea77cb5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea77cba20"/>
        <function-ref name="getControl" scoped="" ref="0x7feea77cbbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea77cbd40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea77ca020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea77ca1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea77ca340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea77ca4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea77ca660"/>
        <function-ref name="setControl" scoped="" ref="0x7feea77ca7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7feea77d4700" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7feea77d4700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77d4a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea77d4c10"/>
        <function-ref name="captured" scoped="" ref="0x7feea77d4da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea77ce020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77ce1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea77ce340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7feea77b8a20" loc="69:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7feea77b8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77b8da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea77b7020"/>
        <function-ref name="captured" scoped="" ref="0x7feea77b71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea77b7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77b74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea77b7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7feea77cabe0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7feea77cabe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea77c9020"/>
        <function-ref name="getControl" scoped="" ref="0x7feea77c91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea77c9340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea77c94d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea77c9660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea77c97f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea77c9980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea77c9b10"/>
        <function-ref name="setControl" scoped="" ref="0x7feea77c9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7feea77db890" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7feea77db890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77dbc10"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea77dbda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea77d6020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea77d61b0"/>
        <function-ref name="fired" scoped="" ref="0x7feea77d6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7feea77ef060" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7feea77ef060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea77ef3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea77ef570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea77ef700"/>
        <function-ref name="get" scoped="" ref="0x7feea77ef890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea77efa20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea77efbb0"/>
        <function-ref name="getMode" scoped="" ref="0x7feea77efd40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77ee020"/>
        <function-ref name="overflow" scoped="" ref="0x7feea77ee1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7feea77ee340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea77ee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7feea77bfda0" loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7feea77bfda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77be180"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea77be310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea77be4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea77be630"/>
        <function-ref name="fired" scoped="" ref="0x7feea77be7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7feea77e50c0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7feea77e50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea77e5440"/>
        <function-ref name="getControl" scoped="" ref="0x7feea77e55d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea77e5760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea77e58f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea77e5a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea77e5c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea77e5da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea77de020"/>
        <function-ref name="setControl" scoped="" ref="0x7feea77de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7feea77c5a50" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7feea77c5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea77c5dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7feea77c4020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea77c41b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea77c4340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea77c44d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea77c4660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea77c47f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea77c4980"/>
        <function-ref name="setControl" scoped="" ref="0x7feea77c4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7feea77cf6d0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7feea77cf6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77cfa50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea77cfbe0"/>
        <function-ref name="captured" scoped="" ref="0x7feea77cfd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea77d5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77d51b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea77d5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7feea77baa20" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7feea77baa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77bada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea77b9020"/>
        <function-ref name="captured" scoped="" ref="0x7feea77b91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea77b9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77b94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea77b9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7feea77d7cf0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7feea77d7cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77dc0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea77dc230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea77dc3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea77dc550"/>
        <function-ref name="fired" scoped="" ref="0x7feea77dc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7feea77c01f0" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7feea77c01f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77c0570"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea77c0700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea77c0890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea77c0a20"/>
        <function-ref name="fired" scoped="" ref="0x7feea77c0bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7feea77b7a20" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7feea77b7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77b7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea77b6020"/>
        <function-ref name="captured" scoped="" ref="0x7feea77b61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea77b6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77b64d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea77b6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7feea77c70c0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7feea77c70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea77c7440"/>
        <function-ref name="getControl" scoped="" ref="0x7feea77c75d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea77c7760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea77c78f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea77c7a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea77c7c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea77c7da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea77c6020"/>
        <function-ref name="setControl" scoped="" ref="0x7feea77c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7feea77ce6c0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7feea77ce6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea77cea40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea77cebd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea77ced60"/>
        <function-ref name="get" scoped="" ref="0x7feea77cd020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea77cd1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea77cd340"/>
        <function-ref name="getMode" scoped="" ref="0x7feea77cd4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77cd660"/>
        <function-ref name="overflow" scoped="" ref="0x7feea77cd7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7feea77cd980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea77cdb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7feea77beb80" loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7feea77beb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77bd020"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea77bd1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea77bd340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea77bd4d0"/>
        <function-ref name="fired" scoped="" ref="0x7feea77bd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7feea77bca20" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7feea77bca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77bcda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea77bb020"/>
        <function-ref name="captured" scoped="" ref="0x7feea77bb1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea77bb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77bb4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea77bb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7feea77bda20" loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7feea77bda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77bc020"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea77bc1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea77bc340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea77bc4d0"/>
        <function-ref name="fired" scoped="" ref="0x7feea77bc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7feea77c2570" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7feea77c2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77c28f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea77c2a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea77c2c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea77c2da0"/>
        <function-ref name="fired" scoped="" ref="0x7feea77c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7feea77c3020" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7feea77c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea77c33a0"/>
        <function-ref name="getControl" scoped="" ref="0x7feea77c3530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea77c36c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea77c3850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea77c39e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea77c3b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea77c3d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea77c2020"/>
        <function-ref name="setControl" scoped="" ref="0x7feea77c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7feea777daa0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7feea777daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea777de20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7feea777d450" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7feea777d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea777d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7feea777c120" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7feea777c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea777c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7feea777ed80" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feea777ed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea777d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feea777f540" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feea777f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea777f8c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea777fa50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea777fbe0"/>
        <function-ref name="get" scoped="" ref="0x7feea777fd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea777e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea777e1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7feea777e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea777e4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7feea777e660"/>
        <function-ref name="setMode" scoped="" ref="0x7feea777e7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea777e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7feea7775940" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7feea7775940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea7775cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7feea77752f0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7feea77752f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea7775670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7feea7774020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7feea7774020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea77743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7feea7776bf0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feea7776bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea7775020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feea77773e0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feea77773e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea7777760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea77778f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea7777a80"/>
        <function-ref name="get" scoped="" ref="0x7feea7777c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea7777da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea7776020"/>
        <function-ref name="getMode" scoped="" ref="0x7feea77761b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea7776340"/>
        <function-ref name="overflow" scoped="" ref="0x7feea77764d0"/>
        <function-ref name="setMode" scoped="" ref="0x7feea7776660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea77767f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feea7729a90" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feea7729a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea7729e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea7728020"/>
        <function-ref name="captured" scoped="" ref="0x7feea77281b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea7728340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77284d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea7728660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feea77719d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feea77719d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea7771d50"/>
        <function-ref name="getControl" scoped="" ref="0x7feea772a020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea772a1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea772a340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea772a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea772a660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea772a7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea772a980"/>
        <function-ref name="setControl" scoped="" ref="0x7feea772ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feea7726020" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feea7726020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea77263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feea772ade0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feea772ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea7729180"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea7729310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea77294a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea7729630"/>
        <function-ref name="fired" scoped="" ref="0x7feea77297c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feea7728930" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feea7728930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea7728cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea7728e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea7727020"/>
        <function-ref name="get" scoped="" ref="0x7feea77271b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea7727340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea77274d0"/>
        <function-ref name="getMode" scoped="" ref="0x7feea7727660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77277f0"/>
        <function-ref name="overflow" scoped="" ref="0x7feea7727980"/>
        <function-ref name="setMode" scoped="" ref="0x7feea7727b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea7727ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feea7721160" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feea7721160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77214e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea7721670"/>
        <function-ref name="captured" scoped="" ref="0x7feea7721800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea7721990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea7721b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea7721cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feea7723020" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feea7723020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea77233a0"/>
        <function-ref name="getControl" scoped="" ref="0x7feea7723530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea77236c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea7723850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea77239e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea7723b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea7723d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea7722020"/>
        <function-ref name="setControl" scoped="" ref="0x7feea77221b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feea771e7a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feea771e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea771eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feea7722480" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feea7722480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea7722800"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea7722990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea7722b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea7722cb0"/>
        <function-ref name="fired" scoped="" ref="0x7feea7722e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feea7720020" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feea7720020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea77203a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea7720530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea77206c0"/>
        <function-ref name="get" scoped="" ref="0x7feea7720850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea77209e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea7720b70"/>
        <function-ref name="getMode" scoped="" ref="0x7feea7720d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea771e020"/>
        <function-ref name="overflow" scoped="" ref="0x7feea771e1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7feea771e340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea771e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feea77197a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feea77197a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea7719b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea7719cb0"/>
        <function-ref name="captured" scoped="" ref="0x7feea7719e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea7718020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77181b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea7718340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feea771b6d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feea771b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea771ba50"/>
        <function-ref name="getControl" scoped="" ref="0x7feea771bbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea771bd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea771a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea771a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea771a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea771a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea771a660"/>
        <function-ref name="setControl" scoped="" ref="0x7feea771a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feea7717c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feea7717c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea7716020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feea771aac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feea771aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea771ae40"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea7719020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea77191b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea7719340"/>
        <function-ref name="fired" scoped="" ref="0x7feea77194d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feea7718610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feea7718610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea7718990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea7718b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea7718cb0"/>
        <function-ref name="get" scoped="" ref="0x7feea7718e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea7717020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea77171b0"/>
        <function-ref name="getMode" scoped="" ref="0x7feea7717340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77174d0"/>
        <function-ref name="overflow" scoped="" ref="0x7feea7717660"/>
        <function-ref name="setMode" scoped="" ref="0x7feea77177f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea7717980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feea7712cb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feea7712cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77110a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea7711230"/>
        <function-ref name="captured" scoped="" ref="0x7feea77113c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea7711550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77116e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea7711870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feea7714b30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feea7714b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea7713020"/>
        <function-ref name="getControl" scoped="" ref="0x7feea77131b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea7713340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea77134d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea7713660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea77137f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea7713980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea7713b10"/>
        <function-ref name="setControl" scoped="" ref="0x7feea7713ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feea770f2f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feea770f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea770f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feea7712020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feea7712020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea77123a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea7712530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea77126c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea7712850"/>
        <function-ref name="fired" scoped="" ref="0x7feea77129e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feea7711b40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feea7711b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea7710020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea77101b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea7710340"/>
        <function-ref name="get" scoped="" ref="0x7feea77104d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea7710660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea77107f0"/>
        <function-ref name="getMode" scoped="" ref="0x7feea7710980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea7710b10"/>
        <function-ref name="overflow" scoped="" ref="0x7feea7710ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7feea7710e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea770f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feea77092f0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feea77092f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea7709670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea7709800"/>
        <function-ref name="captured" scoped="" ref="0x7feea7709990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea7709b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea7709cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea7709e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feea770b220" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feea770b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea770b5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7feea770b730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea770b8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea770ba50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea770bbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea770bd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea770a020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea770a1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7feea770a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feea77077a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feea77077a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea7707b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feea770a610" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feea770a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea770a990"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea770ab20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea770acb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea770ae40"/>
        <function-ref name="fired" scoped="" ref="0x7feea7709020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feea7708160" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feea7708160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea77084e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea7708670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea7708800"/>
        <function-ref name="get" scoped="" ref="0x7feea7708990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea7708b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea7708cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7feea7708e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea7707020"/>
        <function-ref name="overflow" scoped="" ref="0x7feea77071b0"/>
        <function-ref name="setMode" scoped="" ref="0x7feea7707340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea77074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feea77027a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feea77027a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea7702b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea7702cb0"/>
        <function-ref name="captured" scoped="" ref="0x7feea7702e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea7701020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77011b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea7701340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feea77046d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feea77046d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea7704a50"/>
        <function-ref name="getControl" scoped="" ref="0x7feea7704be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea7704d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea7703020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea77031b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea7703340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea77034d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea7703660"/>
        <function-ref name="setControl" scoped="" ref="0x7feea77037f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feea7700c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feea7700c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea76fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feea7703ac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feea7703ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea7703e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea7702020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea77021b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea7702340"/>
        <function-ref name="fired" scoped="" ref="0x7feea77024d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feea7701610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feea7701610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea7701990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea7701b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea7701cb0"/>
        <function-ref name="get" scoped="" ref="0x7feea7701e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea7700020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea77001b0"/>
        <function-ref name="getMode" scoped="" ref="0x7feea7700340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea77004d0"/>
        <function-ref name="overflow" scoped="" ref="0x7feea7700660"/>
        <function-ref name="setMode" scoped="" ref="0x7feea77007f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea7700980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feea76facb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feea76facb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea76f90a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea76f9230"/>
        <function-ref name="captured" scoped="" ref="0x7feea76f93c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea76f9550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea76f96e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea76f9870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feea76fcb30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feea76fcb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea76fb020"/>
        <function-ref name="getControl" scoped="" ref="0x7feea76fb1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea76fb340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea76fb4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea76fb660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea76fb7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea76fb980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea76fbb10"/>
        <function-ref name="setControl" scoped="" ref="0x7feea76fbca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feea76f72f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feea76f72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea76f7670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feea76fa020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feea76fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea76fa3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea76fa530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea76fa6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea76fa850"/>
        <function-ref name="fired" scoped="" ref="0x7feea76fa9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feea76f9b40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feea76f9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea76f8020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea76f81b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea76f8340"/>
        <function-ref name="get" scoped="" ref="0x7feea76f84d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea76f8660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea76f87f0"/>
        <function-ref name="getMode" scoped="" ref="0x7feea76f8980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea76f8b10"/>
        <function-ref name="overflow" scoped="" ref="0x7feea76f8ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7feea76f8e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea76f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feea76f22f0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feea76f22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea76f2670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea76f2800"/>
        <function-ref name="captured" scoped="" ref="0x7feea76f2990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea76f2b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea76f2cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea76f2e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feea76f4220" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feea76f4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea76f45a0"/>
        <function-ref name="getControl" scoped="" ref="0x7feea76f4730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea76f48c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea76f4a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea76f4be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea76f4d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea76f3020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea76f31b0"/>
        <function-ref name="setControl" scoped="" ref="0x7feea76f3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feea76f07a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feea76f07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea76f0b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feea76f3610" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feea76f3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea76f3990"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea76f3b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea76f3cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea76f3e40"/>
        <function-ref name="fired" scoped="" ref="0x7feea76f2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feea76f1160" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feea76f1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea76f14e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea76f1670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea76f1800"/>
        <function-ref name="get" scoped="" ref="0x7feea76f1990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea76f1b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea76f1cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7feea76f1e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea76f0020"/>
        <function-ref name="overflow" scoped="" ref="0x7feea76f01b0"/>
        <function-ref name="setMode" scoped="" ref="0x7feea76f0340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea76f04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feea76ea7a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feea76ea7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea76eab20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea76eacb0"/>
        <function-ref name="captured" scoped="" ref="0x7feea76eae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea76e9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea76e91b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea76e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feea76ec6d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feea76ec6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea76eca50"/>
        <function-ref name="getControl" scoped="" ref="0x7feea76ecbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea76ecd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea76eb020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea76eb1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea76eb340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea76eb4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea76eb660"/>
        <function-ref name="setControl" scoped="" ref="0x7feea76eb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feea76e8c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feea76e8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea76e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feea76ebac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feea76ebac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea76ebe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea76ea020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea76ea1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea76ea340"/>
        <function-ref name="fired" scoped="" ref="0x7feea76ea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feea76e9610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feea76e9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea76e9990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea76e9b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea76e9cb0"/>
        <function-ref name="get" scoped="" ref="0x7feea76e9e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea76e8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea76e81b0"/>
        <function-ref name="getMode" scoped="" ref="0x7feea76e8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea76e84d0"/>
        <function-ref name="overflow" scoped="" ref="0x7feea76e8660"/>
        <function-ref name="setMode" scoped="" ref="0x7feea76e87f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea76e8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feea76e3cb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7feea76e3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea76e20a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7feea76e2230"/>
        <function-ref name="captured" scoped="" ref="0x7feea76e23c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea76e2550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea76e26e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7feea76e2870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7feea76e5b30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7feea76e5b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea76e4020"/>
        <function-ref name="getControl" scoped="" ref="0x7feea76e41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea76e4340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea76e44d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea76e4660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea76e47f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea76e4980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea76e4b10"/>
        <function-ref name="setControl" scoped="" ref="0x7feea76e4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7feea76e02f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7feea76e02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea76e0670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feea76e3020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7feea76e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea76e33a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea76e3530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea76e36c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea76e3850"/>
        <function-ref name="fired" scoped="" ref="0x7feea76e39e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feea76e2b40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feea76e2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea76e1020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea76e11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea76e1340"/>
        <function-ref name="get" scoped="" ref="0x7feea76e14d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea76e1660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea76e17f0"/>
        <function-ref name="getMode" scoped="" ref="0x7feea76e1980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea76e1b10"/>
        <function-ref name="overflow" scoped="" ref="0x7feea76e1ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7feea76e1e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea76e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7feea76d9240" loc="7:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7feea76d9240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea76d95c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7feea76deaa0" loc="4:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7feea76deaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea76dee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7feea76da260" loc="5:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7feea76da260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea76da5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7feea76da9f0" loc="6:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7feea76da9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea76dad70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7feea79d64c0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7feea79d64c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7feea79d6840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7feea7cea3b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7feea7cea3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7feea7cea730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7feea7cea8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7feea7ceaa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7feea7b12be0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7feea7b12be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7feea7c4e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7feea783ab50" loc="39:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7feea783ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7feea76a2b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7feea76a21b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7feea76a2340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7feea76a24d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7feea76a2020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7feea76a2660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7feea76a27f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7feea76a2980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7feea7695dc0" loc="60:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7feea7695dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea7694180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7feea7696590" loc="57:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7feea7696590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7feea7696910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7feea76956c0" loc="59:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7feea76956c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea7695a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7feea7696c00" loc="58:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7feea7696c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea7695020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7feea76951b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7feea7695340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7feea7dc24f0" loc="48:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7feea7dc24f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feea7dc2870"/>
        <function-ref name="runTask" scoped="" ref="0x7feea7dc2a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7feea7d533a0" loc="47:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7feea7d533a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea7d53720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7feea7d538b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7feea7d53a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7feea78fc040" loc="56:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7feea78fc040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feea78fc3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7feea78fc550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7feea78f8490" loc="57:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7feea78f8490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7feea78f8810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7feea78f89a0"/>
        <function-ref name="sleep" scoped="" ref="0x7feea78f8b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7feea78fe140" loc="55:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7feea78fe140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea78fe4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7feea78fe650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7feea78fe7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x7feea767c7f0" loc="53:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer0" scoped="" ref="0x7feea767c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feea767acf0"/>
        <function-ref name="fired" scoped="" ref="0x7feea7686300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feea767a0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feea7686c00"/>
        <function-ref name="getdt" scoped="" ref="0x7feea7679660"/>
        <function-ref name="gett0" scoped="" ref="0x7feea76791e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feea7686780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feea7687480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feea767a6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feea7687950"/>
        <function-ref name="stop" scoped="" ref="0x7feea7687e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7feea766d790" loc="57:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7feea766d790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7feea766db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7feea7679cb0" loc="54:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x7feea7679cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feea7674220"/>
        <function-ref name="fired" scoped="" ref="0x7feea76777c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feea7675590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feea7675110"/>
        <function-ref name="getdt" scoped="" ref="0x7feea7674b20"/>
        <function-ref name="gett0" scoped="" ref="0x7feea76746a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feea7677c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feea7678940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feea7675ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feea7678e10"/>
        <function-ref name="stop" scoped="" ref="0x7feea7677340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feea76610d0" loc="56:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feea76610d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feea7661450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feea76615e0"/>
        <function-ref name="led1On" scoped="" ref="0x7feea7661770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feea7661900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feea7661a90"/>
        <function-ref name="get" scoped="" ref="0x7feea7661c20"/>
        <function-ref name="led1Off" scoped="" ref="0x7feea7661db0"/>
        <function-ref name="led2Off" scoped="" ref="0x7feea766d4d0"/>
        <function-ref name="set" scoped="" ref="0x7feea766d020"/>
        <function-ref name="led0On" scoped="" ref="0x7feea766d1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7feea766d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x7feea7673190" loc="55:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer2" scoped="" ref="0x7feea7673190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feea766f630"/>
        <function-ref name="fired" scoped="" ref="0x7feea7672bf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feea7670990"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feea7670510"/>
        <function-ref name="getdt" scoped="" ref="0x7feea766e020"/>
        <function-ref name="gett0" scoped="" ref="0x7feea766fab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feea7670090"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feea7673d80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feea766f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feea76722a0"/>
        <function-ref name="stop" scoped="" ref="0x7feea7672770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7feea768ab10" loc="46:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feea768ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feea7656020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feea76561b0"/>
        <function-ref name="led1On" scoped="" ref="0x7feea7656340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feea76564d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feea7656660"/>
        <function-ref name="get" scoped="" ref="0x7feea76567f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7feea7656980"/>
        <function-ref name="led2Off" scoped="" ref="0x7feea7655020"/>
        <function-ref name="set" scoped="" ref="0x7feea7656b10"/>
        <function-ref name="led0On" scoped="" ref="0x7feea7656ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7feea7656e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7feea764ab50" loc="50:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7feea764ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea7650020"/>
        <function-ref name="isInput" scoped="" ref="0x7feea76501b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7650340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea76504d0"/>
        <function-ref name="get" scoped="" ref="0x7feea7650660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea76507f0"/>
        <function-ref name="set" scoped="" ref="0x7feea7650980"/>
        <function-ref name="clr" scoped="" ref="0x7feea7650b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feea7652020" loc="46:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feea7652020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea76523a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7feea7650e30" loc="51:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7feea7650e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea764f1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea764f370"/>
        <function-ref name="toggle" scoped="" ref="0x7feea764f500"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea764f690"/>
        <function-ref name="get" scoped="" ref="0x7feea764f820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea764f9b0"/>
        <function-ref name="set" scoped="" ref="0x7feea764fb40"/>
        <function-ref name="clr" scoped="" ref="0x7feea764fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7feea7652620" loc="47:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feea7652620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feea76529a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feea7652b30"/>
        <function-ref name="led1On" scoped="" ref="0x7feea7652cc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feea7652e50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feea7651020"/>
        <function-ref name="get" scoped="" ref="0x7feea76511b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7feea7651340"/>
        <function-ref name="led2Off" scoped="" ref="0x7feea7651980"/>
        <function-ref name="set" scoped="" ref="0x7feea76514d0"/>
        <function-ref name="led0On" scoped="" ref="0x7feea7651660"/>
        <function-ref name="led2On" scoped="" ref="0x7feea76517f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7feea7649020" loc="52:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7feea7649020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea76493a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7649530"/>
        <function-ref name="toggle" scoped="" ref="0x7feea76496c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7649850"/>
        <function-ref name="get" scoped="" ref="0x7feea76499e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7649b70"/>
        <function-ref name="set" scoped="" ref="0x7feea7649d00"/>
        <function-ref name="clr" scoped="" ref="0x7feea7648020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7feea76535a0" loc="41:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7feea76535a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea7653920"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7653ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7653c40"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7653dd0"/>
        <function-ref name="get" scoped="" ref="0x7feea762c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea762c1b0"/>
        <function-ref name="set" scoped="" ref="0x7feea762c340"/>
        <function-ref name="clr" scoped="" ref="0x7feea762c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7feea762c830" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7feea762c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea762cbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea762cd40"/>
        <function-ref name="toggle" scoped="" ref="0x7feea762b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea762b1b0"/>
        <function-ref name="get" scoped="" ref="0x7feea762b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea762b4d0"/>
        <function-ref name="set" scoped="" ref="0x7feea762b660"/>
        <function-ref name="clr" scoped="" ref="0x7feea762b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7feea762add0" loc="44:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feea762add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea7629180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7feea762bb50" loc="43:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7feea762bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea762a020"/>
        <function-ref name="isInput" scoped="" ref="0x7feea762a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea762a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea762a4d0"/>
        <function-ref name="get" scoped="" ref="0x7feea762a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea762a7f0"/>
        <function-ref name="set" scoped="" ref="0x7feea762a980"/>
        <function-ref name="clr" scoped="" ref="0x7feea762ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7feea7614020" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7feea7614020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea76143a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7614530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea76146c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7614850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea76149e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7614b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7614d00"/>
        <function-ref name="get" scoped="" ref="0x7feea7613020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea76131b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7613340"/>
        <function-ref name="set" scoped="" ref="0x7feea76134d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7613660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea76137f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7613a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea7613c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7feea7600020" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7feea7600020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea76003a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7600530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea76006c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7600850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea76009e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7600b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7600d00"/>
        <function-ref name="get" scoped="" ref="0x7feea75ff020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75ff1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75ff340"/>
        <function-ref name="set" scoped="" ref="0x7feea75ff4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75ff660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75ff7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75ffa80"/>
        <function-ref name="clr" scoped="" ref="0x7feea75ffc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7feea75b6560" loc="145:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7feea75b6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75b68e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75b6a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75b6c00"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75b6d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75b5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75b51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75b5340"/>
        <function-ref name="get" scoped="" ref="0x7feea75b54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75b5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75b57f0"/>
        <function-ref name="set" scoped="" ref="0x7feea75b5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75b5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75b5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75b4020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75b41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7feea7591570" loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7feea7591570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75918f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7591a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7591c10"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7591da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7590020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75901b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7590340"/>
        <function-ref name="get" scoped="" ref="0x7feea75904d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea7590660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75907f0"/>
        <function-ref name="set" scoped="" ref="0x7feea7590980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7590b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea7590ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea758f020"/>
        <function-ref name="clr" scoped="" ref="0x7feea758f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7feea75b4580" loc="146:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7feea75b4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75b4900"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75b4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75b4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75b4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75b3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75b31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75b3340"/>
        <function-ref name="get" scoped="" ref="0x7feea75b34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75b3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75b37f0"/>
        <function-ref name="set" scoped="" ref="0x7feea75b3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75b3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75b3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75b2020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75b21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7feea75fb020" loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7feea75fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75fb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75fb530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75fb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75fb850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75fb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75fbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75fbd00"/>
        <function-ref name="get" scoped="" ref="0x7feea75fa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75fa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75fa340"/>
        <function-ref name="set" scoped="" ref="0x7feea75fa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75fa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75fa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75faa80"/>
        <function-ref name="clr" scoped="" ref="0x7feea75fac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7feea75e7200" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7feea75e7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75e7580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75e7710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75e78a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75e7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75e7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75e7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75e6020"/>
        <function-ref name="get" scoped="" ref="0x7feea75e61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75e6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75e64d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75e6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75e67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75e6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75e6c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75e6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7feea75d3200" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7feea75d3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75d3580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75d3710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75d38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75d3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75d3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75d3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75d2020"/>
        <function-ref name="get" scoped="" ref="0x7feea75d21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75d2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75d24d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75d2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75d27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75d2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75d2c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75d2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7feea75c2200" loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7feea75c2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75c2580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75c2710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75c28a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75c2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75c2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75c2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75c1020"/>
        <function-ref name="get" scoped="" ref="0x7feea75c11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75c1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75c14d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75c1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75c17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75c1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75c1c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75c1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7feea75ae580" loc="149:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7feea75ae580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75ae900"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75aea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75aec20"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75aedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75ad020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75ad1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75ad340"/>
        <function-ref name="get" scoped="" ref="0x7feea75ad4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75ad660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75ad7f0"/>
        <function-ref name="set" scoped="" ref="0x7feea75ad980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75adb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75adca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75ac020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7feea759e570" loc="159:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7feea759e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea759e8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea759ea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea759ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7feea759eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea759c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea759c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea759c340"/>
        <function-ref name="get" scoped="" ref="0x7feea759c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea759c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea759c7f0"/>
        <function-ref name="set" scoped="" ref="0x7feea759c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea759cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea759cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea759b020"/>
        <function-ref name="clr" scoped="" ref="0x7feea759b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7feea7589580" loc="171:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7feea7589580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea7589900"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7589a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7589c20"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7589db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7588020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75881b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7588340"/>
        <function-ref name="get" scoped="" ref="0x7feea75884d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea7588660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75887f0"/>
        <function-ref name="set" scoped="" ref="0x7feea7588980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7588b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea7588ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7587020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7feea760e020" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7feea760e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea760e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea760e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea760e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea760e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea760e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea760eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea760ed00"/>
        <function-ref name="get" scoped="" ref="0x7feea760d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea760d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea760d340"/>
        <function-ref name="set" scoped="" ref="0x7feea760d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea760d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea760d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea760da80"/>
        <function-ref name="clr" scoped="" ref="0x7feea760dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7feea75ac580" loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7feea75ac580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75ac900"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75aca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75acc20"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75acdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75ab020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75ab1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75ab340"/>
        <function-ref name="get" scoped="" ref="0x7feea75ab4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75ab660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75ab7f0"/>
        <function-ref name="set" scoped="" ref="0x7feea75ab980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75abb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75abca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75aa020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7feea760a020" loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7feea760a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea760a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea760a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea760a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea760a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea760a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea760ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea760ad00"/>
        <function-ref name="get" scoped="" ref="0x7feea7609020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea76091b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7609340"/>
        <function-ref name="set" scoped="" ref="0x7feea76094d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7609660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea76097f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7609a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea7609c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7feea75f5020" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7feea75f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75f53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75f5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75f56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75f5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75f59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75f5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75f5d00"/>
        <function-ref name="get" scoped="" ref="0x7feea75f4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75f41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75f4340"/>
        <function-ref name="set" scoped="" ref="0x7feea75f44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75f4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75f47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75f4a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea75f4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7feea75e1200" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7feea75e1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75e1580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75e1710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75e18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75e1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75e1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75e1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75e0020"/>
        <function-ref name="get" scoped="" ref="0x7feea75e01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75e0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75e04d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75e0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75e07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75e0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75e0c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75e0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7feea75cc200" loc="100:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7feea75cc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75cc580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75cc710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75cc8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75cca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75ccbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75ccd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75cb020"/>
        <function-ref name="get" scoped="" ref="0x7feea75cb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75cb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75cb4d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75cb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75cb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75cb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75cbc10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75cbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7feea75bc200" loc="111:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7feea75bc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75bc580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75bc710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75bc8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75bca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75bcbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75bcd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75bb020"/>
        <function-ref name="get" scoped="" ref="0x7feea75bb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75bb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75bb4d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75bb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75bb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75bb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75bbc10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75bbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7feea7618020" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7feea7618020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea76183a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7618530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea76186c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7618850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea76189e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7618b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7618d00"/>
        <function-ref name="get" scoped="" ref="0x7feea7617020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea76171b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7617340"/>
        <function-ref name="set" scoped="" ref="0x7feea76174d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7617660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea76177f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7617a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea7617c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7feea7604020" loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7feea7604020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea76044a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7604630"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea76047c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7604950"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7604ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7604c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7604e00"/>
        <function-ref name="get" scoped="" ref="0x7feea7603020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea76031b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7603340"/>
        <function-ref name="set" scoped="" ref="0x7feea76034d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7603660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea76037f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7603a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea7603c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7feea75ef020" loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7feea75ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75ef3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75ef530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75ef6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75ef850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75ef9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75efb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75efd00"/>
        <function-ref name="get" scoped="" ref="0x7feea75ee020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75ee1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75ee340"/>
        <function-ref name="set" scoped="" ref="0x7feea75ee4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75ee660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75ee7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75eea80"/>
        <function-ref name="clr" scoped="" ref="0x7feea75eec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7feea75b8580" loc="144:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7feea75b8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75b8900"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75b8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75b8c20"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75b8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75b7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75b71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75b7340"/>
        <function-ref name="get" scoped="" ref="0x7feea75b74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75b7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75b77f0"/>
        <function-ref name="set" scoped="" ref="0x7feea75b7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75b7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75b7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75b6020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75b61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7feea7597570" loc="162:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7feea7597570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75978f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7597a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7597c10"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7597da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7596020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75961b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7596340"/>
        <function-ref name="get" scoped="" ref="0x7feea75964d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea7596660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75967f0"/>
        <function-ref name="set" scoped="" ref="0x7feea7596980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7596b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea7596ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7595020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7feea758b570" loc="169:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7feea758b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea758b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea758ba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea758bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7feea758bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea758a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea758a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea758a340"/>
        <function-ref name="get" scoped="" ref="0x7feea758a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea758a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea758a7f0"/>
        <function-ref name="set" scoped="" ref="0x7feea758a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea758ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea758aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7589020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7feea75a4580" loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7feea75a4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75a4900"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75a4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75a4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75a4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75a3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75a31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75a3340"/>
        <function-ref name="get" scoped="" ref="0x7feea75a34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75a3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75a37f0"/>
        <function-ref name="set" scoped="" ref="0x7feea75a3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75a3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75a3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75a2020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7feea75eb020" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7feea75eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75eb5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75eb730"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75eb8c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75eba50"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75ebbe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75ebd70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75ea020"/>
        <function-ref name="get" scoped="" ref="0x7feea75ea1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75ea340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75ea4d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75ea660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75ea7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75ea980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75eac10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75eada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7feea75d7200" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7feea75d7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75d7580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75d7710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75d78a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75d7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75d7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75d7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75d6020"/>
        <function-ref name="get" scoped="" ref="0x7feea75d61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75d6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75d64d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75d6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75d67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75d6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75d6c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75d6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7feea75c6200" loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7feea75c6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75c6580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75c6710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75c68a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75c6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75c6bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75c6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75c5020"/>
        <function-ref name="get" scoped="" ref="0x7feea75c51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75c5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75c54d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75c5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75c57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75c5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75c5c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75c5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7feea7595570" loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7feea7595570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75958f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7595a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7595c10"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7595da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7594020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75941b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7594340"/>
        <function-ref name="get" scoped="" ref="0x7feea75944d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea7594660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75947f0"/>
        <function-ref name="set" scoped="" ref="0x7feea7594980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7594b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea7594ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7593020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75931b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7feea75aa570" loc="152:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7feea75aa570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75aa8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75aaa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75aac10"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75aada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75a9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75a91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75a9340"/>
        <function-ref name="get" scoped="" ref="0x7feea75a94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75a9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75a97f0"/>
        <function-ref name="set" scoped="" ref="0x7feea75a9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75a9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75a9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75a8020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7feea7612020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7feea7612020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea76123a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7612530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea76126c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7612850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea76129e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7612b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7612d00"/>
        <function-ref name="get" scoped="" ref="0x7feea7611020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea76111b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7611340"/>
        <function-ref name="set" scoped="" ref="0x7feea76114d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7611660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea76117f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7611a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea7611c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7feea75fe020" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7feea75fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75fe3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75fe530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75fe6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75fe850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75fe9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75feb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75fed00"/>
        <function-ref name="get" scoped="" ref="0x7feea75fd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75fd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75fd340"/>
        <function-ref name="set" scoped="" ref="0x7feea75fd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75fd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75fd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75fda80"/>
        <function-ref name="clr" scoped="" ref="0x7feea75fdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7feea75ca200" loc="104:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7feea75ca200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75ca580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75ca710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75ca8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75caa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75cabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75cad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75c9020"/>
        <function-ref name="get" scoped="" ref="0x7feea75c91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75c9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75c94d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75c9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75c97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75c9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75c9c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75c9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7feea75f9020" loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7feea75f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75f93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75f9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75f96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75f9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75f99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75f9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75f9d00"/>
        <function-ref name="get" scoped="" ref="0x7feea75f8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75f81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75f8340"/>
        <function-ref name="set" scoped="" ref="0x7feea75f84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75f8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75f87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75f8a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea75f8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7feea75e5200" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7feea75e5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75e5580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75e5710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75e58a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75e5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75e5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75e5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75e4020"/>
        <function-ref name="get" scoped="" ref="0x7feea75e41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75e4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75e44d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75e4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75e47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75e4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75e4c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75e4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7feea75d1200" loc="98:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7feea75d1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75d1580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75d1710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75d18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75d1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75d1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75d1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75d0020"/>
        <function-ref name="get" scoped="" ref="0x7feea75d01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75d0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75d04d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75d0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75d07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75d0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75d0c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75d0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7feea75c0200" loc="109:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7feea75c0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75c0580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75c0710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75c08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75c0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75c0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75c0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75bf020"/>
        <function-ref name="get" scoped="" ref="0x7feea75bf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75bf340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75bf4d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75bf660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75bf7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75bf980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75bfc10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75bfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7feea75a6580" loc="154:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7feea75a6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75a6900"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75a6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75a6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75a6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75a5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75a51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75a5340"/>
        <function-ref name="get" scoped="" ref="0x7feea75a54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75a5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75a57f0"/>
        <function-ref name="set" scoped="" ref="0x7feea75a5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75a5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75a5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75a4020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75a41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7feea7625020" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7feea7625020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea76253a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7625530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea76256c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7625850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea76259e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7625b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7625d00"/>
        <function-ref name="get" scoped="" ref="0x7feea7624020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea76241b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7624340"/>
        <function-ref name="set" scoped="" ref="0x7feea76244d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7624660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea76247f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7624a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea7624c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7feea7608020" loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7feea7608020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea76083a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7608530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea76086c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7608850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea76089e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7608b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7608d00"/>
        <function-ref name="get" scoped="" ref="0x7feea7607020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea76071b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7607340"/>
        <function-ref name="set" scoped="" ref="0x7feea76074d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7607660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea76077f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7607a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea7607c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7feea75f3020" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7feea75f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75f33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75f3530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75f36c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75f3850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75f39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75f3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75f3d00"/>
        <function-ref name="get" scoped="" ref="0x7feea75f2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75f21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75f2340"/>
        <function-ref name="set" scoped="" ref="0x7feea75f24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75f2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75f27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75f2a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea75f2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7feea75df200" loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7feea75df200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75df580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75df710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75df8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75dfa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75dfbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75dfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75de020"/>
        <function-ref name="get" scoped="" ref="0x7feea75de1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75de340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75de4d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75de660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75de7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75de980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75dec10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75deda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7feea75a2580" loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7feea75a2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75a2900"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75a2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75a2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75a2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75a1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75a11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75a1340"/>
        <function-ref name="get" scoped="" ref="0x7feea75a14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75a1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75a17f0"/>
        <function-ref name="set" scoped="" ref="0x7feea75a1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75a1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75a1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75a0020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75a01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7feea759b570" loc="160:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7feea759b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea759b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea759ba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea759bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7feea759bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea759a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea759a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea759a340"/>
        <function-ref name="get" scoped="" ref="0x7feea759a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea759a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea759a7f0"/>
        <function-ref name="set" scoped="" ref="0x7feea759a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea759ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea759aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7599020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7feea758f570" loc="166:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7feea758f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea758f8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea758fa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea758fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7feea758fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea758e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea758e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea758e340"/>
        <function-ref name="get" scoped="" ref="0x7feea758e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea758e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea758e7f0"/>
        <function-ref name="set" scoped="" ref="0x7feea758e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea758eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea758eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea758d020"/>
        <function-ref name="clr" scoped="" ref="0x7feea758d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7feea75db200" loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7feea75db200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75db580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75db710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75db8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75dba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75dbbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75dbd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75da020"/>
        <function-ref name="get" scoped="" ref="0x7feea75da1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75da340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75da4d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75da660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75da7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75da980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75dac10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75dada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7feea75a0580" loc="157:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7feea75a0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75a0900"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75a0a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75a0c20"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75a0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea759f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea759f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea759f340"/>
        <function-ref name="get" scoped="" ref="0x7feea759f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea759f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea759f7f0"/>
        <function-ref name="set" scoped="" ref="0x7feea759f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea759fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea759fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea759e020"/>
        <function-ref name="clr" scoped="" ref="0x7feea759e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7feea7616020" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7feea7616020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea76163a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7616530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea76166c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7616850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea76169e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7616b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7616d00"/>
        <function-ref name="get" scoped="" ref="0x7feea7615020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea76151b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7615340"/>
        <function-ref name="set" scoped="" ref="0x7feea76154d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7615660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea76157f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7615a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea7615c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7feea7602020" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7feea7602020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea76023a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7602530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea76026c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7602850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea76029e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7602b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7602d00"/>
        <function-ref name="get" scoped="" ref="0x7feea7601020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea76011b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7601340"/>
        <function-ref name="set" scoped="" ref="0x7feea76014d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7601660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea76017f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7601a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea7601c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7feea75ed020" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7feea75ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75ed3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75ed530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75ed6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75ed850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75ed9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75edb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75edd00"/>
        <function-ref name="get" scoped="" ref="0x7feea75ec020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75ec1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75ec340"/>
        <function-ref name="set" scoped="" ref="0x7feea75ec4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75ec660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75ec7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75eca80"/>
        <function-ref name="clr" scoped="" ref="0x7feea75ecc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7feea75a8580" loc="153:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7feea75a8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75a8900"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75a8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75a8c20"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75a8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75a7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75a71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75a7340"/>
        <function-ref name="get" scoped="" ref="0x7feea75a74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75a7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75a77f0"/>
        <function-ref name="set" scoped="" ref="0x7feea75a7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75a7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75a7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75a6020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75a61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7feea7593570" loc="164:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7feea7593570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75938f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7593a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7593c10"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7593da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7592020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75921b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7592340"/>
        <function-ref name="get" scoped="" ref="0x7feea75924d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea7592660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75927f0"/>
        <function-ref name="set" scoped="" ref="0x7feea7592980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7592b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea7592ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7591020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7feea75e9200" loc="83:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7feea75e9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75e9580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75e9710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75e98a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75e9a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75e9bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75e9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75e8020"/>
        <function-ref name="get" scoped="" ref="0x7feea75e81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75e8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75e84d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75e8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75e87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75e8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75e8c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75e8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7feea75d5200" loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7feea75d5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75d5580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75d5710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75d58a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75d5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75d5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75d5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75d4020"/>
        <function-ref name="get" scoped="" ref="0x7feea75d41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75d4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75d44d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75d4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75d47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75d4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75d4c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75d4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7feea75c4200" loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7feea75c4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75c4580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75c4710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75c48a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75c4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75c4bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75c4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75c3020"/>
        <function-ref name="get" scoped="" ref="0x7feea75c31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75c3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75c34d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75c3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75c37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75c3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75c3c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75c3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7feea7610020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7feea7610020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea76103a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7610530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea76106c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7610850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea76109e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7610b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7610d00"/>
        <function-ref name="get" scoped="" ref="0x7feea760f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea760f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea760f340"/>
        <function-ref name="set" scoped="" ref="0x7feea760f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea760f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea760f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea760fa80"/>
        <function-ref name="clr" scoped="" ref="0x7feea760fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7feea75c8200" loc="105:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7feea75c8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75c8580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75c8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75c88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75c8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75c8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75c8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75c7020"/>
        <function-ref name="get" scoped="" ref="0x7feea75c71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75c7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75c74d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75c7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75c77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75c7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75c7c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75c7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7feea760c020" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7feea760c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea760c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea760c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea760c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea760c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea760c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea760cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea760cd00"/>
        <function-ref name="get" scoped="" ref="0x7feea760b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea760b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea760b340"/>
        <function-ref name="set" scoped="" ref="0x7feea760b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea760b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea760b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea760ba80"/>
        <function-ref name="clr" scoped="" ref="0x7feea760bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7feea75f7020" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7feea75f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75f73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75f7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75f76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75f7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75f79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75f7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75f7d00"/>
        <function-ref name="get" scoped="" ref="0x7feea75f6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75f61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75f6340"/>
        <function-ref name="set" scoped="" ref="0x7feea75f64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75f6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75f67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75f6a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea75f6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7feea75e3200" loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7feea75e3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75e3580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75e3710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75e38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75e3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75e3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75e3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75e2020"/>
        <function-ref name="get" scoped="" ref="0x7feea75e21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75e2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75e24d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75e2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75e27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75e2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75e2c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75e2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7feea75cf200" loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7feea75cf200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75cf580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75cf710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75cf8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75cfa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75cfbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75cfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75ce020"/>
        <function-ref name="get" scoped="" ref="0x7feea75ce1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75ce340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75ce4d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75ce660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75ce7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75ce980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75cec10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75ceda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7feea75be200" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7feea75be200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75be580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75be710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75be8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75bea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75bebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75bed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75bd020"/>
        <function-ref name="get" scoped="" ref="0x7feea75bd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75bd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75bd4d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75bd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75bd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75bd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75bdc10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75bdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7feea761a020" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7feea761a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea761a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea761a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea761a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea761a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea761a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea761ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea761ad00"/>
        <function-ref name="get" scoped="" ref="0x7feea7619020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea76191b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7619340"/>
        <function-ref name="set" scoped="" ref="0x7feea76194d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7619660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea76197f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7619a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea7619c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7feea7606020" loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7feea7606020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea76063a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7606530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea76066c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7606850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea76069e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7606b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7606d00"/>
        <function-ref name="get" scoped="" ref="0x7feea7605020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea76051b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7605340"/>
        <function-ref name="set" scoped="" ref="0x7feea76054d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7605660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea76057f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7605a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea7605c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7feea75f1020" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7feea75f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75f13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75f1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75f16c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75f1850"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75f19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75f1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75f1d00"/>
        <function-ref name="get" scoped="" ref="0x7feea75f0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75f01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75f0340"/>
        <function-ref name="set" scoped="" ref="0x7feea75f04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75f0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75f07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75f0a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea75f0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7feea75dd200" loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7feea75dd200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75dd580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75dd710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75dd8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75dda30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75ddbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75ddd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75dc020"/>
        <function-ref name="get" scoped="" ref="0x7feea75dc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75dc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75dc4d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75dc660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75dc7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75dc980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75dcc10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75dcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7feea75b0560" loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7feea75b0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75b08e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75b0a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75b0c00"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75b0d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75af020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75af1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75af340"/>
        <function-ref name="get" scoped="" ref="0x7feea75af4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75af660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75af7f0"/>
        <function-ref name="set" scoped="" ref="0x7feea75af980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75afb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75afca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75ae020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7feea7599570" loc="161:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7feea7599570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75998f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7599a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7599c10"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7599da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7598020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75981b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7598340"/>
        <function-ref name="get" scoped="" ref="0x7feea75984d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea7598660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75987f0"/>
        <function-ref name="set" scoped="" ref="0x7feea7598980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7598b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea7598ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7597020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7feea75b2580" loc="147:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7feea75b2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75b2900"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75b2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75b2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75b2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75b1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75b11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75b1340"/>
        <function-ref name="get" scoped="" ref="0x7feea75b14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75b1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75b17f0"/>
        <function-ref name="set" scoped="" ref="0x7feea75b1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75b1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75b1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75b0020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75b01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7feea75d9200" loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7feea75d9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75d9580"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75d9710"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75d98a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75d9a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75d9bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75d9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75d8020"/>
        <function-ref name="get" scoped="" ref="0x7feea75d81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75d8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75d84d0"/>
        <function-ref name="set" scoped="" ref="0x7feea75d8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75d87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75d8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75d8c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea75d8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7feea758d570" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7feea758d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea758d8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea758da80"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea758dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7feea758dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea758c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea758c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea758c340"/>
        <function-ref name="get" scoped="" ref="0x7feea758c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea758c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea758c7f0"/>
        <function-ref name="set" scoped="" ref="0x7feea758c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea758cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea758cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea758b020"/>
        <function-ref name="clr" scoped="" ref="0x7feea758b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7feea7587580" loc="172:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7feea7587580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea7587900"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7587a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7587c20"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7587db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7586020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75861b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7586340"/>
        <function-ref name="get" scoped="" ref="0x7feea75864d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea7586660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75867f0"/>
        <function-ref name="set" scoped="" ref="0x7feea7586980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7586b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea7586ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7585020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7feea75ba1f0" loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7feea75ba1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75ba970"/>
        <function-ref name="isInput" scoped="" ref="0x7feea75bab00"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75bac90"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75bae20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75b9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75b91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75b9340"/>
        <function-ref name="get" scoped="" ref="0x7feea75b94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75b9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea75b97f0"/>
        <function-ref name="set" scoped="" ref="0x7feea75b9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea75b9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75b9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75b8020"/>
        <function-ref name="clr" scoped="" ref="0x7feea75b81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea755c6d0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea755c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea755ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7feea755cbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea755cd70"/>
        <function-ref name="toggle" scoped="" ref="0x7feea755b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea755b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea755b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea755b4d0"/>
        <function-ref name="get" scoped="" ref="0x7feea755b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea755b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea755b980"/>
        <function-ref name="set" scoped="" ref="0x7feea755bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea755bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea755be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea755a120"/>
        <function-ref name="clr" scoped="" ref="0x7feea755a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea7557100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea7557100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea7557480"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7557610"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75577a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7557930"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7557ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7557c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7557de0"/>
        <function-ref name="get" scoped="" ref="0x7feea7556020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75561b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7556340"/>
        <function-ref name="set" scoped="" ref="0x7feea75564d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7556660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75567f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7556a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea7556c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea7553d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea7553d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75520e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7552270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7552400"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7552590"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7552720"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75528b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7552a40"/>
        <function-ref name="get" scoped="" ref="0x7feea7552bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea7552d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7551020"/>
        <function-ref name="set" scoped="" ref="0x7feea75511b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7551340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75514d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7551760"/>
        <function-ref name="clr" scoped="" ref="0x7feea75518f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea754d740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea754d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea754dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea754dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea754dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea754c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea754c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea754c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea754c4d0"/>
        <function-ref name="get" scoped="" ref="0x7feea754c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea754c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea754c980"/>
        <function-ref name="set" scoped="" ref="0x7feea754cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea754cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea754ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea754b120"/>
        <function-ref name="clr" scoped="" ref="0x7feea754b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea7548100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea7548100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea7548480"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7548610"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75487a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7548930"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7548ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7548c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7548de0"/>
        <function-ref name="get" scoped="" ref="0x7feea7547020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75471b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7547340"/>
        <function-ref name="set" scoped="" ref="0x7feea75474d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7547660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75477f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7547a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea7547c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea7544d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea7544d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75430e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7543270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7543400"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7543590"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7543720"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75438b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7543a40"/>
        <function-ref name="get" scoped="" ref="0x7feea7543bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea7543d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7542020"/>
        <function-ref name="set" scoped="" ref="0x7feea75421b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7542340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75424d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7542760"/>
        <function-ref name="clr" scoped="" ref="0x7feea75428f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea753f740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea753f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea753fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea753fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea753fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea753e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea753e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea753e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea753e4d0"/>
        <function-ref name="get" scoped="" ref="0x7feea753e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea753e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea753e980"/>
        <function-ref name="set" scoped="" ref="0x7feea753eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea753eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea753ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea753d120"/>
        <function-ref name="clr" scoped="" ref="0x7feea753d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea753a100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea753a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea753a480"/>
        <function-ref name="isInput" scoped="" ref="0x7feea753a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea753a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea753a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea753aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea753ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea753ade0"/>
        <function-ref name="get" scoped="" ref="0x7feea7539020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75391b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7539340"/>
        <function-ref name="set" scoped="" ref="0x7feea75394d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7539660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75397f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7539a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea7539c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea7536d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea7536d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75350e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7535270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7535400"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7535590"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7535720"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75358b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7535a40"/>
        <function-ref name="get" scoped="" ref="0x7feea7535bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea7535d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7534020"/>
        <function-ref name="set" scoped="" ref="0x7feea75341b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7534340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75344d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7534760"/>
        <function-ref name="clr" scoped="" ref="0x7feea75348f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea7531740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea7531740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea7531ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7531c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7531de0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7530020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75301b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7530340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75304d0"/>
        <function-ref name="get" scoped="" ref="0x7feea7530660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75307f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7530980"/>
        <function-ref name="set" scoped="" ref="0x7feea7530b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7530ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea7530e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea752f120"/>
        <function-ref name="clr" scoped="" ref="0x7feea752f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea752c100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea752c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea752c480"/>
        <function-ref name="isInput" scoped="" ref="0x7feea752c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea752c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea752c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea752cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea752cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea752cde0"/>
        <function-ref name="get" scoped="" ref="0x7feea752a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea752a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea752a340"/>
        <function-ref name="set" scoped="" ref="0x7feea752a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea752a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea752a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea752aa80"/>
        <function-ref name="clr" scoped="" ref="0x7feea752ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea7527d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea7527d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75260e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7526270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7526400"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7526590"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7526720"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75268b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7526a40"/>
        <function-ref name="get" scoped="" ref="0x7feea7526bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea7526d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7525020"/>
        <function-ref name="set" scoped="" ref="0x7feea75251b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7525340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75254d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7525760"/>
        <function-ref name="clr" scoped="" ref="0x7feea75258f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea7522860" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea7522860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea7522be0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7522d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7521020"/>
        <function-ref name="toggle" scoped="" ref="0x7feea75211b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7521340"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75214d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7521660"/>
        <function-ref name="get" scoped="" ref="0x7feea75217f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea7521980"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7521b10"/>
        <function-ref name="set" scoped="" ref="0x7feea7521ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7521e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea7520020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea75202b0"/>
        <function-ref name="clr" scoped="" ref="0x7feea7520440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea751d270" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea751d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea751d5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea751d780"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea751d910"/>
        <function-ref name="toggle" scoped="" ref="0x7feea751daa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea751dc30"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea751ddc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea751c020"/>
        <function-ref name="get" scoped="" ref="0x7feea751c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea751c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea751c4d0"/>
        <function-ref name="set" scoped="" ref="0x7feea751c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea751c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea751c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea751cc10"/>
        <function-ref name="clr" scoped="" ref="0x7feea751cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea7519d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea7519d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea75180e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7518270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7518400"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7518590"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7518720"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea75188b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7518a40"/>
        <function-ref name="get" scoped="" ref="0x7feea7518bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea7518d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7517020"/>
        <function-ref name="set" scoped="" ref="0x7feea75171b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7517340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75174d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7517760"/>
        <function-ref name="clr" scoped="" ref="0x7feea75178f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea7514740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea7514740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea7514ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7514c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7514de0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7513020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75131b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7513340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75134d0"/>
        <function-ref name="get" scoped="" ref="0x7feea7513660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75137f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7513980"/>
        <function-ref name="set" scoped="" ref="0x7feea7513b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7513ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea7513e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7512120"/>
        <function-ref name="clr" scoped="" ref="0x7feea75122b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea750f100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea750f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea750f480"/>
        <function-ref name="isInput" scoped="" ref="0x7feea750f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea750f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea750f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea750fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea750fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea750fde0"/>
        <function-ref name="get" scoped="" ref="0x7feea750e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea750e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea750e340"/>
        <function-ref name="set" scoped="" ref="0x7feea750e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea750e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea750e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea750ea80"/>
        <function-ref name="clr" scoped="" ref="0x7feea750ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea750bd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea750bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea750a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea750a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea750a400"/>
        <function-ref name="toggle" scoped="" ref="0x7feea750a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea750a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea750a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea750aa40"/>
        <function-ref name="get" scoped="" ref="0x7feea750abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea750ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7509020"/>
        <function-ref name="set" scoped="" ref="0x7feea75091b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7509340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea75094d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7509760"/>
        <function-ref name="clr" scoped="" ref="0x7feea75098f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea7506740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea7506740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea7506ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7506c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7506de0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7504020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea75041b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7504340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea75044d0"/>
        <function-ref name="get" scoped="" ref="0x7feea7504660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea75047f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7504980"/>
        <function-ref name="set" scoped="" ref="0x7feea7504b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7504ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea7504e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7503120"/>
        <function-ref name="clr" scoped="" ref="0x7feea75032b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea7500100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea7500100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea7500480"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7500610"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea75007a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7500930"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7500ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7500c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7500de0"/>
        <function-ref name="get" scoped="" ref="0x7feea74ff020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74ff1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74ff340"/>
        <function-ref name="set" scoped="" ref="0x7feea74ff4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74ff660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74ff7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74ffa80"/>
        <function-ref name="clr" scoped="" ref="0x7feea74ffc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74fcd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74fcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74fb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74fb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74fb400"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74fb590"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74fb720"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74fb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74fba40"/>
        <function-ref name="get" scoped="" ref="0x7feea74fbbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74fbd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74fa020"/>
        <function-ref name="set" scoped="" ref="0x7feea74fa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74fa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74fa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74fa760"/>
        <function-ref name="clr" scoped="" ref="0x7feea74fa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74f7740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74f7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74f7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74f7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74f7de0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74f6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74f61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74f6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74f64d0"/>
        <function-ref name="get" scoped="" ref="0x7feea74f6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74f67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74f6980"/>
        <function-ref name="set" scoped="" ref="0x7feea74f6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74f6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74f6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74f5120"/>
        <function-ref name="clr" scoped="" ref="0x7feea74f52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74f2100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74f2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74f2480"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74f2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74f27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74f2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74f2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74f2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74f2de0"/>
        <function-ref name="get" scoped="" ref="0x7feea74f1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74f11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74f1340"/>
        <function-ref name="set" scoped="" ref="0x7feea74f14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74f1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74f17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74f1a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea74f1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74eed10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74eed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74ed0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74ed270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74ed400"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74ed590"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74ed720"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74ed8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74eda40"/>
        <function-ref name="get" scoped="" ref="0x7feea74edbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74edd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74ec020"/>
        <function-ref name="set" scoped="" ref="0x7feea74ec1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74ec340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74ec4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74ec760"/>
        <function-ref name="clr" scoped="" ref="0x7feea74ec8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74e9a60" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74e9a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74e9de0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74e8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74e81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74e8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74e84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74e8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74e87f0"/>
        <function-ref name="get" scoped="" ref="0x7feea74e8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74e8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74e8ca0"/>
        <function-ref name="set" scoped="" ref="0x7feea74e8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74e7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74e71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74e7440"/>
        <function-ref name="clr" scoped="" ref="0x7feea74e75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74e4460" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74e4460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74e47e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74e4970"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74e4b00"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74e4c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74e4e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74e3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74e31b0"/>
        <function-ref name="get" scoped="" ref="0x7feea74e3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74e34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74e3660"/>
        <function-ref name="set" scoped="" ref="0x7feea74e37f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74e3980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74e3b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74e3da0"/>
        <function-ref name="clr" scoped="" ref="0x7feea74e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74dfe00" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74dfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74de1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74de350"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74de4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74de670"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74de800"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74de990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74deb20"/>
        <function-ref name="get" scoped="" ref="0x7feea74decb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74dee40"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74dd020"/>
        <function-ref name="set" scoped="" ref="0x7feea74dd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74dd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74dd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74dd760"/>
        <function-ref name="clr" scoped="" ref="0x7feea74dd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74da740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74da740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74daac0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74dac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74dade0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74d9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74d91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74d9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74d94d0"/>
        <function-ref name="get" scoped="" ref="0x7feea74d9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74d97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74d9980"/>
        <function-ref name="set" scoped="" ref="0x7feea74d9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74d9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74d9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74d8120"/>
        <function-ref name="clr" scoped="" ref="0x7feea74d82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74d5100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74d5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74d5480"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74d5610"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74d57a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74d5930"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74d5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74d5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74d5de0"/>
        <function-ref name="get" scoped="" ref="0x7feea74d4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74d41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74d4340"/>
        <function-ref name="set" scoped="" ref="0x7feea74d44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74d4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74d47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74d4a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea74d4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74d1d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74d1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74d00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74d0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74d0400"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74d0590"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74d0720"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74d08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74d0a40"/>
        <function-ref name="get" scoped="" ref="0x7feea74d0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74d0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74cf020"/>
        <function-ref name="set" scoped="" ref="0x7feea74cf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74cf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74cf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74cf760"/>
        <function-ref name="clr" scoped="" ref="0x7feea74cf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74cc740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74cc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74ccac0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74ccc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74ccde0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74cb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74cb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74cb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74cb4d0"/>
        <function-ref name="get" scoped="" ref="0x7feea74cb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74cb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74cb980"/>
        <function-ref name="set" scoped="" ref="0x7feea74cbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74cbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74cbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74ca120"/>
        <function-ref name="clr" scoped="" ref="0x7feea74ca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74c7100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74c7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74c7480"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74c7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74c77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74c7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74c7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74c7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74c7de0"/>
        <function-ref name="get" scoped="" ref="0x7feea74c6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74c61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74c6340"/>
        <function-ref name="set" scoped="" ref="0x7feea74c64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74c6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74c67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74c6a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea74c6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74c3d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74c3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74c20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74c2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74c2400"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74c2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74c2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74c28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74c2a40"/>
        <function-ref name="get" scoped="" ref="0x7feea74c2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74c2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74c1020"/>
        <function-ref name="set" scoped="" ref="0x7feea74c11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74c1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74c14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74c1760"/>
        <function-ref name="clr" scoped="" ref="0x7feea74c18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74be740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74be740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74beac0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74bec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74bede0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74bc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74bc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74bc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74bc4d0"/>
        <function-ref name="get" scoped="" ref="0x7feea74bc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74bc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74bc980"/>
        <function-ref name="set" scoped="" ref="0x7feea74bcb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74bcca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74bce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74bb120"/>
        <function-ref name="clr" scoped="" ref="0x7feea74bb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74b8100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74b8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74b8480"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74b8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74b87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74b8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74b8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74b8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74b8de0"/>
        <function-ref name="get" scoped="" ref="0x7feea74b7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74b71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74b7340"/>
        <function-ref name="set" scoped="" ref="0x7feea74b74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74b7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74b77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74b7a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea74b7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74b4d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74b4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74b30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74b3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74b3400"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74b3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74b3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74b38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74b3a40"/>
        <function-ref name="get" scoped="" ref="0x7feea74b3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74b3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74b2020"/>
        <function-ref name="set" scoped="" ref="0x7feea74b21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74b2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74b24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74b2760"/>
        <function-ref name="clr" scoped="" ref="0x7feea74b28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74af740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74af740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74afac0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74afc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74afde0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74ae020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74ae1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74ae340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74ae4d0"/>
        <function-ref name="get" scoped="" ref="0x7feea74ae660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74ae7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74ae980"/>
        <function-ref name="set" scoped="" ref="0x7feea74aeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74aeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74aee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74ad120"/>
        <function-ref name="clr" scoped="" ref="0x7feea74ad2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74aa100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74aa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74aa480"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74aa610"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74aa7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74aa930"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74aaac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74aac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74aade0"/>
        <function-ref name="get" scoped="" ref="0x7feea74a9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74a91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74a9340"/>
        <function-ref name="set" scoped="" ref="0x7feea74a94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74a9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74a97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74a9a80"/>
        <function-ref name="clr" scoped="" ref="0x7feea74a9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74a6d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74a6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74a50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74a5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74a5400"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74a5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74a5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74a58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74a5a40"/>
        <function-ref name="get" scoped="" ref="0x7feea74a5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74a5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74a4020"/>
        <function-ref name="set" scoped="" ref="0x7feea74a41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74a4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74a44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea74a4760"/>
        <function-ref name="clr" scoped="" ref="0x7feea74a48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea74a1740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea74a1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74a1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea74a1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea74a1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74a0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74a01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74a0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74a04d0"/>
        <function-ref name="get" scoped="" ref="0x7feea74a0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74a07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74a0980"/>
        <function-ref name="set" scoped="" ref="0x7feea74a0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74a0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74a0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea749f120"/>
        <function-ref name="clr" scoped="" ref="0x7feea749f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea749c100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea749c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea749c480"/>
        <function-ref name="isInput" scoped="" ref="0x7feea749c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea749c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea749c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea749cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea749cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea749cde0"/>
        <function-ref name="get" scoped="" ref="0x7feea749b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea749b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea749b340"/>
        <function-ref name="set" scoped="" ref="0x7feea749b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea749b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea749b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea749ba80"/>
        <function-ref name="clr" scoped="" ref="0x7feea749bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea7498d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea7498d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74960e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7496270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7496400"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7496590"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7496720"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74968b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7496a40"/>
        <function-ref name="get" scoped="" ref="0x7feea7496bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea7496d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7495020"/>
        <function-ref name="set" scoped="" ref="0x7feea74951b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7495340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74954d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7495760"/>
        <function-ref name="clr" scoped="" ref="0x7feea74958f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea7492740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea7492740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea7492ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7492c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7492de0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7491020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74911b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7491340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74914d0"/>
        <function-ref name="get" scoped="" ref="0x7feea7491660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74917f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7491980"/>
        <function-ref name="set" scoped="" ref="0x7feea7491b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7491ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea7491e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7490120"/>
        <function-ref name="clr" scoped="" ref="0x7feea74902b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea748d100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea748d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea748d480"/>
        <function-ref name="isInput" scoped="" ref="0x7feea748d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea748d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea748d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea748dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea748dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea748dde0"/>
        <function-ref name="get" scoped="" ref="0x7feea748c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea748c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea748c340"/>
        <function-ref name="set" scoped="" ref="0x7feea748c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea748c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea748c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea748ca80"/>
        <function-ref name="clr" scoped="" ref="0x7feea748cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea7489d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea7489d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74880e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7488270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7488400"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7488590"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7488720"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea74888b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7488a40"/>
        <function-ref name="get" scoped="" ref="0x7feea7488bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea7488d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7487020"/>
        <function-ref name="set" scoped="" ref="0x7feea74871b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7487340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74874d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7487760"/>
        <function-ref name="clr" scoped="" ref="0x7feea74878f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea7484740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea7484740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea7484ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7484c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7484de0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7483020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea74831b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7483340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea74834d0"/>
        <function-ref name="get" scoped="" ref="0x7feea7483660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea74837f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7483980"/>
        <function-ref name="set" scoped="" ref="0x7feea7483b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7483ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea7483e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7482120"/>
        <function-ref name="clr" scoped="" ref="0x7feea74822b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea747f100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea747f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea747f480"/>
        <function-ref name="isInput" scoped="" ref="0x7feea747f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea747f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea747f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea747fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea747fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea747fde0"/>
        <function-ref name="get" scoped="" ref="0x7feea747e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea747e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea747e340"/>
        <function-ref name="set" scoped="" ref="0x7feea747e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea747e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea747e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea747ea80"/>
        <function-ref name="clr" scoped="" ref="0x7feea747ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feea747bd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7feea747bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea747a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea747a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea747a400"/>
        <function-ref name="toggle" scoped="" ref="0x7feea747a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea747a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea747a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea747aa40"/>
        <function-ref name="get" scoped="" ref="0x7feea747abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea747ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea7479020"/>
        <function-ref name="set" scoped="" ref="0x7feea74791b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea7479340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea74794d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7479760"/>
        <function-ref name="clr" scoped="" ref="0x7feea74798f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7feea74022f0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7feea74022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea7402670"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7402800"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea7402990"/>
        <function-ref name="toggle" scoped="" ref="0x7feea7402b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7402cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea7402e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7400020"/>
        <function-ref name="get" scoped="" ref="0x7feea74001b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea7400340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea74004d0"/>
        <function-ref name="set" scoped="" ref="0x7feea7400660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea74007f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea7400980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea7400c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea7400da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7feea7413020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7feea7413020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea74133a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea7413530"/>
        <function-ref name="toggle" scoped="" ref="0x7feea74136c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea7413850"/>
        <function-ref name="get" scoped="" ref="0x7feea74139e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea7413b70"/>
        <function-ref name="set" scoped="" ref="0x7feea7413d00"/>
        <function-ref name="clr" scoped="" ref="0x7feea7402020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7feea73fdde0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7feea73fdde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea73fc180"/>
        <function-ref name="isInput" scoped="" ref="0x7feea73fc310"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea73fc4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea73fc630"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea73fc7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea73fc950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea73fcae0"/>
        <function-ref name="get" scoped="" ref="0x7feea73fcc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea73fce00"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea73fb020"/>
        <function-ref name="set" scoped="" ref="0x7feea73fb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea73fb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea73fb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea73fb760"/>
        <function-ref name="clr" scoped="" ref="0x7feea73fb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7feea73feb90" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7feea73feb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea73fd020"/>
        <function-ref name="isInput" scoped="" ref="0x7feea73fd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea73fd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea73fd4d0"/>
        <function-ref name="get" scoped="" ref="0x7feea73fd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea73fd7f0"/>
        <function-ref name="set" scoped="" ref="0x7feea73fd980"/>
        <function-ref name="clr" scoped="" ref="0x7feea73fdb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7feea73f8930" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7feea73f8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea73f8cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7feea73f8e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea73f7020"/>
        <function-ref name="toggle" scoped="" ref="0x7feea73f71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea73f7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea73f74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea73f7660"/>
        <function-ref name="get" scoped="" ref="0x7feea73f77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea73f7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea73f7b10"/>
        <function-ref name="set" scoped="" ref="0x7feea73f7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea73f7e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea73f6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea73f62b0"/>
        <function-ref name="clr" scoped="" ref="0x7feea73f6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7feea73f9710" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7feea73f9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea73f9a90"/>
        <function-ref name="isInput" scoped="" ref="0x7feea73f9c20"/>
        <function-ref name="toggle" scoped="" ref="0x7feea73f9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea73f8020"/>
        <function-ref name="get" scoped="" ref="0x7feea73f81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea73f8340"/>
        <function-ref name="set" scoped="" ref="0x7feea73f84d0"/>
        <function-ref name="clr" scoped="" ref="0x7feea73f8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feea723f370" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feea723f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feea723c870"/>
        <function-ref name="fired" scoped="" ref="0x7feea723ee40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feea723dc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feea723d780"/>
        <function-ref name="getdt" scoped="" ref="0x7feea723a1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7feea723ccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feea723d300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feea723e020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feea723c260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feea723e4f0"/>
        <function-ref name="stop" scoped="" ref="0x7feea723e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7feea73e1610" loc="49:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7feea73e1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feea73ddc40"/>
        <function-ref name="fired" scoped="" ref="0x7feea73de1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feea73dd020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feea73deae0"/>
        <function-ref name="getdt" scoped="" ref="0x7feea73dc590"/>
        <function-ref name="gett0" scoped="" ref="0x7feea73dc110"/>
        <function-ref name="isRunning" scoped="" ref="0x7feea73de660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feea73e0390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feea73dd630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feea73e0860"/>
        <function-ref name="stop" scoped="" ref="0x7feea73e0d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7feea73d71d0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7feea73d71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feea73d3630"/>
        <function-ref name="fired" scoped="" ref="0x7feea73d6c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feea73d59d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feea73d5550"/>
        <function-ref name="getdt" scoped="" ref="0x7feea73d2020"/>
        <function-ref name="gett0" scoped="" ref="0x7feea73d3ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feea73d50d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feea73d7dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feea73d3020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feea73d62e0"/>
        <function-ref name="stop" scoped="" ref="0x7feea73d67b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7feea73cea80" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7feea73cea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feea73d06f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feea73d8400" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feea73d8400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea73d8780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feea72db870" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7feea72db870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feea72d8090"/>
        <function-ref name="fired" scoped="" ref="0x7feea72d9090"/>
        <function-ref name="startAt" scoped="" ref="0x7feea72d9a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7feea72d9550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feea72d8550"/>
        <function-ref name="start" scoped="" ref="0x7feea72da6a0"/>
        <function-ref name="stop" scoped="" ref="0x7feea72dabb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feea72db020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feea72db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea72db3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feea67ae4f0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7feea67ae4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7689680"/>
            <typename><typedef-ref name="T32khz" ref="0x7feea76899f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feea67acdb0"/>
        <function-ref name="fired" scoped="" ref="0x7feea67adda0"/>
        <function-ref name="startAt" scoped="" ref="0x7feea67ac760"/>
        <function-ref name="isRunning" scoped="" ref="0x7feea67ac2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feea67ab2a0"/>
        <function-ref name="start" scoped="" ref="0x7feea67ad3d0"/>
        <function-ref name="stop" scoped="" ref="0x7feea67ad8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feea67b0c40" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feea67b0c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea67ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7feea6796da0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7feea6796da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea6795180"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea6795310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea67954a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea6795630"/>
        <function-ref name="fired" scoped="" ref="0x7feea67957c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7feea6798340" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7feea6798340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea67986c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea6798850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea67989e0"/>
        <function-ref name="get" scoped="" ref="0x7feea6798b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea6798d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea6797020"/>
        <function-ref name="getMode" scoped="" ref="0x7feea67971b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea6797340"/>
        <function-ref name="overflow" scoped="" ref="0x7feea67974d0"/>
        <function-ref name="setMode" scoped="" ref="0x7feea6797660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea67977f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7feea6797a80" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feea6797a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea6797e00"/>
        <function-ref name="getControl" scoped="" ref="0x7feea6796020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea67961b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea6796340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea67964d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea6796660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea67967f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea6796980"/>
        <function-ref name="setControl" scoped="" ref="0x7feea6796b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7feea73aa020" loc="52:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7feea73aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea73aa3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea73aa530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea73aa6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea73aa850"/>
        <function-ref name="fired" scoped="" ref="0x7feea73aa9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7feea73af8b0" loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7feea73af8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea73afc30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea73afdc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea73ae020"/>
        <function-ref name="get" scoped="" ref="0x7feea73ae1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea73ae340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea73ae4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7feea73ae660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea73ae7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7feea73ae980"/>
        <function-ref name="setMode" scoped="" ref="0x7feea73aeb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea73aeca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7feea73ac560" loc="51:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feea73ac560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea73ac8e0"/>
        <function-ref name="getControl" scoped="" ref="0x7feea73aca70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea73acc00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea73acd90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea73ab020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea73ab1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea73ab340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea73ab4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7feea73ab660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7feea678ca80" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7feea678ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7feea678ce00"/>
        <function-ref name="setEvent" scoped="" ref="0x7feea678b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7feea678b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7feea678b340"/>
        <function-ref name="fired" scoped="" ref="0x7feea678b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7feea678e190" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7feea678e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea678e510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea678e6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea678e830"/>
        <function-ref name="get" scoped="" ref="0x7feea678e9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea678eb50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea678ece0"/>
        <function-ref name="getMode" scoped="" ref="0x7feea678ee70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea678d030"/>
        <function-ref name="overflow" scoped="" ref="0x7feea678d1c0"/>
        <function-ref name="setMode" scoped="" ref="0x7feea678d350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea678d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feea6792020" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7feea6792020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7689680"/>
            <typename><typedef-ref name="T32khz" ref="0x7feea76899f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feea678f870"/>
        <function-ref name="fired" scoped="" ref="0x7feea6791840"/>
        <function-ref name="startAt" scoped="" ref="0x7feea678f220"/>
        <function-ref name="isRunning" scoped="" ref="0x7feea6791d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feea678fd30"/>
        <function-ref name="start" scoped="" ref="0x7feea6792e30"/>
        <function-ref name="stop" scoped="" ref="0x7feea6791380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feea6793660" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feea6793660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea67939e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7feea678d770" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7feea678d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7feea678daf0"/>
        <function-ref name="getControl" scoped="" ref="0x7feea678dc80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea678de10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7feea678c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7feea678c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea678c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feea678c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7feea678c660"/>
        <function-ref name="setControl" scoped="" ref="0x7feea678c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feea7354900" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feea7354900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feea7359780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea7358150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea7359c40"/>
        <function-ref name="overflow" scoped="" ref="0x7feea7358610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7feea7352990" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7feea7352990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7689680"/>
            <typename><typedef-ref name="T32khz" ref="0x7feea76899f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feea734f7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea734e170"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea734fc80"/>
        <function-ref name="overflow" scoped="" ref="0x7feea734e630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7feea733dc50" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7feea733dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea733c020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7feea733c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7feea733c340"/>
        <function-ref name="get" scoped="" ref="0x7feea733c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7feea733c660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea733c7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7feea733c980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea733cb10"/>
        <function-ref name="overflow" scoped="" ref="0x7feea733cca0"/>
        <function-ref name="setMode" scoped="" ref="0x7feea733ce30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7feea733b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feea734cb80" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feea734cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7689680"/>
            <typename><typedef-ref name="T32khz" ref="0x7feea76899f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feea733e9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea733d360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea733ee70"/>
        <function-ref name="overflow" scoped="" ref="0x7feea733d820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7feea731a0f0" loc="63:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7feea731a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7689680"/>
            <typename><typedef-ref name="T32khz" ref="0x7feea76899f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feea7318020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea73189a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea73184e0"/>
        <function-ref name="overflow" scoped="" ref="0x7feea7318e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feea7338cf0" loc="62:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feea7338cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feea731cb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea731b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea731b090"/>
        <function-ref name="overflow" scoped="" ref="0x7feea731ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feea67a9890" loc="61:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7feea67a9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feea67a50d0"/>
        <function-ref name="fired" scoped="" ref="0x7feea67a60d0"/>
        <function-ref name="startAt" scoped="" ref="0x7feea67a6a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7feea67a6590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feea67a5590"/>
        <function-ref name="start" scoped="" ref="0x7feea67a86e0"/>
        <function-ref name="stop" scoped="" ref="0x7feea67a8bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7feea67a20a0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7feea67a20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7689680"/>
            <typename><typedef-ref name="T32khz" ref="0x7feea76899f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feea679fb30"/>
        <function-ref name="fired" scoped="" ref="0x7feea67a19f0"/>
        <function-ref name="startAt" scoped="" ref="0x7feea679f4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feea679f020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feea679e020"/>
        <function-ref name="start" scoped="" ref="0x7feea67a1020"/>
        <function-ref name="stop" scoped="" ref="0x7feea67a1530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7feea67a5c00" loc="68:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feea67a5c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feea67a4a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea67a34e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea67a3020"/>
        <function-ref name="overflow" scoped="" ref="0x7feea67a39a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7feea72a69c0" loc="74:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7feea72a69c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feea72a6d40"/>
        <function-ref name="runTask" scoped="" ref="0x7feea72a5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7feea72aa850" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7feea72aa850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feea72a6090"/>
        <function-ref name="fired" scoped="" ref="0x7feea72a8090"/>
        <function-ref name="startAt" scoped="" ref="0x7feea72a8a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7feea72a8550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feea72a6550"/>
        <function-ref name="start" scoped="" ref="0x7feea72a96a0"/>
        <function-ref name="stop" scoped="" ref="0x7feea72a9bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feea72af2f0" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feea72af2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feea72ab870"/>
        <function-ref name="fired" scoped="" ref="0x7feea72aee40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feea72adc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feea72ad780"/>
        <function-ref name="getdt" scoped="" ref="0x7feea72aa1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7feea72abcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feea72ad300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feea72ae020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feea72ab260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feea72ae4f0"/>
        <function-ref name="stop" scoped="" ref="0x7feea72ae9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7feea7255a00" loc="71:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7feea7255a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feea7255d80"/>
        <function-ref name="runTask" scoped="" ref="0x7feea7254020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7feea725a640" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7feea725a640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feea7256c40"/>
        <function-ref name="fired" scoped="" ref="0x7feea72571e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feea7256020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feea7257ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7feea7255590"/>
        <function-ref name="gett0" scoped="" ref="0x7feea7255110"/>
        <function-ref name="isRunning" scoped="" ref="0x7feea7257660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feea7259390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feea7256630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feea7259860"/>
        <function-ref name="stop" scoped="" ref="0x7feea7259d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feea7260150" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feea7260150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feea725c700"/>
        <function-ref name="fired" scoped="" ref="0x7feea725fc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feea725da50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feea725d5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7feea725a090"/>
        <function-ref name="gett0" scoped="" ref="0x7feea725cba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feea725d110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feea7260d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feea725c0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feea725f2a0"/>
        <function-ref name="stop" scoped="" ref="0x7feea725f790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7feea7252790" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7feea7252790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feea72513f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7feea7251a60" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feea7251a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feea7246890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea7245260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea7246d50"/>
        <function-ref name="overflow" scoped="" ref="0x7feea7245720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feea7239c90" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feea7239c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feea7235170"/>
        <function-ref name="fired" scoped="" ref="0x7feea7237720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feea7236510"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feea7236090"/>
        <function-ref name="getdt" scoped="" ref="0x7feea7235a70"/>
        <function-ref name="gett0" scoped="" ref="0x7feea72355f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feea7237ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feea72388a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feea7236b20"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feea7238d70"/>
        <function-ref name="stop" scoped="" ref="0x7feea72372a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feea72326d0" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7feea72326d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7865ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feea7689240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feea722fc40"/>
        <function-ref name="fired" scoped="" ref="0x7feea72301e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feea722f020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feea7230ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7feea722d590"/>
        <function-ref name="gett0" scoped="" ref="0x7feea722d110"/>
        <function-ref name="isRunning" scoped="" ref="0x7feea7230660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feea7231390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feea722f630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feea7231860"/>
        <function-ref name="stop" scoped="" ref="0x7feea7231d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7feea6ce5020" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7feea6ce5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea6ce53a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feea6ce5530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feea6ce56c0"/>
        <function-ref name="cancel" scoped="" ref="0x7feea6ce5850"/>
        <function-ref name="sendDone" scoped="" ref="0x7feea6ce59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7feea6ce5c30" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7feea6ce5c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea6ce4020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feea6ce41b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feea6ce4340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feea6ce44d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feea6ce4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7feea6ce48b0" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7feea6ce48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feea6ce4c30"/>
        <function-ref name="source" scoped="" ref="0x7feea6ce4dc0"/>
        <function-ref name="address" scoped="" ref="0x7feea6ce3020"/>
        <function-ref name="destination" scoped="" ref="0x7feea6ce31b0"/>
        <function-ref name="setSource" scoped="" ref="0x7feea6ce3340"/>
        <function-ref name="setDestination" scoped="" ref="0x7feea6ce34d0"/>
        <function-ref name="type" scoped="" ref="0x7feea6ce3660"/>
        <function-ref name="setType" scoped="" ref="0x7feea6ce37f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7feea6ce3980"/>
        <function-ref name="setGroup" scoped="" ref="0x7feea6ce3b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7feea6ce3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7feea6ce2020" loc="52:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7feea6ce2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feea6ce23a0"/>
        <function-ref name="noAck" scoped="" ref="0x7feea6ce2530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feea6ce26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7feea66f4750" loc="44:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7feea66f4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea66f4ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feea66f4c60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feea66f4df0"/>
        <function-ref name="cancel" scoped="" ref="0x7feea66f3020"/>
        <function-ref name="sendDone" scoped="" ref="0x7feea66f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7feea66f3460" loc="46:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7feea66f3460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea66f37e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feea66f3970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feea66f3b00"/>
        <function-ref name="cancel" scoped="" ref="0x7feea66f3c90"/>
        <function-ref name="sendDone" scoped="" ref="0x7feea66f3e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7feea66f20e0" loc="47:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7feea66f20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feea66f2460"/>
        <function-ref name="source" scoped="" ref="0x7feea66f25f0"/>
        <function-ref name="address" scoped="" ref="0x7feea66f2780"/>
        <function-ref name="destination" scoped="" ref="0x7feea66f2910"/>
        <function-ref name="setSource" scoped="" ref="0x7feea66f2aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x7feea66f2c30"/>
        <function-ref name="type" scoped="" ref="0x7feea66f2dc0"/>
        <function-ref name="setType" scoped="" ref="0x7feea66f1020"/>
        <function-ref name="isForMe" scoped="" ref="0x7feea66f11b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7feea66f1340"/>
        <function-ref name="localGroup" scoped="" ref="0x7feea66f14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feea71ddcf0" loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7feea71ddcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea71da0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feea71da230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feea71da3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7feea71da550"/>
        <function-ref name="sendDone" scoped="" ref="0x7feea71da6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7feea718f400" loc="48:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7feea718f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feea787b550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea718f7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feea718f930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feea718fac0"/>
        <function-ref name="cancel" scoped="" ref="0x7feea718fc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7feea718fde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feea7191580" loc="46:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7feea7191580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea7191920"/>
        <function-ref name="getPayload" scoped="" ref="0x7feea7191ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feea7191c40"/>
        <function-ref name="cancel" scoped="" ref="0x7feea7191dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feea718f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7feea718d720" loc="50:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7feea718d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea718daa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feea718dc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7feea718ddc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feea718c020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feea718c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7feea718c480" loc="169:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7feea718c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feea718c800"/>
        <function-ref name="runTask" scoped="" ref="0x7feea718c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7feea718cc60" loc="126:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7feea718cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feea718b020"/>
        <function-ref name="runTask" scoped="" ref="0x7feea718b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7feea718e060" loc="49:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7feea718e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feea718e3e0"/>
        <function-ref name="source" scoped="" ref="0x7feea718e570"/>
        <function-ref name="address" scoped="" ref="0x7feea718e700"/>
        <function-ref name="destination" scoped="" ref="0x7feea718e890"/>
        <function-ref name="setSource" scoped="" ref="0x7feea718ea20"/>
        <function-ref name="setDestination" scoped="" ref="0x7feea718ebb0"/>
        <function-ref name="type" scoped="" ref="0x7feea718ed40"/>
        <function-ref name="setType" scoped="" ref="0x7feea718d020"/>
        <function-ref name="isForMe" scoped="" ref="0x7feea718d1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7feea718d340"/>
        <function-ref name="localGroup" scoped="" ref="0x7feea718d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feea71813b0" loc="46:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7feea71813b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feea7181730"/>
        <function-ref name="stopDone" scoped="" ref="0x7feea71818c0"/>
        <function-ref name="start" scoped="" ref="0x7feea7181a50"/>
        <function-ref name="stop" scoped="" ref="0x7feea7181be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7feea71863f0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7feea71863f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feea787b550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea7186770"/>
        <function-ref name="getPayload" scoped="" ref="0x7feea7186900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feea7186a90"/>
        <function-ref name="cancel" scoped="" ref="0x7feea7186c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7feea7186db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7feea71807e0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7feea71807e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea7180b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feea7180cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feea7180e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feea717f030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feea717f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feea71801d0" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7feea71801d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feea787b550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feea7180550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feea717a620" loc="53:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feea717a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feea717a9a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feea717ab30"/>
        <function-ref name="led1On" scoped="" ref="0x7feea717acc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feea717ae50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feea7179020"/>
        <function-ref name="get" scoped="" ref="0x7feea71791b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7feea7179340"/>
        <function-ref name="led2Off" scoped="" ref="0x7feea7179980"/>
        <function-ref name="set" scoped="" ref="0x7feea71794d0"/>
        <function-ref name="led0On" scoped="" ref="0x7feea7179660"/>
        <function-ref name="led2On" scoped="" ref="0x7feea71797f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7feea717db20" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feea717db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feea717a020"/>
        <function-ref name="noAck" scoped="" ref="0x7feea717a1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feea717a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7feea717f470" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7feea717f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feea717f7f0"/>
        <function-ref name="source" scoped="" ref="0x7feea717f980"/>
        <function-ref name="address" scoped="" ref="0x7feea717fb10"/>
        <function-ref name="destination" scoped="" ref="0x7feea717fca0"/>
        <function-ref name="setSource" scoped="" ref="0x7feea717fe30"/>
        <function-ref name="setDestination" scoped="" ref="0x7feea717d020"/>
        <function-ref name="type" scoped="" ref="0x7feea717d1b0"/>
        <function-ref name="setType" scoped="" ref="0x7feea717d340"/>
        <function-ref name="isForMe" scoped="" ref="0x7feea717d4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7feea717d660"/>
        <function-ref name="localGroup" scoped="" ref="0x7feea717d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feea711f9f0" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7feea711f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea711fd70"/>
        <function-ref name="getPayload" scoped="" ref="0x7feea711d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feea711d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7feea711d340"/>
        <function-ref name="sendDone" scoped="" ref="0x7feea711d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feea711d760" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7feea711d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feea711dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7feea71767d0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7feea71767d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feea787b550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea7176b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7feea7176d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feea7122020"/>
        <function-ref name="cancel" scoped="" ref="0x7feea71221b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feea7122340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7feea7120400" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7feea7120400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea7120780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feea7120910"/>
        <function-ref name="getPayload" scoped="" ref="0x7feea7120aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feea7120c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feea7120dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feea71226c0" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7feea71226c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feea787b550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feea7122a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7feea711f060" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feea711f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feea711f3e0"/>
        <function-ref name="noAck" scoped="" ref="0x7feea711f570"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feea711f700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7feea7122cb0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7feea7122cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feea71210a0"/>
        <function-ref name="source" scoped="" ref="0x7feea7121230"/>
        <function-ref name="address" scoped="" ref="0x7feea71213c0"/>
        <function-ref name="destination" scoped="" ref="0x7feea7121550"/>
        <function-ref name="setSource" scoped="" ref="0x7feea71216e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7feea7121870"/>
        <function-ref name="type" scoped="" ref="0x7feea7121a00"/>
        <function-ref name="setType" scoped="" ref="0x7feea7121b90"/>
        <function-ref name="isForMe" scoped="" ref="0x7feea7121d20"/>
        <function-ref name="setGroup" scoped="" ref="0x7feea7120020"/>
        <function-ref name="localGroup" scoped="" ref="0x7feea71201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feea71182f0" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7feea71182f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feea7118670"/>
        <function-ref name="stopDone" scoped="" ref="0x7feea7118800"/>
        <function-ref name="start" scoped="" ref="0x7feea7118990"/>
        <function-ref name="stop" scoped="" ref="0x7feea7118b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feea7117e10" loc="52:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7feea7117e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7feea78780d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea71161c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feea7116350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feea71164e0"/>
        <function-ref name="cancel" scoped="" ref="0x7feea7116670"/>
        <function-ref name="sendDone" scoped="" ref="0x7feea7116800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feea711bbc0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feea711bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea7118020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feea7117320" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7feea7117320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7feea78780d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feea71176a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feea7115940" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feea7115940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feea7115cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feea7115e50"/>
        <function-ref name="led1On" scoped="" ref="0x7feea7114020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feea71141b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feea7114340"/>
        <function-ref name="get" scoped="" ref="0x7feea71144d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7feea7114660"/>
        <function-ref name="led2Off" scoped="" ref="0x7feea7114ca0"/>
        <function-ref name="set" scoped="" ref="0x7feea71147f0"/>
        <function-ref name="led0On" scoped="" ref="0x7feea7114980"/>
        <function-ref name="led2On" scoped="" ref="0x7feea7114b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7feea7115020" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7feea7115020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7feea78780d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7feea71153a0"/>
        <function-ref name="offset" scoped="" ref="0x7feea7115530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7feea71156c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feea7108450" loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7feea7108450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feea71087d0"/>
        <function-ref name="stopDone" scoped="" ref="0x7feea7108960"/>
        <function-ref name="start" scoped="" ref="0x7feea7108af0"/>
        <function-ref name="stop" scoped="" ref="0x7feea7108c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7feea70a0e40" loc="332:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7feea70a0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feea709f1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7feea709f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7feea70f3e00" loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7feea70f3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feea70f51c0"/>
        <function-ref name="stop" scoped="" ref="0x7feea70f5350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7feea70d8d10" loc="191:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7feea70d8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feea70d70e0"/>
        <function-ref name="runTask" scoped="" ref="0x7feea70d7270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feea7109d60" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feea7109d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea7108180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7feea70f1a80" loc="75:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7feea70f1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7feea70f1e00"/>
        <function-ref name="flush" scoped="" ref="0x7feea70f4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7feea70a3400" loc="322:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7feea70a3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feea70a3780"/>
        <function-ref name="runTask" scoped="" ref="0x7feea70a3910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7feea70f8e30" loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7feea70f8e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7feea71001e0"/>
        <function-ref name="resetSend" scoped="" ref="0x7feea7100370"/>
        <function-ref name="dataReceived" scoped="" ref="0x7feea7100500"/>
        <function-ref name="resetReceive" scoped="" ref="0x7feea7100690"/>
        <function-ref name="putData" scoped="" ref="0x7feea7100820"/>
        <function-ref name="putDone" scoped="" ref="0x7feea71009b0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7feea7100b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feea7100dc0" loc="73:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feea7100dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feea70fc180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feea70fc310"/>
        <function-ref name="led1On" scoped="" ref="0x7feea70fc4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feea70fc630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feea70fc7c0"/>
        <function-ref name="get" scoped="" ref="0x7feea70fc950"/>
        <function-ref name="led1Off" scoped="" ref="0x7feea70fcae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7feea70f61b0"/>
        <function-ref name="set" scoped="" ref="0x7feea70fcc70"/>
        <function-ref name="led0On" scoped="" ref="0x7feea70fce00"/>
        <function-ref name="led2On" scoped="" ref="0x7feea70f6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7feea709c0c0" loc="341:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7feea709c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feea709c440"/>
        <function-ref name="runTask" scoped="" ref="0x7feea709c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7feea71014a0" loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7feea71014a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7feea7101820"/>
        <function-ref name="nextByte" scoped="" ref="0x7feea71019b0"/>
        <function-ref name="startSend" scoped="" ref="0x7feea7101b40"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7feea7101cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7feea70fead0" loc="68:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7feea70fead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7feea70fee50"/>
        <function-ref name="byteReceived" scoped="" ref="0x7feea7105020"/>
        <function-ref name="endPacket" scoped="" ref="0x7feea71051b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7feea6fd1c50" loc="275:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7feea6fd1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feea6fd0020"/>
        <function-ref name="runTask" scoped="" ref="0x7feea6fd01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feea6fd5830" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7feea6fd5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7feea78780d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea6fd5bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feea6fd5d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feea6fd4020"/>
        <function-ref name="cancel" scoped="" ref="0x7feea6fd41b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feea6fd4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7feea6fd0480" loc="158:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7feea6fd0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feea6fd0800"/>
        <function-ref name="runTask" scoped="" ref="0x7feea6fd0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feea6fd5110" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7feea6fd5110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7feea78780d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feea6fd54b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7feea6fd4760" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7feea6fd4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7feea78780d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7feea6fd4b00"/>
        <function-ref name="offset" scoped="" ref="0x7feea6fd4c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7feea6fd4e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feea6fd2590" loc="57:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feea6fd2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feea6fd2910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feea6fd2aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7feea6fd2c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feea6fd2dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feea6fd1020"/>
        <function-ref name="get" scoped="" ref="0x7feea6fd11b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7feea6fd1340"/>
        <function-ref name="led2On" scoped="" ref="0x7feea6fd1980"/>
        <function-ref name="set" scoped="" ref="0x7feea6fd1660"/>
        <function-ref name="led2Off" scoped="" ref="0x7feea6fd14d0"/>
        <function-ref name="led0On" scoped="" ref="0x7feea6fd17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7feea6fd39d0" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7feea6fd39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7feea6fd3d50"/>
        <function-ref name="nextByte" scoped="" ref="0x7feea6fd2020"/>
        <function-ref name="startSend" scoped="" ref="0x7feea6fd21b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7feea6fd2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7feea6fd30e0" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7feea6fd30e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7feea6fd3460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7feea6fd35f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7feea6fd3780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7feea6fc0d20" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7feea6fc0d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea6fc90e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7feea6fc9270"/>
        <function-ref name="receive" scoped="" ref="0x7feea6fc9400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7feea6fc9590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7feea6fc9720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7feea6fc98b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feea6fc9a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7feea6fceb70" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7feea6fceb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7feea6fcb020"/>
        <function-ref name="resetSend" scoped="" ref="0x7feea6fcb1b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7feea6fcb340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7feea6fcb4d0"/>
        <function-ref name="putData" scoped="" ref="0x7feea6fcb660"/>
        <function-ref name="putDone" scoped="" ref="0x7feea6fcb7f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7feea6fcb980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feea6fc9cc0" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feea6fc9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feea6fc80a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feea6fc8230"/>
        <function-ref name="led1On" scoped="" ref="0x7feea6fc83c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feea6fc8550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feea6fc86e0"/>
        <function-ref name="get" scoped="" ref="0x7feea6fc8870"/>
        <function-ref name="led1Off" scoped="" ref="0x7feea6fc8a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7feea6fbd1b0"/>
        <function-ref name="set" scoped="" ref="0x7feea6fc8b90"/>
        <function-ref name="led0On" scoped="" ref="0x7feea6fc8d20"/>
        <function-ref name="led2On" scoped="" ref="0x7feea6fbd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7feea6fa1020" loc="6:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7feea6fa1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea6fa13a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7feea6fa1530"/>
        <function-ref name="receive" scoped="" ref="0x7feea6fa16c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7feea6fa1850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7feea6fa3890" loc="5:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7feea6fa3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea6fa3c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7feea6fa3da0"/>
        <function-ref name="receive" scoped="" ref="0x7feea6fa2020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7feea6fa21b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7feea6fa2340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7feea6fa24d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feea6fa2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7feea6fa3080" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7feea6fa3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feea6fa3400"/>
        <function-ref name="stop" scoped="" ref="0x7feea6fa3590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7feea6d17c70" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7feea6d17c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7feea6d16020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feea6d161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7feea6d15440" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7feea6d15440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea6d157c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7feea6d15950"/>
        <function-ref name="receive" scoped="" ref="0x7feea6d15ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7feea6d15c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7feea6d13020" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7feea6d13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7feea6d133a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7feea6d16440" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7feea6d16440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea6d167c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7feea6d16950"/>
        <function-ref name="receive" scoped="" ref="0x7feea6d16ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7feea6d16c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7feea6d16e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7feea6d15020"/>
        <function-ref name="sendDone" scoped="" ref="0x7feea6d151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feea6d17020" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feea6d17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feea6d173a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feea6d17530"/>
        <function-ref name="request" scoped="" ref="0x7feea6d176c0"/>
        <function-ref name="granted" scoped="" ref="0x7feea6d17850"/>
        <function-ref name="isOwner" scoped="" ref="0x7feea6d179e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7feea6f38dd0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7feea6f38dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7feea6f3a180"/>
        <function-ref name="configure" scoped="" ref="0x7feea6f3a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7feea6f37210" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7feea6f37210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea6f37590"/>
        <function-ref name="sendAvail" scoped="" ref="0x7feea6f37720"/>
        <function-ref name="receive" scoped="" ref="0x7feea6f378b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7feea6f37a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7feea6f34600" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7feea6f34600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7feea6f34980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7feea6f3ab50" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7feea6f3ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea6f39020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7feea6f391b0"/>
        <function-ref name="receive" scoped="" ref="0x7feea6f39340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7feea6f394d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7feea6f39660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7feea6f397f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feea6f39980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7feea6f35370" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7feea6f35370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feea6f356f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feea6f35880"/>
        <function-ref name="request" scoped="" ref="0x7feea6f35a10"/>
        <function-ref name="granted" scoped="" ref="0x7feea6f35ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7feea6f35d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feea6f3d320" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feea6f3d320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feea6f3d6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feea6f3d830"/>
        <function-ref name="request" scoped="" ref="0x7feea6f3d9c0"/>
        <function-ref name="granted" scoped="" ref="0x7feea6f3db50"/>
        <function-ref name="isOwner" scoped="" ref="0x7feea6f3dce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7feea6f30be0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7feea6f30be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7feea6f33020"/>
        <function-ref name="txDone" scoped="" ref="0x7feea6f331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7feea6eabe70" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7feea6eabe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7feea6eaa240"/>
        <function-ref name="configure" scoped="" ref="0x7feea6eaa3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7feea6ea9890" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7feea6ea9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea6ea9c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7feea6ea9dc0"/>
        <function-ref name="receive" scoped="" ref="0x7feea6ea7020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7feea6ea71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7feea6ea63e0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7feea6ea63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7feea6ea6780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7feea6ea6a50" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7feea6ea6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7feea6ea6dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7feea6ea5020"/>
        <function-ref name="setUctl" scoped="" ref="0x7feea6ea51b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7feea6ea5340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7feea6ea54d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7feea6ea5660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7feea6ea57f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7feea6ea5980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7feea6ea5b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7feea6ea5ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7feea6ea5e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7feea6ea4020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7feea6ea41b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7feea6ea4440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7feea6ea45d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7feea6ea4760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7feea6ea48f0"/>
        <function-ref name="isUart" scoped="" ref="0x7feea6ea4a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7feea6ea4c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7feea6ea4da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7feea6ea3020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7feea6ea31b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7feea6ea3340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7feea6ea34d0"/>
        <function-ref name="getMode" scoped="" ref="0x7feea6ea3660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7feea6ea39f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7feea6ea3b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7feea6ea3d10"/>
        <function-ref name="tx" scoped="" ref="0x7feea6ea2020"/>
        <function-ref name="getUctl" scoped="" ref="0x7feea6ea21b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7feea6ea2340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7feea6ea24d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7feea6ea2660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7feea6ea27f0"/>
        <function-ref name="rx" scoped="" ref="0x7feea6ea2980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7feea6ea2b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7feea6ea2ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7feea6ea2e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7feea6ea1020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7feea6ea11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7feea6eaa790" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7feea6eaa790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea6eaab30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7feea6eaacc0"/>
        <function-ref name="receive" scoped="" ref="0x7feea6eaae50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7feea6ea9020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7feea6ea91b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7feea6ea9340"/>
        <function-ref name="sendDone" scoped="" ref="0x7feea6ea94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7feea6ea0020" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feea6ea0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7689680"/>
            <typename><typedef-ref name="T32khz" ref="0x7feea76899f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feea6ea0e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea6e9f800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea6e9f340"/>
        <function-ref name="overflow" scoped="" ref="0x7feea6e9fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7feea6ea75b0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7feea6ea75b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feea6ea7950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feea6ea7ae0"/>
        <function-ref name="request" scoped="" ref="0x7feea6ea7c70"/>
        <function-ref name="granted" scoped="" ref="0x7feea6ea7e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7feea6ea6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feea6eab0d0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feea6eab0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feea6eab470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feea6eab600"/>
        <function-ref name="request" scoped="" ref="0x7feea6eab790"/>
        <function-ref name="granted" scoped="" ref="0x7feea6eab920"/>
        <function-ref name="isOwner" scoped="" ref="0x7feea6eabab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7feea6ea15b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7feea6ea15b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7feea6ea1950"/>
        <function-ref name="txDone" scoped="" ref="0x7feea6ea1ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feea6e9e120" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feea6e9e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feea6e9e4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feea6e9e630"/>
        <function-ref name="led1On" scoped="" ref="0x7feea6e9e7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feea6e9e950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feea6e9eae0"/>
        <function-ref name="get" scoped="" ref="0x7feea6e9ec70"/>
        <function-ref name="led1Off" scoped="" ref="0x7feea6e9ee00"/>
        <function-ref name="led2On" scoped="" ref="0x7feea6e9d4d0"/>
        <function-ref name="set" scoped="" ref="0x7feea6e9d1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7feea6e9d020"/>
        <function-ref name="led0On" scoped="" ref="0x7feea6e9d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7feea6e8d080" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7feea6e8d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7feea6e8d400"/>
        <function-ref name="txDone" scoped="" ref="0x7feea6e8d590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7feea6e91ca0" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7feea6e91ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feea6e940a0"/>
        <function-ref name="stop" scoped="" ref="0x7feea6e94230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7feea6e94550" loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7feea6e94550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7feea6e948d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7feea6e94a60"/>
        <function-ref name="setUctl" scoped="" ref="0x7feea6e94bf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7feea6e94d80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7feea6e93020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7feea6e931b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7feea6e93340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7feea6e934d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7feea6e93660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7feea6e937f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7feea6e93980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7feea6e93b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7feea6e93ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7feea6e90020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7feea6e901b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7feea6e90340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7feea6e904d0"/>
        <function-ref name="isUart" scoped="" ref="0x7feea6e90660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7feea6e907f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7feea6e90980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7feea6e90b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7feea6e90ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7feea6e90e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7feea6e8f020"/>
        <function-ref name="getMode" scoped="" ref="0x7feea6e8f1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7feea6e8f540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7feea6e8f6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7feea6e8f860"/>
        <function-ref name="tx" scoped="" ref="0x7feea6e8f9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7feea6e8fb80"/>
        <function-ref name="disableUart" scoped="" ref="0x7feea6e8fd10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7feea6e8e020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7feea6e8e1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7feea6e8e340"/>
        <function-ref name="rx" scoped="" ref="0x7feea6e8e4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7feea6e8e660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7feea6e8e7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7feea6e8e980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7feea6e8eb10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7feea6e8eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7feea6e7f1f0" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7feea6e7f1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea6e7f570"/>
        <function-ref name="isInput" scoped="" ref="0x7feea6e7f700"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea6e7f890"/>
        <function-ref name="toggle" scoped="" ref="0x7feea6e7fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea6e7fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea6e7fd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea6e7e020"/>
        <function-ref name="get" scoped="" ref="0x7feea6e7e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea6e7e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea6e7e4d0"/>
        <function-ref name="set" scoped="" ref="0x7feea6e7e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea6e7e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea6e7e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea6e7ec10"/>
        <function-ref name="clr" scoped="" ref="0x7feea6e7eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7feea6e84910" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7feea6e84910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7feea6e84c90"/>
        <function-ref name="txDone" scoped="" ref="0x7feea6e84e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7feea6e7d1f0" loc="81:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7feea6e7d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea6e7d570"/>
        <function-ref name="isInput" scoped="" ref="0x7feea6e7d700"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea6e7d890"/>
        <function-ref name="toggle" scoped="" ref="0x7feea6e7da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea6e7dbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea6e7dd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea6e7c020"/>
        <function-ref name="get" scoped="" ref="0x7feea6e7c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea6e7c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea6e7c4d0"/>
        <function-ref name="set" scoped="" ref="0x7feea6e7c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea6e7c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea6e7c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea6e7cc10"/>
        <function-ref name="clr" scoped="" ref="0x7feea6e7cda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7feea6e7b1f0" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7feea6e7b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea6e7b570"/>
        <function-ref name="isInput" scoped="" ref="0x7feea6e7b700"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea6e7b890"/>
        <function-ref name="toggle" scoped="" ref="0x7feea6e7ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea6e7bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea6e7bd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea6e7a020"/>
        <function-ref name="get" scoped="" ref="0x7feea6e7a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea6e7a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea6e7a4d0"/>
        <function-ref name="set" scoped="" ref="0x7feea6e7a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea6e7a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea6e7a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea6e7ac10"/>
        <function-ref name="clr" scoped="" ref="0x7feea6e7ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7feea6e89cc0" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7feea6e89cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7feea6e880a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7feea6e88230"/>
        <function-ref name="setUctl" scoped="" ref="0x7feea6e883c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7feea6e88550"/>
        <function-ref name="setUrctl" scoped="" ref="0x7feea6e886e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7feea6e88870"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7feea6e88a00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7feea6e88b90"/>
        <function-ref name="getUrctl" scoped="" ref="0x7feea6e88d20"/>
        <function-ref name="resetUsart" scoped="" ref="0x7feea6e87020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7feea6e871b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7feea6e87340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7feea6e874d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7feea6e87760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7feea6e878f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7feea6e87a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7feea6e87c10"/>
        <function-ref name="isUart" scoped="" ref="0x7feea6e87da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7feea6e86020"/>
        <function-ref name="isSpi" scoped="" ref="0x7feea6e861b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7feea6e86340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7feea6e864d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7feea6e86660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7feea6e867f0"/>
        <function-ref name="getMode" scoped="" ref="0x7feea6e86980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7feea6e86d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7feea6e85020"/>
        <function-ref name="setUbr" scoped="" ref="0x7feea6e851b0"/>
        <function-ref name="tx" scoped="" ref="0x7feea6e85340"/>
        <function-ref name="getUctl" scoped="" ref="0x7feea6e854d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7feea6e85660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7feea6e857f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7feea6e85980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7feea6e85b10"/>
        <function-ref name="rx" scoped="" ref="0x7feea6e85ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7feea6e85e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7feea6e84020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7feea6e841b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7feea6e84340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7feea6e844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7feea6e89410" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7feea6e89410"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feea6e89790"/>
        <function-ref name="stop" scoped="" ref="0x7feea6e89920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7feea6e811f0" loc="79:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7feea6e811f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea6e81570"/>
        <function-ref name="isInput" scoped="" ref="0x7feea6e81700"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea6e81890"/>
        <function-ref name="toggle" scoped="" ref="0x7feea6e81a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea6e81bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea6e81d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea6e80020"/>
        <function-ref name="get" scoped="" ref="0x7feea6e801b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea6e80340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea6e804d0"/>
        <function-ref name="set" scoped="" ref="0x7feea6e80660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea6e807f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea6e80980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea6e80c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea6e80da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7feea6e83210" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7feea6e83210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feea6e83590"/>
        <function-ref name="isInput" scoped="" ref="0x7feea6e83720"/>
        <function-ref name="setResistor" scoped="" ref="0x7feea6e838b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feea6e83a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7feea6e83bd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7feea6e83d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feea6e82020"/>
        <function-ref name="get" scoped="" ref="0x7feea6e821b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7feea6e82340"/>
        <function-ref name="getRaw" scoped="" ref="0x7feea6e824d0"/>
        <function-ref name="set" scoped="" ref="0x7feea6e82660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7feea6e827f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7feea6e82980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7feea6e82c10"/>
        <function-ref name="clr" scoped="" ref="0x7feea6e82da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feea6dfa110" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7feea6dfa110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7feea7689680"/>
            <typename><typedef-ref name="T32khz" ref="0x7feea76899f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feea6df9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feea6df99a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feea6df94e0"/>
        <function-ref name="overflow" scoped="" ref="0x7feea6df9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7feea6635020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7feea6635020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7feea66353a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feea6635530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7feea662f440" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7feea662f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7feea662f7c0"/>
        <function-ref name="configure" scoped="" ref="0x7feea662f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7feea6630c10" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7feea6630c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7feea662f020"/>
        <function-ref name="txDone" scoped="" ref="0x7feea662f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feea6636340" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feea6636340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feea66366c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feea6636850"/>
        <function-ref name="request" scoped="" ref="0x7feea66369e0"/>
        <function-ref name="granted" scoped="" ref="0x7feea6636b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7feea6636d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7feea6634020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7feea6634020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7feea66343a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7feea6634530"/>
        <function-ref name="setUctl" scoped="" ref="0x7feea66346c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7feea6634850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7feea66349e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7feea6634b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7feea6634d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7feea6633020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7feea66331b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7feea6633340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7feea66334d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7feea6633660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7feea66337f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7feea6633a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7feea6633c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7feea6633da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7feea6632020"/>
        <function-ref name="isUart" scoped="" ref="0x7feea66321b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7feea6632340"/>
        <function-ref name="isSpi" scoped="" ref="0x7feea66324d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7feea6632660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7feea66327f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7feea6632980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7feea6632b10"/>
        <function-ref name="getMode" scoped="" ref="0x7feea6632ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7feea6631220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7feea66313b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7feea6631540"/>
        <function-ref name="tx" scoped="" ref="0x7feea66316d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7feea6631860"/>
        <function-ref name="disableUart" scoped="" ref="0x7feea66319f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7feea6631b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7feea6631d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7feea6630020"/>
        <function-ref name="rx" scoped="" ref="0x7feea66301b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7feea6630340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7feea66304d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7feea6630660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7feea66307f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7feea6630980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7feea66357c0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7feea66357c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feea6635b40"/>
        <function-ref name="userId" scoped="" ref="0x7feea6635cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7feea6dded50" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7feea6dded50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7feea6ddd100"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feea6ddd290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7feea6ddc370" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7feea6ddc370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7feea6ddc6f0"/>
        <function-ref name="configure" scoped="" ref="0x7feea6ddc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7feea6de3ce0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7feea6de3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7feea6ddf0a0"/>
        <function-ref name="txDone" scoped="" ref="0x7feea6ddf230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feea6ddfa60" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feea6ddfa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feea6ddfde0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feea6dde020"/>
        <function-ref name="request" scoped="" ref="0x7feea6dde1b0"/>
        <function-ref name="granted" scoped="" ref="0x7feea6dde340"/>
        <function-ref name="isOwner" scoped="" ref="0x7feea6dde4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7feea6ddd590" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7feea6ddd590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feea6ddd910"/>
        <function-ref name="userId" scoped="" ref="0x7feea6dddaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7feea6dc64b0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7feea6dc64b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feea6dc6830"/>
        <function-ref name="userId" scoped="" ref="0x7feea6dc69c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7feea6dd95c0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7feea6dd95c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7feea6dd9960"/>
        <function-ref name="txDone" scoped="" ref="0x7feea6dd9af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7feea6dc7e70" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7feea6dc7e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea6dc6220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7feea6dc7020" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7feea6dc7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feea6dc73c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7feea6dc7690" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7feea6dc7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7feea6dc7a10"/>
        <function-ref name="txDone" scoped="" ref="0x7feea6dc7ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7feea6d4dbf0" loc="92:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7feea6d4dbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7feea6d4c020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feea6d4c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7feea6d4a930" loc="96:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7feea6d4a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7feea6d4acd0"/>
        <function-ref name="configure" scoped="" ref="0x7feea6d4ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7feea6d4c400" loc="93:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7feea6d4c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feea6d4c780"/>
        <function-ref name="requested" scoped="" ref="0x7feea6d4c910"/>
        <function-ref name="granted" scoped="" ref="0x7feea6d4caa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7feea6d4cc30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feea6d4cdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feea6d4ee60" loc="91:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feea6d4ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feea6d4d230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feea6d4d3c0"/>
        <function-ref name="request" scoped="" ref="0x7feea6d4d550"/>
        <function-ref name="granted" scoped="" ref="0x7feea6d4d6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7feea6d4d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7feea6d4a060" loc="94:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7feea6d4a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feea6d4a3e0"/>
        <function-ref name="userId" scoped="" ref="0x7feea6d4a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feea65cbca0" loc="44:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feea65cbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea65ca0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7feea65ca330" loc="45:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7feea65ca330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7feea65ca6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7feea65ca840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7feea65ca9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7feea65cab60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7feea65c73a0" loc="55:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7feea65c73a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7feea65c7740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feea65c78d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7feea65c4210" loc="60:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7feea65c4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7feea65c45b0"/>
        <function-ref name="configure" scoped="" ref="0x7feea65c4740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7feea65c49d0" loc="61:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7feea65c49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7feea65c4d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7feea65c3020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7feea65c31b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7feea65c3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7feea65c7b20" loc="56:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7feea65c7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feea65c5020"/>
        <function-ref name="requested" scoped="" ref="0x7feea65c51b0"/>
        <function-ref name="granted" scoped="" ref="0x7feea65c5340"/>
        <function-ref name="isOwner" scoped="" ref="0x7feea65c54d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feea65c5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feea65c3590" loc="62:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feea65c3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feea65c3910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feea65c3aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7feea65c3c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feea65c3dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feea65c2020"/>
        <function-ref name="get" scoped="" ref="0x7feea65c21b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7feea65c2340"/>
        <function-ref name="led0On" scoped="" ref="0x7feea65c2980"/>
        <function-ref name="set" scoped="" ref="0x7feea65c2660"/>
        <function-ref name="led2On" scoped="" ref="0x7feea65c24d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7feea65c27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feea65c8540" loc="54:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feea65c8540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feea65c88e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feea65c8a70"/>
        <function-ref name="request" scoped="" ref="0x7feea65c8c00"/>
        <function-ref name="granted" scoped="" ref="0x7feea65c8d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7feea65c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7feea65c58b0" loc="57:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7feea65c58b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feea65c5c30"/>
        <function-ref name="userId" scoped="" ref="0x7feea65c5dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7feea65c2c50" loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7feea65c2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feea65c1020"/>
        <function-ref name="runTask" scoped="" ref="0x7feea65c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7feea6d30400" loc="72:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7feea6d30400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7feea6d30780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7feea6d309d0" loc="73:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7feea6d309d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feea6d30d50"/>
        <function-ref name="requested" scoped="" ref="0x7feea6d2f020"/>
        <function-ref name="granted" scoped="" ref="0x7feea6d2f1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7feea6d2f340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feea6d2f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7feea6d45b20" loc="70:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7feea6d45b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feea6d30020"/>
        <function-ref name="stop" scoped="" ref="0x7feea6d301b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7feea6d2f720" loc="74:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7feea6d2f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feea6d2faa0"/>
        <function-ref name="userId" scoped="" ref="0x7feea6d2fc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7feea6592b00" loc="62:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7feea6592b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7feea6592e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7feea65910f0" loc="63:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7feea65910f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feea6591470"/>
        <function-ref name="requested" scoped="" ref="0x7feea6591600"/>
        <function-ref name="granted" scoped="" ref="0x7feea6591790"/>
        <function-ref name="isOwner" scoped="" ref="0x7feea6591920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feea6591ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7feea65923a0" loc="60:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7feea65923a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feea6592720"/>
        <function-ref name="stop" scoped="" ref="0x7feea65928b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7feea6591d00" loc="64:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7feea6591d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feea658f0a0"/>
        <function-ref name="userId" scoped="" ref="0x7feea658f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7feea6d0f920" loc="3:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7feea6d0f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7feea6d0fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7feea6d0e020" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7feea6d0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feea6d0e3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feea6d0e530"/>
        <function-ref name="request" scoped="" ref="0x7feea6d0e6c0"/>
        <function-ref name="granted" scoped="" ref="0x7feea6d0e850"/>
        <function-ref name="isOwner" scoped="" ref="0x7feea6d0e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7feea6d0f0c0" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7feea6d0f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feea6d0f440"/>
        <function-ref name="stop" scoped="" ref="0x7feea6d0f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7feea6cfd8d0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7feea6cfd8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7feea6cfdc50"/>
        <function-ref name="offset" scoped="" ref="0x7feea6cfdde0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7feea6cfa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7feea6cde720" loc="43:/home/jyxk/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7feea6cde720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7feea6cba5f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7feea6cb83a0"/>
        <function-ref name="element" scoped="" ref="0x7feea6cb8a10"/>
        <function-ref name="full" scoped="" ref="0x7feea6cbb810"/>
        <function-ref name="maxSize" scoped="" ref="0x7feea6cba170"/>
        <function-ref name="dequeue" scoped="" ref="0x7feea6cbaca0"/>
        <function-ref name="empty" scoped="" ref="0x7feea6cbb390"/>
        <function-ref name="size" scoped="" ref="0x7feea6cbbc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7feea6cb35a0" loc="93:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7feea6cb35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7feea6caf4a0"/>
        <function-ref name="enqueue" scoped="" ref="0x7feea6cae260"/>
        <function-ref name="element" scoped="" ref="0x7feea6cae8d0"/>
        <function-ref name="full" scoped="" ref="0x7feea6cb2680"/>
        <function-ref name="maxSize" scoped="" ref="0x7feea6caf020"/>
        <function-ref name="dequeue" scoped="" ref="0x7feea6cafb50"/>
        <function-ref name="empty" scoped="" ref="0x7feea6cb2200"/>
        <function-ref name="size" scoped="" ref="0x7feea6cb2b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7feea6cac020" loc="94:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7feea6cac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feea6cac3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feea6cac530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feea6cac6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7feea6cac850"/>
        <function-ref name="sendDone" scoped="" ref="0x7feea6cac9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7feea6cacc70" loc="95:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7feea6cacc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feea6cab020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feea6cab1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feea6cab340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feea6cab4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feea6cab660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7feea6ca6020" loc="114:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7feea6ca6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feea6ca63a0"/>
        <function-ref name="runTask" scoped="" ref="0x7feea6ca6530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feea6cb4470" loc="89:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feea6cb4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea6cb47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feea6cab8e0" loc="96:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7feea6cab8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feea6cabc60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feea6cabdf0"/>
        <function-ref name="led1On" scoped="" ref="0x7feea6caa020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feea6caa1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feea6caa340"/>
        <function-ref name="get" scoped="" ref="0x7feea6caa4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7feea6caa660"/>
        <function-ref name="led2Off" scoped="" ref="0x7feea6caaca0"/>
        <function-ref name="set" scoped="" ref="0x7feea6caa7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7feea6caa980"/>
        <function-ref name="led2On" scoped="" ref="0x7feea6caab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7feea6cb1c90" loc="90:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7feea6cb1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7feea6cb30a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7feea6c8f7e0" loc="43:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7feea6c8f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7feea6c8fb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feea6c8cb20" loc="94:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7feea6c8cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feea6c88020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7feea6c88300" loc="95:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7feea6c88300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7feea6c88680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7feea6c800f0" loc="39:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7feea6c800f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7feea6c80470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7feea6c80810" loc="40:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7feea6c80810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feea6c80b90"/>
        <function-ref name="stopDone" scoped="" ref="0x7feea6c80d20"/>
        <function-ref name="start" scoped="" ref="0x7feea6c7f020"/>
        <function-ref name="stop" scoped="" ref="0x7feea6c7f1b0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7feea7863e10" loc="62:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7feea7864a20" loc="60:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7feea7833b40" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7feea7835de0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7feea7833420" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7feea7835700" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7feea78345a0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7feea7839910" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7feea7835020" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7feea7834cc0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7feea79d6020" loc="62:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7feea7c9bdd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7feea77e0020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7feea77e1cc0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7feea77e4390" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feea782b5a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7feea7829020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7feea77e0890" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7feea77df7b0" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7feea77e1560" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7feea77df020" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7feea77e4b30" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7feea77e3350" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7feea77e3da0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feea782b5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7feea7829020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7feea77e3b20" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feea782b5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7feea7829020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7feea77d30e0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7feea77d0730" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7feea77d04b0" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7feea77cf2e0" loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7feea77cf060" loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7feea77d1ca0" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7feea77d13e0" loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7feea77d3a90" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7feea77d3810" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7feea77da3e0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7feea77dad60" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7feea77daae0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7feea77d8790" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7feea77d8510" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7feea77d72a0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7feea77d7020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7feea77d7990" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7feea77ea810" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7feea77e72a0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7feea77e7020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7feea77e9020" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7feea77f0ab0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7feea77e9760" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7feea77ec9b0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7feea77ea120" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7feea77ec270" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7feea77eb0e0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7feea77eb9f0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7feea77eb770" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7feea77e7cb0" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7feea77e7a30" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7feea77a91f0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7feea78f9a80" loc="85:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7feea78f81f0" loc="86:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7feea78f92b0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7feea7b12830" loc="52:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7feea7d54020" loc="57:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7feea7d53020" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7feea7d54790" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7feea7d48350" loc="67:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7feea7d48ba0" loc="75:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feea7685350" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feea7685350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7feea767d1f0" loc="136:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7feea7682a60" loc="83:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7feea7680820" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7feea7680250" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7feea7680590" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7feea7681a60" loc="98:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7feea767c270" loc="151:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7feea767d980" loc="144:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7feea7681270" loc="92:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7feea7683020" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7feea7685c40" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7feea767f820" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7feea767f250" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7feea767f590" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7feea7683ae0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7feea7683860" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7feea7682350" loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7feea7667070" loc="61:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7feea7667820" loc="67:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7feea7666030" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7feea7665020" loc="83:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7feea76647d0" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7feea7662020" loc="117:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7feea76667c0" loc="77:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7feea7662b90" loc="134:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7feea7662910" loc="134:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7feea76698a0" loc="56:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7feea7665800" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7feea7664020" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7feea764c270" loc="44:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7feea764c9a0" loc="45:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7feea764d420" loc="42:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7feea764a820" loc="47:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7feea764db20" loc="43:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7feea764a0e0" loc="46:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7feea764e610" loc="40:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7feea764ece0" loc="41:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7feea7621190" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7feea76218e0" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7feea761b2e0" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7feea761b060" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7feea76239c0" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7feea761f7d0" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7feea761bbd0" loc="117:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7feea761f070" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7feea7622990" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7feea761d020" loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7feea7622190" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7feea7626aa0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7feea761e020" loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7feea761d7c0" loc="101:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7feea761e7e0" loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7feea7623270" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feea73d2c50" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feea73d2c50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7feea73ce5a0" loc="61:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7feea83b4920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feea73c95d0" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feea73c95d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7feea73c9810" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feea73c9810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7feea73c4390" loc="109:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feea73c9810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7feea73c73b0" loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7feea73c59d0" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feea73c9810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feea73c9810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7feea73c5400" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feea73c9810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7feea73c5740" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feea73c9810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7feea73c7b90" loc="88:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7feea73c4b80" loc="116:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feea73c9810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7feea73c8390" loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feea73c9810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7feea73c8110" loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feea73c9810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7feea73c8bc0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feea735ce20" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feea735ce20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7feea73570d0" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feea73570d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7feea73579f0" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feea73570d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7feea7355b10" loc="76:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7feea73552b0" loc="71:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7feea73542b0" loc="82:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7feea72230d0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7feea787bd10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7feea7224730" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7feea787bd10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7feea7224ab0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feea7224de0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7feea721f6d0" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feea721f0d0" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feea721f400" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7feea721e840" loc="123:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7feea7222430" loc="96:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feea72221b0" loc="96:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7feea7220950" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feea7220370" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7feea72206c0" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7feea721a020" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feea7226c60" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7feea7218110" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feea721ae10" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7feea7214490" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feea7216e50" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feea72141c0" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7feea7216560" loc="106:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7feea72175e0" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feea7217020" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feea7217350" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7feea7205d30" loc="177:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7feea787b930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feea7205ab0" loc="177:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7feea720ea10" loc="88:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7feea787bd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feea720e790" loc="88:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7feea7225e60" loc="68:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7feea787bd10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7feea7211950" loc="78:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7feea787bd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feea72116d0" loc="78:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7feea720b3a0" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7feea787bd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feea7210d70" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7feea720b110" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7feea787bd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7feea720de50" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7feea787bd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feea720d870" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7feea720dbc0" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7feea787bd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7feea7209810" loc="147:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7feea787b550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feea7209590" loc="147:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7feea7206b90" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7feea787b550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feea72065e0" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7feea7206900" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7feea787b550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7feea720a600" loc="136:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feea720a380" loc="136:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7feea72042f0" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7feea787b930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feea7207cf0" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7feea7204060" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7feea787b930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7feea7202190" loc="195:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7feea787b930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7feea71ffad0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feea71ff850" loc="59:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7feea71fdcd0" loc="71:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feea71fda50" loc="71:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7feea71fb020" loc="85:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feea71fece0" loc="85:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7feea71f45e0" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feea71f4020" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feea71f4350" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7feea71efbb0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feea71ef5b0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feea71ef8e0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7feea71f0d20" loc="112:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7feea71f2900" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feea71f2680" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7feea71f1e00" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feea71f1820" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7feea71f1b70" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7feea7184ab0" loc="113:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7feea7184830" loc="113:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7feea7181020" loc="138:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7feea7183d30" loc="138:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7feea7187d70" loc="104:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7feea7183350" loc="130:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7feea717e410" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
              <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feea7185a90" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7feea7185de0" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feea717e130" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7feea7110630" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feea7110020" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7feea71103a0" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7feea7113670" loc="15:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7feea7111620" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feea7111020" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feea786b720"/>
                <typename><typedef-ref name="message_t" ref="0x7feea786ad80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7feea7111390" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7feea70f30e0" loc="95:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7feea70f38f0" loc="105:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7feea70f1790" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7feea70f1020" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7feea70fb120" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7feea70fa560" loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7feea70f82a0" loc="94:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feea70f8020" loc="94:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7feea70fade0" loc="79:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7feea70fbc90" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feea70fba10" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7feea70f8b00" loc="100:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7feea70f96e0" loc="85:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7feea7103990" loc="71:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7feea7102350" loc="81:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7feea7103020" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7feea7107c30" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7feea7101020" loc="91:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7feea7102c50" loc="91:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7feea7106c60" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7feea70ffa60" loc="69:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feea70ff7e0" loc="69:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7feea70fe5c0" loc="80:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7feea70fe340" loc="80:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7feea6fc7c40" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7feea6fc7670" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feea6fc79b0" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7feea6fc2a70" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7feea6fc27f0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7feea6fc1890" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7feea6fc12c0" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feea6fc1600" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7feea6fc4610" loc="65:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7feea6fc02c0" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7feea6fbf820" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feea6fbfb60" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7feea6fc0020" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7feea6fc2020" loc="72:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7feea6fc6610" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7feea6fc5bd0" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feea6fc6020" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7feea6fc6370" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7feea6f9f5b0" loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7feea6f9f330" loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7feea6f9fdf0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7feea6f9ecf0" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7feea6f9e700" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7feea6f9ea60" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7feea6f9cb50" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7feea6f43270" loc="53:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7feea6f43ba0" loc="61:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7feea6f3f070" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7feea6f68450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7feea6f68870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7feea6f479c0" loc="120:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7feea6f48990" loc="97:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7feea6f48020" loc="88:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7feea6f471f0" loc="102:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7feea6f46470" loc="128:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7feea6f38510" loc="65:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7feea6f3bcc0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7feea6f302a0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feea6f30020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7feea6f31780" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7feea6f0baf0" loc="213:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7feea6f16790" loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7feea6f23530" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feea6f973b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7feea6f97bf0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7feea6f232b0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feea6f973b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7feea6f97bf0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7feea6f19870" loc="123:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7feea6f20a40" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feea6f92360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7feea6f92ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7feea6f207c0" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feea6f92360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7feea6f92ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7feea6f10e70" loc="180:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7feea6f0c480" loc="197:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7feea6f20020" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feea6f95290"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7feea6f95a20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7feea6f1f270" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feea6f92360"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7feea6f92ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7feea6f1b020" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7feea6f1cd30" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7feea6f1c610" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7feea6f10740" loc="179:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7feea6f22780" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feea6f95290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7feea6f95a20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7feea6f22500" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feea6f95290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7feea6f95a20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7feea6f1e420" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7feea6f0e5d0" loc="181:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7feea6f1ee00" loc="90:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7feea6f1eb80" loc="90:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7feea6f1a910" loc="113:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7feea6f190e0" loc="118:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7feea6f11840" loc="177:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7feea6f14790" loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7feea6f177e0" loc="133:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7feea6f10020" loc="178:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7feea6f15020" loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7feea6f0ecf0" loc="182:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7feea6f1b800" loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7feea6fa0330"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7feea6f99a50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7feea6f0d4c0" loc="187:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7feea6f0b350" loc="207:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7feea6f1fc10" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7feea6f1f990" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7feea83b4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7feea6f094d0" loc="224:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feea6f09250" loc="224:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7feea6f23d10" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7feea6f973b0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7feea6f97bf0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7feea6f17020" loc="128:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7feea6f15770" loc="153:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7feea6f11020" loc="174:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7feea6f68450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7feea6f68870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7feea6f12cf0" loc="174:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7feea6f68450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7feea6f68870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7feea6f122a0" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7feea6f7b420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7feea6f7b840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7feea6f12020" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7feea6f7b420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7feea6f7b840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7feea6f09d90" loc="231:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7feea6f0dcb0" loc="192:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7feea6f1a070" loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7feea6f0cbe0" loc="202:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7feea6f14020" loc="158:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7feea6f16020" loc="138:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7feea6e91030" loc="95:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7feea6e91880" loc="105:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7feea6de9020" loc="90:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7feea6de9880" loc="98:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7feea6dd44a0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7feea6dbb900" loc="56:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7feea6dbaa20" loc="73:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7feea6dbb070" loc="46:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7feea6dba1f0" loc="65:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7feea6db8390" loc="81:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7feea6daeb60" loc="79:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7feea6db7b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7feea6dae8e0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7feea6db7b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7feea6db3b90" loc="53:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7feea6db06f0" loc="62:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7feea6db7b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7feea6db0470" loc="62:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7feea6db7b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7feea6dae030" loc="70:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7feea6db7b40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7feea6d414b0" loc="62:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7feea6cdb1e0" loc="43:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7feea6cdb1e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7feea6cd89e0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7feea6cdb1e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7feea6cd74a0" loc="97:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feea7d4fcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7feea6cdb1e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7feea6cd7220" loc="97:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7feea6cdb1e0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7feea83bac30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7feea83bac30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7feea6cd5440" loc="108:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7feea6cdb1e0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7feea6cd51c0" loc="108:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7feea6cda270" loc="57:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7feea6cd8270" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7feea6cd6610" loc="88:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7feea6cdb1e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7feea6cdba90" loc="50:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feea7d58090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7feea6cda9f0" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feea83b4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7feea6cb1940" loc="49:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7feea6cb16c0" loc="49:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
