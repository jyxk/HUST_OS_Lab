<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="62:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1cc73a5020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1cc7592df0"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1cc7592df0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1cc73d1590"/></to>
    </wire>
    <wire loc="64:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7f1cc73aa7f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1cc6f7c370"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1cc6f7c370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1cc711e610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1cc739b8d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1cc73bab40"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1cc73bab40"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1cc738f620"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1cc758e320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1cc69dbb20"/></to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1cc758e320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1cc6326ca0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1cc758e320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1cc6e65bc0"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1cc758e320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1cc6a05d70"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1cc758e320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1cc7115400"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f1cc73d1c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f1cc7a813a0"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f1cc7a813a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f1cc762c140"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f1cc73c46c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1cc7590300"/></to>
    </wire>
    <wire loc="48:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1cc7590300"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1cc7589510"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1cc73c4dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f1cc758e320"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f1cc7589c20"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f1cc758a910"/></to>
    </wire>
    <wire loc="46:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f1cc758a910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1cc756a850"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f1cc7588380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1cc758b6d0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f1cc7588a60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1cc7367dd0"/></to>
    </wire>
    <wire loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1cc756a850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1cc7551c00"/></to>
    </wire>
    <wire loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1cc7561de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1cc7550350"/></to>
    </wire>
    <wire loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1cc77044c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1cc754f680"/></to>
    </wire>
    <wire loc="113:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f1cc750c5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1cc74496d0"/></to>
    </wire>
    <wire loc="126:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f1cc74fa020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1cc7442b30"/></to>
    </wire>
    <wire loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f1cc7503700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1cc744f160"/></to>
    </wire>
    <wire loc="149:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f1cc74e7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1cc7428cb0"/></to>
    </wire>
    <wire loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f1cc750aaa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1cc7450480"/></to>
    </wire>
    <wire loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f1cc74ed020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1cc7428020"/></to>
    </wire>
    <wire loc="170:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f1cc74e4a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1cc7411cb0"/></to>
    </wire>
    <wire loc="154:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f1cc74f45a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1cc7422220"/></to>
    </wire>
    <wire loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f1cc750db10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1cc749f9d0"/></to>
    </wire>
    <wire loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f1cc74e9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1cc74372f0"/></to>
    </wire>
    <wire loc="134:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f1cc74ef3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1cc7438610"/></to>
    </wire>
    <wire loc="133:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f1cc74f95a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1cc7439220"/></to>
    </wire>
    <wire loc="115:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f1cc7502700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1cc74477a0"/></to>
    </wire>
    <wire loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f1cc74e6a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1cc74202f0"/></to>
    </wire>
    <wire loc="140:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f1cc74f8be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1cc74326d0"/></to>
    </wire>
    <wire loc="114:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f1cc7509890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1cc7448ac0"/></to>
    </wire>
    <wire loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f1cc751d060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1cc74ad540"/></to>
    </wire>
    <wire loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f1cc74edda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1cc7421610"/></to>
    </wire>
    <wire loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f1cc75130c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1cc7451020"/></to>
    </wire>
    <wire loc="161:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f1cc74f3a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1cc741a6d0"/></to>
    </wire>
    <wire loc="101:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f1cc74fd6d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1cc7457a90"/></to>
    </wire>
    <wire loc="142:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f1cc74e8a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1cc74307a0"/></to>
    </wire>
    <wire loc="100:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f1cc7505cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1cc7458de0"/></to>
    </wire>
    <wire loc="141:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f1cc74ee1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1cc7431ac0"/></to>
    </wire>
    <wire loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f1cc74e5a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1cc74187a0"/></to>
    </wire>
    <wire loc="147:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f1cc74f50c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1cc742ab30"/></to>
    </wire>
    <wire loc="120:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f1cc74fc6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1cc74a53e0"/></to>
    </wire>
    <wire loc="162:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f1cc74ecb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1cc7419ac0"/></to>
    </wire>
    <wire loc="128:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f1cc74eaa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1cc7440cb0"/></to>
    </wire>
    <wire loc="169:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f1cc74eba20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1cc7411020"/></to>
    </wire>
    <wire loc="127:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f1cc74f0570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1cc7440020"/></to>
    </wire>
    <wire loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f1cc74f1020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1cc7413b30"/></to>
    </wire>
    <wire loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f1cc74ab450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1cc74acd80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1cc74abaa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f1cc740caa0"/></to>
    </wire>
    <wire loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1cc74aa120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f1cc7408260"/></to>
    </wire>
    <wire loc="102:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1cc7456930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1cc74ad540"/></to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1cc7454020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1cc74acd80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1cc744e020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1cc74ad540"/></to>
    </wire>
    <wire loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1cc744c7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1cc74acd80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1cc7446610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1cc74ad540"/></to>
    </wire>
    <wire loc="117:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1cc7445c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1cc74acd80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f1cc74a32f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1cc74a4bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1cc74a3940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f1cc74089f0"/></to>
    </wire>
    <wire loc="123:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1cc74a2020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f1cc7407240"/></to>
    </wire>
    <wire loc="129:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1cc743fb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1cc74a53e0"/></to>
    </wire>
    <wire loc="130:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1cc743d2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1cc74a4bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1cc7436160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1cc74a53e0"/></to>
    </wire>
    <wire loc="137:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1cc74357a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1cc74a4bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1cc742f610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1cc74a53e0"/></to>
    </wire>
    <wire loc="144:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1cc742ec50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1cc74a4bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1cc7427b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1cc74a53e0"/></to>
    </wire>
    <wire loc="151:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1cc74252f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1cc74a4bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1cc741f160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1cc74a53e0"/></to>
    </wire>
    <wire loc="158:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1cc741e7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1cc74a4bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1cc7417610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1cc74a53e0"/></to>
    </wire>
    <wire loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1cc7416c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1cc74a4bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1cc7410b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1cc74a53e0"/></to>
    </wire>
    <wire loc="172:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1cc740e2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1cc74a4bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f1cc7af04f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1cc762a040"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f1cc7626490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f1cc7a183b0"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1cc7367dd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1cc738f020"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1cc7387b50"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f1cc73905a0"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1cc73905a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1cc714f020"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1cc738de30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f1cc7369830"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1cc7369830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1cc713bb90"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1cc7386020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f1cc7368b50"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1cc7368b50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1cc7136710"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1cc713e2f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f1cc7310200"/></to>
    </wire>
    <wire loc="486:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f1cc7310200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71ec740"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1cc713ade0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f1cc730d200"/></to>
    </wire>
    <wire loc="487:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f1cc730d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71e7100"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1cc7135930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f1cc730b200"/></to>
    </wire>
    <wire loc="488:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f1cc730b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71e3d10"/></to>
    </wire>
    <wire loc="442:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f1cc7351020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7285100"/></to>
    </wire>
    <wire loc="455:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f1cc733c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7256d10"/></to>
    </wire>
    <wire loc="531:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f1cc72f3560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7248d10"/></to>
    </wire>
    <wire loc="551:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f1cc72ce570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71bc100"/></to>
    </wire>
    <wire loc="532:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f1cc72f1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7242740"/></to>
    </wire>
    <wire loc="460:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f1cc7338020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc724c100"/></to>
    </wire>
    <wire loc="473:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f1cc7324200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc721ce00"/></to>
    </wire>
    <wire loc="497:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f1cc72ff200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71c6d10"/></to>
    </wire>
    <wire loc="535:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f1cc72eb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7239d10"/></to>
    </wire>
    <wire loc="545:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f1cc72da570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71d9100"/></to>
    </wire>
    <wire loc="557:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f1cc72c6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71b8d10"/></to>
    </wire>
    <wire loc="445:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f1cc734b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7277100"/></to>
    </wire>
    <wire loc="536:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f1cc72e9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7234740"/></to>
    </wire>
    <wire loc="450:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f1cc7347020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc726e740"/></to>
    </wire>
    <wire loc="463:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f1cc7332020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc723d100"/></to>
    </wire>
    <wire loc="476:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f1cc731e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc720ed10"/></to>
    </wire>
    <wire loc="489:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f1cc7309200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71de740"/></to>
    </wire>
    <wire loc="500:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f1cc72f9200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71b8d10"/></to>
    </wire>
    <wire loc="440:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f1cc7355020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7290d10"/></to>
    </wire>
    <wire loc="453:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f1cc7341020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc725f860"/></to>
    </wire>
    <wire loc="466:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f1cc732c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc722f100"/></to>
    </wire>
    <wire loc="530:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f1cc72f5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7248d10"/></to>
    </wire>
    <wire loc="548:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f1cc72d4570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71ca100"/></to>
    </wire>
    <wire loc="555:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f1cc72c8570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71b8d10"/></to>
    </wire>
    <wire loc="541:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f1cc72e1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71f1d10"/></to>
    </wire>
    <wire loc="471:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f1cc7328020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7226a60"/></to>
    </wire>
    <wire loc="484:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f1cc7314200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71f5100"/></to>
    </wire>
    <wire loc="495:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f1cc7303200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71cf740"/></to>
    </wire>
    <wire loc="549:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f1cc72d2570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71c6d10"/></to>
    </wire>
    <wire loc="538:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f1cc72e7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7200d10"/></to>
    </wire>
    <wire loc="443:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f1cc734f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7281d10"/></to>
    </wire>
    <wire loc="456:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f1cc733a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7251740"/></to>
    </wire>
    <wire loc="493:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f1cc7307200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71d9100"/></to>
    </wire>
    <wire loc="461:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f1cc7336020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7248d10"/></to>
    </wire>
    <wire loc="474:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f1cc7322200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7217740"/></to>
    </wire>
    <wire loc="498:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f1cc72fd200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71c1740"/></to>
    </wire>
    <wire loc="540:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f1cc72e3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71f5100"/></to>
    </wire>
    <wire loc="438:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f1cc7362020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc72996d0"/></to>
    </wire>
    <wire loc="451:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f1cc7345020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7268100"/></to>
    </wire>
    <wire loc="464:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f1cc7330020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7239d10"/></to>
    </wire>
    <wire loc="477:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f1cc731c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7209740"/></to>
    </wire>
    <wire loc="542:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f1cc72df580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc722f100"/></to>
    </wire>
    <wire loc="546:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f1cc72d8570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71d4d10"/></to>
    </wire>
    <wire loc="552:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f1cc72cc570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71b8d10"/></to>
    </wire>
    <wire loc="482:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f1cc7318200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7200d10"/></to>
    </wire>
    <wire loc="543:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f1cc72dc580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc722bd10"/></to>
    </wire>
    <wire loc="441:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f1cc7353020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc728a740"/></to>
    </wire>
    <wire loc="454:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f1cc733f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc725a270"/></to>
    </wire>
    <wire loc="467:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f1cc732a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc722bd10"/></to>
    </wire>
    <wire loc="539:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f1cc72e5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71fa740"/></to>
    </wire>
    <wire loc="550:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f1cc72d0570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71c1740"/></to>
    </wire>
    <wire loc="472:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f1cc7326200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7221460"/></to>
    </wire>
    <wire loc="485:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f1cc7312200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71f1d10"/></to>
    </wire>
    <wire loc="496:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f1cc7301200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71ca100"/></to>
    </wire>
    <wire loc="444:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f1cc734d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc727c740"/></to>
    </wire>
    <wire loc="494:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f1cc7305200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71d4d10"/></to>
    </wire>
    <wire loc="449:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f1cc7349020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7273d10"/></to>
    </wire>
    <wire loc="462:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f1cc7334020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7242740"/></to>
    </wire>
    <wire loc="475:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f1cc7320200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7212100"/></to>
    </wire>
    <wire loc="499:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f1cc72fb200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71bc100"/></to>
    </wire>
    <wire loc="439:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f1cc7357020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7294100"/></to>
    </wire>
    <wire loc="452:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f1cc7343020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7264d10"/></to>
    </wire>
    <wire loc="465:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f1cc732e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7234740"/></to>
    </wire>
    <wire loc="478:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f1cc731a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc7204100"/></to>
    </wire>
    <wire loc="534:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f1cc72ed560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc723d100"/></to>
    </wire>
    <wire loc="547:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f1cc72d6570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71cf740"/></to>
    </wire>
    <wire loc="533:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f1cc72ef580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc723d100"/></to>
    </wire>
    <wire loc="483:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f1cc7316200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71fa740"/></to>
    </wire>
    <wire loc="554:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f1cc72ca570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71bc100"/></to>
    </wire>
    <wire loc="558:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f1cc72c4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc71de740"/></to>
    </wire>
    <wire loc="529:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f1cc72f71f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1cc724c100"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1cc711e610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1cc71141d0"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1cc71141d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1cc6f9d150"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1cc7115400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1cc7018020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f1cc710ba80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1cc6f8f790"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1cc7018020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1cc6501380"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f1cc6f97640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1cc6fec2f0"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1cc6fe7850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1cc7018870"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1cc7018870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1cc64fb020"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1cc6f8ea60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1cc7091900"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1cc7091900"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1cc7074cf0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1cc6501380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1cc64e6a30"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f1cc64f5780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1cc6501bd0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1cc6501bd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1cc64e5340"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1cc64f73d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1cc7091900"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1cc64e14c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1cc64eb7b0"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1cc64eb7b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1cc70ec8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1cc64e0a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1cc64eada0"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1cc64eada0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1cc70e9560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1cc64dfda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1cc64e80c0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1cc64e80c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1cc70e6020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1cc70ec8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1cc74fc6c0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1cc70e9560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f1cc74fa020"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1cc70e6020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f1cc74f0570"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1cc70ec8b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1cc74fc6c0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1cc70e9560"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f1cc74f8be0"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1cc70e6020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f1cc74ee1f0"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1cc70ec8b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1cc74fc6c0"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1cc70e9560"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f1cc74f50c0"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1cc70e6020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f1cc74ed020"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1cc70ec8b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1cc74fc6c0"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1cc70e9560"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f1cc74f45a0"/></to>
    </wire>
    <wire loc="76:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1cc70e6020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f1cc74edda0"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1cc70ec8b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1cc74fc6c0"/></to>
    </wire>
    <wire loc="79:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1cc70e9560"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f1cc74f3a50"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1cc70e6020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f1cc74ecb80"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1cc70ec8b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1cc74fc6c0"/></to>
    </wire>
    <wire loc="83:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1cc70e9560"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f1cc74f1020"/></to>
    </wire>
    <wire loc="84:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1cc70e6020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f1cc74eba20"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f1cc70570f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1cc708f990"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1cc708f990"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1cc7089b80"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1cc707ac50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1cc74fc6c0"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f1cc6fe39c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1cc7af04f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f1cc6f92a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1cc7af04f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1cc6a00020"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f1cc6a28930"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1cc69fb100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1cc6a2f020"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1cc6a2f020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1cc644e390"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1cc69fbd50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1cc6a2fc30"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1cc6a2fc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1cc6eca7e0"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f1cc69de7e0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f1cc69fe5f0"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1cc6eca7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1cc6e6a400"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1cc6a2e8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1cc6ec9470"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1cc6ec9470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1cc6e6ccb0"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f1cc6a2c020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1cc6ec7b20"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1cc6ec7b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1cc6e69060"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1cc644d060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1cc6f27cf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1cc644dc70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1cc6ec9470"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1cc6f27cf0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1cc6edb580"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1cc6eda400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1cc6ed03f0"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1cc6ed03f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1cc6ec07d0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1cc6ed8060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1cc6ec9470"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1cc6ed7720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1cc6eca7e0"/></to>
    </wire>
    <wire loc="169:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f1cc6ed6480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1cc7af04f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f1cc6ed6c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1cc7af04f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1cc6ecb3b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1cc6e622f0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1cc6e622f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1cc6e52450"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1cc6eca1d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1cc6e6c6c0"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1cc6e65bc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1cc6e53d60"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1cc6e5f940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1cc6ec4620"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1cc6e699f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1cc6e61e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1cc6e67760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1cc6e61320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f1cc6e5f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f1cc6a478d0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1cc6e61e10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1cc6d20830"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1cc6e61320"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1cc6d20110"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f1cc6d1f760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f1cc6e5f020"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1cc6e4adc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1cc6e5f940"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1cc6d1d590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1cc6e5f940"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1cc6d14cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1cc6e5f940"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f1cc6d1e0e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f1cc6e48ad0"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f1cc6d1e9d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f1cc6e4b4a0"/></to>
    </wire>
    <wire loc="77:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f1cc6e42e30"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f1cc6d19b70"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f1cc6e3de00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1cc6ced080"/></to>
    </wire>
    <wire loc="17:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1cc6ced080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1cc6a590c0"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f1cc6d0ad20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f1cc6ced890"/></to>
    </wire>
    <wire loc="13:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f1cc6ced890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f1cc6a60440"/></to>
    </wire>
    <wire loc="332:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f1cc6debe40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1cc7af04f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f1cc6e22d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1cc7af04f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f1cc6ded400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1cc7af04f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f1cc6de60c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1cc7af04f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f1cc6d1cc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1cc7af04f0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f1cc6d1b480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1cc7af04f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f1cc6ceb020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f1cc6a5f440"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f1cc6a5f440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f1cc6c81210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f1cc6a60440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f1cc6c84b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1cc6a5e020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1cc6a59920"/></to>
    </wire>
    <wire loc="19:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1cc6a58020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1cc6a61020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1cc6a61020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1cc6c87320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1cc6a61c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1cc6390a90"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1cc6390a90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1cc6b28d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1cc6c7e600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1cc6a5e020"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1cc6389be0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1cc6c82dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f1cc6c7f370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1cc6391e00"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1cc6391e00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1cc6b2ca60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1cc6c7abe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1cc6389440"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1cc6389440"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1cc6b2fce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1cc6c82dd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1cc6bf5e70"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f1cc6c81210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f1cc6bf3890"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f1cc6c84b50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f1cc6bf4790"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1cc6c87320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1cc6bf50d0"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1cc6bf03e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1cc6c7e600"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f1cc6bf25b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f1cc6c7f370"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1cc6beb5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1cc6c7abe0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f1cc6bf0a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1cc6bde550"/></to>
    </wire>
    <wire loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1cc6bde550"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f1cc6bd3cc0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1cc6bea020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1cc6b47110"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1cc6b47110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1cc708f990"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1cc6be8120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1cc73bab40"/></to>
    </wire>
    <wire loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1cc6bd7080"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1cc6bce910"/></to>
    </wire>
    <wire loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1cc6bdcca0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1cc6bd3410"/></to>
    </wire>
    <wire loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f1cc6bcd210"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f1cc72e5580"/></to>
    </wire>
    <wire loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f1cc6bcb1f0"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f1cc72e3580"/></to>
    </wire>
    <wire loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f1cc6bc91f0"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f1cc72e1580"/></to>
    </wire>
    <wire loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f1cc6bc71f0"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f1cc72dc580"/></to>
    </wire>
    <wire loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f1cc6bc51f0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f1cc72df580"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1cc638ea50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1cc6bde550"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1cc638e2b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1cc6b27590"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1cc6b27590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1cc6a95060"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1cc6b26370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1cc6389be0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1cc6b28d50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1cc6a97bf0"/></to>
    </wire>
    <wire loc="106:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1cc6a97bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1cc63213a0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f1cc6b2fce0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1cc6b235c0"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1cc6b2ca60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1cc6a98e60"/></to>
    </wire>
    <wire loc="105:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1cc6a98e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1cc6322540"/></to>
    </wire>
    <wire loc="108:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1cc6a95060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1cc63208b0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f1cc6b11690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1cc6bd7080"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1cc6a95930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1cc6b26370"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1cc6b104b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1cc6a95060"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1cc6a7a9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1cc6a96400"/></to>
    </wire>
    <wire loc="107:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1cc6a96400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1cc6321b20"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1cc6a8fb20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1cc6bdcca0"/></to>
    </wire>
    <wire loc="109:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1cc631f210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1cc6a95930"/></to>
    </wire>
    <wire loc="111:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1cc631f9d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1cc6324330"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1cc631cc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1cc7af04f0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1cc62ec3a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1cc6a8fb20"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1cc62ecb00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1cc6a7a400"/></to>
    </wire>
    <wire loc="84:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1cc62eb0f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1cc6a7a9d0"/></to>
    </wire>
    <wire loc="85:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1cc62ebd00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1cc6a79720"/></to>
    </wire>
    <wire loc="114:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f1cc69f41d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1cc7af04f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f1cc69d7300"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f1cc69de7e0"/></to>
    </wire>
    <wire loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1cc69cf0f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1cc7592df0"/></to>
    </wire>
    <wire loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f1cc69cf810"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1cc6ecb3b0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/jyxk/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/jyxk/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/jyxk/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BlinkC" loc="50:BlinkC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/jyxk/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc73b7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1cc73b79f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc73b7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1cc73b79f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc73b7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1cc73b79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc73b7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1cc73b79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1cc75a9550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BigQueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f1cc74df890" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f1cc74dfc30" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f1cc74de020" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f1cc74de3a0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f1cc74de720" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f1cc74dea90" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f1cc74dee20" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f1cc74dc200" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f1cc74dc5d0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f1cc74a1e80" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f1cc749e270" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f1cc72bfa10" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f1cc72bfdc0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f1cc72be1a0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f1cc72be550" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f1cc72be8c0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f1cc70cccc0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1cc70cccc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f1cc708aa40" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1cc708aa40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1cc7073570" loc="55:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1cc7073570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1cc7073d40" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1cc7073d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1cc7072160" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1cc7072160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1cc7072940" loc="58:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1cc7072940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f1cc7072d10" loc="59:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f1cc7071540" loc="60:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f1cc7071540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1cc70976e0" loc="52:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1cc70976e0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1cc7050020" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1cc7050020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1cc7050410" loc="54:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1cc7050410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1cc7050bf0" loc="55:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1cc7050bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f1cc704e020" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1cc7014cd0" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1cc7014cd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1cc6fde230" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1cc6fde230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f1cc6fde560" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1cc6f90de0" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1cc6f90de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f1cc6f73480" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1cc75a9550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f1cc6f430d0" loc="43:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1cc75a9550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f1cc6f200d0" loc="45:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f1cc6b0a020" loc="89:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f1cc6afe0d0" loc="42:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f1cc6ae3800" loc="52:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BigQueueC" loc="42:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f1cc6a2a500" loc="42:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f1cc6a2a500"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f1cc6a2a890" loc="42:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f1cc758e320" loc="58:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1cc758e320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc758e6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1cc7592df0" loc="57:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1cc7592df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1cc75911c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1cc7590300" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1cc7590300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc7590680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f1cc7588380" loc="6:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f1cc7588380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc7588700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1cc7589510" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1cc7589510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc7589890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f1cc7589c20" loc="5:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f1cc7589c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc7588020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f1cc7588a60" loc="7:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f1cc7588a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc7588de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1cc758b6d0" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1cc758b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc758ba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f1cc758a910" loc="39:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f1cc758a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc758ac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f1cc7561de0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1cc7561de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1cc7566c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1cc7566310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1cc75664a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1cc7566630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1cc7566180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1cc75667c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1cc7566950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1cc7566ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1cc756a850" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1cc756a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc756abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f1cc7550350" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1cc7550350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1cc754f340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1cc7550860"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1cc75509f0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1cc7550b80"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1cc75506d0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1cc7550d10"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1cc754f020"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1cc754f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f1cc754f680" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1cc754f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f1cc754fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1cc7551c00" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1cc7551c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc7550020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f1cc750c5a0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f1cc750c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc750c920"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc750cab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc750cc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc750cdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc750b020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc750b1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc750b340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc750b4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc750b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f1cc74fa020" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f1cc74fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc74fa3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc74fa530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc74fa6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc74fa850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc74fa9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc74fab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc74fad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc74f9020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc74f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f1cc7503700" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f1cc7503700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc7503a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc7503c10"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc7503da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc7502020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc75021b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc7502340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f1cc74e7a20" loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f1cc74e7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74e7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc74e6020"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc74e61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc74e6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74e64d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc74e6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f1cc750aaa0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f1cc750aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc750ae20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc7509020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc75091b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc7509340"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc75094d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f1cc74ed020" loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f1cc74ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74ed3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc74ed530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc74ed6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc74ed850"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc74ed9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f1cc74e4a20" loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f1cc74e4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74e4da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc74e3020"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc74e31b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc74e3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74e34d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc74e3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f1cc74f45a0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f1cc74f45a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc74f4920"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc74f4ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc74f4c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc74f4dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc74f3020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc74f31b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc74f3340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc74f34d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc74f3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f1cc750db10" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f1cc750db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc7514020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc75141b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc7514340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc75144d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc7514660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc75147f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc7514980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc7514b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc7514ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f1cc74e9a20" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f1cc74e9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74e9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc74e8020"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc74e81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc74e8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74e84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc74e8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f1cc74ef3e0" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f1cc74ef3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74ef760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc74ef8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc74efa80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc74efc10"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc74efda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f1cc74f95a0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f1cc74f95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc74f9a20"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc74f9bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc74f9d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc74f8020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc74f81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc74f8340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc74f84d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc74f8660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc74f87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f1cc7502700" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f1cc7502700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc7502a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc7502c10"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc7502da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc74fc020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74fc1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc74fc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f1cc74e6a20" loc="69:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f1cc74e6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74e6da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc74e5020"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc74e51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc74e5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74e54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc74e5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f1cc74f8be0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f1cc74f8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc74f7020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc74f71b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc74f7340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc74f74d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc74f7660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc74f77f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc74f7980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc74f7b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc74f7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f1cc7509890" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f1cc7509890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc7509c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc7509da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc7504020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc75041b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc7504340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f1cc751d060" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f1cc751d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc751d3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc751d570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc751d700"/>
        <function-ref name="get" scoped="" ref="0x7f1cc751d890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc751da20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc751dbb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc751dd40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc751c020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc751c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc751c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc751c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f1cc74edda0" loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f1cc74edda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74ec180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc74ec310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc74ec4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc74ec630"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc74ec7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f1cc75130c0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f1cc75130c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc7513440"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc75135d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc7513760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc75138f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc7513a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc7513c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc7513da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc750c020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc750c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f1cc74f3a50" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f1cc74f3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc74f3dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc74f2020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc74f21b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc74f2340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc74f24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc74f2660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc74f27f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc74f2980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc74f2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f1cc74fd6d0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f1cc74fd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74fda50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc74fdbe0"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc74fdd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc7503020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc75031b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc7503340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f1cc74e8a20" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f1cc74e8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74e8da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc74e7020"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc74e71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc74e7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74e74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc74e7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f1cc7505cf0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f1cc7505cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc750a0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc750a230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc750a3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc750a550"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc750a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f1cc74ee1f0" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f1cc74ee1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74ee570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc74ee700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc74ee890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc74eea20"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc74eebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f1cc74e5a20" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f1cc74e5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74e5da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc74e4020"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc74e41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc74e4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74e44d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc74e4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f1cc74f50c0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f1cc74f50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc74f5440"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc74f55d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc74f5760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc74f58f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc74f5a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc74f5c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc74f5da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc74f4020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc74f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f1cc74fc6c0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f1cc74fc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc74fca40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc74fcbd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc74fcd60"/>
        <function-ref name="get" scoped="" ref="0x7f1cc74fb020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc74fb1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc74fb340"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc74fb4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74fb660"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc74fb7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc74fb980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc74fbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f1cc74ecb80" loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f1cc74ecb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74eb020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc74eb1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc74eb340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc74eb4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc74eb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f1cc74eaa20" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f1cc74eaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74eada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc74e9020"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc74e91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc74e9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74e94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc74e9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f1cc74eba20" loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f1cc74eba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74ea020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc74ea1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc74ea340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc74ea4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc74ea660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f1cc74f0570" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f1cc74f0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74f08f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc74f0a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc74f0c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc74f0da0"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc74ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f1cc74f1020" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f1cc74f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc74f13a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc74f1530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc74f16c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc74f1850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc74f19e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc74f1b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc74f1d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc74f0020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc74f01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f1cc74abaa0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1cc74abaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc74abe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f1cc74ab450" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1cc74ab450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc74ab7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f1cc74aa120" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1cc74aa120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc74aa4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f1cc74acd80" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1cc74acd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc74ab180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1cc74ad540" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1cc74ad540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc74ad8c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc74ada50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc74adbe0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc74add70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc74ac020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc74ac1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc74ac340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74ac4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc74ac660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc74ac7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc74ac980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f1cc74a3940" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1cc74a3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc74a3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f1cc74a32f0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1cc74a32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc74a3670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f1cc74a2020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1cc74a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc74a23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f1cc74a4bf0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1cc74a4bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc74a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1cc74a53e0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1cc74a53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc74a5760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc74a58f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc74a5a80"/>
        <function-ref name="get" scoped="" ref="0x7f1cc74a5c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc74a5da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc74a4020"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc74a41b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74a4340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc74a44d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc74a4660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc74a47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1cc7457a90" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1cc7457a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc7457e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc7456020"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc74561b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc7456340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74564d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc7456660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1cc749f9d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1cc749f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc749fd50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc7458020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc74581b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc7458340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc74584d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc7458660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc74587f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc7458980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc7458b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1cc7454020" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1cc7454020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc74543a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1cc7458de0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1cc7458de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc7457180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc7457310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc74574a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc7457630"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc74577c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1cc7456930" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1cc7456930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc7456cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc7456e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc7455020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc74551b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc7455340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc74554d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc7455660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74557f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc7455980"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc7455b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc7455ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1cc744f160" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1cc744f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc744f4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc744f670"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc744f800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc744f990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc744fb20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc744fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1cc7451020" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1cc7451020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc74513a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc7451530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc74516c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc7451850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc74519e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc7451b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc7451d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc7450020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc74501b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1cc744c7a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1cc744c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc744cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1cc7450480" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1cc7450480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc7450800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc7450990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc7450b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc7450cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc7450e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1cc744e020" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1cc744e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc744e3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc744e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc744e6c0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc744e850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc744e9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc744eb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc744ed00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc744c020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc744c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc744c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc744c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1cc74477a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1cc74477a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc7447b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc7447cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc7447e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc7446020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74461b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc7446340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1cc74496d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1cc74496d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc7449a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc7449be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc7449d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc7448020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc74481b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc7448340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc74484d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc7448660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc74487f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1cc7445c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1cc7445c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc7444020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1cc7448ac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1cc7448ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc7448e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc7447020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc74471b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc7447340"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc74474d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1cc7446610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1cc7446610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc7446990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc7446b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc7446cb0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7446e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc7445020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc74451b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc7445340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74454d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc7445660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc74457f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc7445980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1cc7440cb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1cc7440cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc743f0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc743f230"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc743f3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc743f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc743f6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc743f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1cc7442b30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1cc7442b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc7441020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc74411b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc7441340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc74414d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc7441660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc74417f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc7441980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc7441b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc7441ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1cc743d2f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1cc743d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc743d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1cc7440020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1cc7440020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74403a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc7440530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc74406c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc7440850"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc74409e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1cc743fb40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1cc743fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc743e020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc743e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc743e340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc743e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc743e660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc743e7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc743e980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc743eb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc743eca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc743ee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc743d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1cc74372f0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1cc74372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc7437670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc7437800"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc7437990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc7437b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc7437cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc7437e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1cc7439220" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1cc7439220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc74395a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc7439730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc74398c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc7439a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc7439be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc7439d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc7438020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc74381b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc7438340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1cc74357a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1cc74357a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc7435b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1cc7438610" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1cc7438610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc7438990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc7438b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc7438cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc7438e40"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc7437020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1cc7436160" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1cc7436160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc74364e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc7436670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc7436800"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7436990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc7436b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc7436cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc7436e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc7435020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc74351b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc7435340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc74354d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1cc74307a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1cc74307a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc7430b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc7430cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc7430e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc742f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc742f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc742f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1cc74326d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1cc74326d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc7432a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc7432be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc7432d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc7431020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc74311b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc7431340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc74314d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc7431660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc74317f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1cc742ec50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1cc742ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc742c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1cc7431ac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1cc7431ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc7431e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc7430020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc74301b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc7430340"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc74304d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1cc742f610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1cc742f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc742f990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc742fb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc742fcb0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc742fe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc742e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc742e1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc742e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc742e4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc742e660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc742e7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc742e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1cc7428cb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1cc7428cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74270a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc7427230"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc74273c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc7427550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74276e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc7427870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1cc742ab30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1cc742ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc7429020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc74291b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc7429340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc74294d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc7429660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc74297f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc7429980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc7429b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc7429ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1cc74252f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1cc74252f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc7425670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1cc7428020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1cc7428020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74283a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc7428530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc74286c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc7428850"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc74289e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1cc7427b40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1cc7427b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc7426020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc74261b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc7426340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc74264d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc7426660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc74267f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc7426980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc7426b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc7426ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc7426e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc7425020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1cc74202f0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1cc74202f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc7420670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc7420800"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc7420990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc7420b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc7420cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc7420e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1cc7422220" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1cc7422220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc74225a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc7422730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc74228c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc7422a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc7422be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc7422d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc7421020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc74211b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc7421340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1cc741e7a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1cc741e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc741eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1cc7421610" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1cc7421610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc7421990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc7421b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc7421cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc7421e40"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc7420020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1cc741f160" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1cc741f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc741f4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc741f670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc741f800"/>
        <function-ref name="get" scoped="" ref="0x7f1cc741f990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc741fb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc741fcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc741fe40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc741e020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc741e1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc741e340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc741e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1cc74187a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1cc74187a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc7418b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc7418cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc7418e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc7417020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74171b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc7417340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1cc741a6d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1cc741a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc741aa50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc741abe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc741ad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc7419020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc74191b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc7419340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc74194d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc7419660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc74197f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1cc7416c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1cc7416c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc7415020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1cc7419ac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1cc7419ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc7419e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc7418020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc74181b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc7418340"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc74184d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1cc7417610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1cc7417610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc7417990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc7417b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc7417cb0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7417e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc7416020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc74161b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc7416340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74164d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc7416660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc74167f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc7416980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1cc7411cb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1cc7411cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74100a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1cc7410230"/>
        <function-ref name="captured" scoped="" ref="0x7f1cc74103c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc7410550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc74106e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1cc7410870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1cc7413b30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1cc7413b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc7412020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc74121b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc7412340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc74124d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc7412660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc74127f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc7412980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc7412b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc7412ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1cc740e2f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1cc740e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc740e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1cc7411020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1cc7411020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc74113a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc7411530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc74116c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc7411850"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc74119e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1cc7410b40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1cc7410b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc740f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc740f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc740f340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc740f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc740f660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc740f7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc740f980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc740fb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc740fca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc740fe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc740e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f1cc7407240" loc="7:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f1cc7407240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc74075c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f1cc740caa0" loc="4:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f1cc740caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc740ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f1cc7408260" loc="5:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f1cc7408260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc74085e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f1cc74089f0" loc="6:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f1cc74089f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc7408d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f1cc77044c0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1cc77044c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f1cc7704840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f1cc7a183b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f1cc7a183b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f1cc7a18730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f1cc7a188c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f1cc7a18a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f1cc7840be0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f1cc7840be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f1cc797c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f1cc7568b50" loc="39:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1cc7568b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1cc73d0b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1cc73d01b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1cc73d0340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1cc73d04d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1cc73d0020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1cc73d0660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1cc73d07f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1cc73d0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f1cc73c4dc0" loc="60:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1cc73c4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc73c3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1cc73d1590" loc="57:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1cc73d1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1cc73d1910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f1cc73c46c0" loc="59:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f1cc73c46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc73c4a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f1cc73d1c00" loc="58:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1cc73d1c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc73c4020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1cc73c41b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1cc73c4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1cc7af04f0" loc="48:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f1cc7af04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1cc7af0870"/>
        <function-ref name="runTask" scoped="" ref="0x7f1cc7af0a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1cc7a813a0" loc="47:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1cc7a813a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc7a81720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1cc7a818b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1cc7a81a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1cc762a040" loc="56:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f1cc762a040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1cc762a3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1cc762a550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f1cc7626490" loc="57:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f1cc7626490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f1cc7626810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f1cc76269a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f1cc7626b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1cc762c140" loc="55:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1cc762c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc762c4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1cc762c650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1cc762c7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x7f1cc73aa7f0" loc="52:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer0" scoped="" ref="0x7f1cc73aa7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1cc73a8cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc73b4300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1cc73a80d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1cc73b4c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f1cc73a7660"/>
        <function-ref name="gett0" scoped="" ref="0x7f1cc73a71e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1cc73b4780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1cc73b5480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1cc73a86e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1cc73b5950"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc73b5e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f1cc73a5020" loc="54:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1cc73a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1cc73a53a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1cc739b8d0" loc="53:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1cc739b8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1cc739bc50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1cc739bde0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1cc73a6020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1cc73a61b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1cc73a6340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc73a64d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1cc73a6660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1cc73a6ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc73a67f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1cc73a6980"/>
        <function-ref name="led2On" scoped="" ref="0x7f1cc73a6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1cc73bab40" loc="46:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1cc73bab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1cc7393020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1cc73931b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1cc7393340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1cc73934d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1cc7393660"/>
        <function-ref name="get" scoped="" ref="0x7f1cc73937f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1cc7393980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1cc7392020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7393b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f1cc7393ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1cc7393e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f1cc7387b50" loc="50:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f1cc7387b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc738d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc738d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc738d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc738d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc738d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc738d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc738d980"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc738db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1cc738f020" loc="46:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1cc738f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc738f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f1cc738de30" loc="51:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f1cc738de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc738c1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc738c370"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc738c500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc738c690"/>
        <function-ref name="get" scoped="" ref="0x7f1cc738c820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc738c9b0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc738cb40"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc738ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1cc738f620" loc="47:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1cc738f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1cc738f9a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1cc738fb30"/>
        <function-ref name="led1On" scoped="" ref="0x7f1cc738fcc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1cc738fe50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1cc738e020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc738e1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1cc738e340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1cc738e980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc738e4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1cc738e660"/>
        <function-ref name="led2On" scoped="" ref="0x7f1cc738e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f1cc7386020" loc="52:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f1cc7386020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc73863a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7386530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc73866c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7386850"/>
        <function-ref name="get" scoped="" ref="0x7f1cc73869e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7386b70"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7386d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7385020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f1cc73905a0" loc="41:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f1cc73905a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7390920"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7390ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7390c40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7390dd0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7369020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc73691b0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7369340"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc73694d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f1cc7369830" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f1cc7369830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7369bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7369d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7368020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc73681b0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7368340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc73684d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7368660"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc73687f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f1cc7367dd0" loc="44:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1cc7367dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc7366180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f1cc7368b50" loc="43:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f1cc7368b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7367020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc73671b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7367340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc73674d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7367660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc73677f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7367980"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7367b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f1cc7351020" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f1cc7351020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc73513a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7351530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73516c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7351850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc73519e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7351b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7351d00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7350020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc73501b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7350340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc73504d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7350660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc73507f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7350a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7350c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f1cc733c020" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f1cc733c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc733c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc733c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc733c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc733c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc733c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc733cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc733cd00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc733b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc733b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc733b340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc733b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc733b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc733b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc733ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc733bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f1cc72f3560" loc="145:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f1cc72f3560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72f38e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72f3a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72f3c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72f3d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72f2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72f21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72f2340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72f24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72f2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72f27f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72f2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72f2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72f2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72f1020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f1cc72ce570" loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f1cc72ce570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72ce8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72cea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72cec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72ceda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72cd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72cd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72cd340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72cd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72cd660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72cd7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72cd980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72cdb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72cdca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72cc020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f1cc72f1580" loc="146:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f1cc72f1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72f1900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72f1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72f1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72f1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72f0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72f01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72f0340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72f04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72f0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72f07f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72f0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72f0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72f0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72ef020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72ef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f1cc7338020" loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f1cc7338020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc73383a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7338530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73386c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7338850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc73389e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7338b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7338d00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7337020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc73371b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7337340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc73374d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7337660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc73377f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7337a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7337c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f1cc7324200" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f1cc7324200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7324580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7324710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73248a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7324a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7324bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7324d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7323020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc73231b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7323340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc73234d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7323660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc73237f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7323980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7323c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7323da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f1cc7310200" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f1cc7310200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7310580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7310710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73108a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7310a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7310bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7310d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc730f020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc730f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc730f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc730f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc730f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc730f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc730f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc730fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc730fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f1cc72ff200" loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f1cc72ff200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72ff580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72ff710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72ff8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72ffa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72ffbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72ffd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72fe020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72fe1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72fe340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72fe4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72fe660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72fe7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72fe980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72fec10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72feda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f1cc72eb580" loc="149:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f1cc72eb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72eb900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72eba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72ebc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72ebdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72ea020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72ea1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72ea340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72ea4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72ea660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72ea7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72ea980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72eab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72eaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72e9020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f1cc72da570" loc="159:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f1cc72da570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72da8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72daa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72dac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72dada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72d9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72d91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72d9340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72d94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72d9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72d97f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72d9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72d9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72d9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72d8020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f1cc72c6580" loc="171:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f1cc72c6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72c6900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72c6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72c6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72c6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72c5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72c51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72c5340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72c54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72c5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72c57f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72c5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72c5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72c5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72c4020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f1cc734b020" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f1cc734b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc734b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc734b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc734b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc734b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc734b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc734bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc734bd00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc734a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc734a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc734a340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc734a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc734a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc734a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc734aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc734ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f1cc72e9580" loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f1cc72e9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72e9900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72e9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72e9c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72e9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72e8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72e81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72e8340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72e84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72e8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72e87f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72e8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72e8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72e8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72e7020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f1cc7347020" loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f1cc7347020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc73473a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7347530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73476c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7347850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc73479e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7347b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7347d00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7346020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc73461b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7346340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc73464d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7346660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc73467f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7346a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7346c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f1cc7332020" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f1cc7332020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc73323a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7332530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73326c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7332850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc73329e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7332b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7332d00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7331020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc73311b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7331340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc73314d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7331660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc73317f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7331a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7331c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f1cc731e200" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f1cc731e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc731e580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc731e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc731e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc731ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc731ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc731ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc731d020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc731d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc731d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc731d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc731d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc731d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc731d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc731dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc731dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f1cc7309200" loc="100:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f1cc7309200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7309580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7309710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73098a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7309a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7309bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7309d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7308020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc73081b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7308340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc73084d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7308660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc73087f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7308980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7308c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7308da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f1cc72f9200" loc="111:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f1cc72f9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72f9580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72f9710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72f98a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72f9a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72f9bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72f9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72f8020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72f81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72f8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72f84d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72f8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72f87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72f8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72f8c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72f8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f1cc7355020" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f1cc7355020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc73553a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7355530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73556c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7355850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc73559e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7355b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7355d00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7354020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc73541b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7354340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc73544d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7354660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc73547f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7354a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7354c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f1cc7341020" loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f1cc7341020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc73414a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7341630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73417c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7341950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7341ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7341c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7341e00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7340020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc73401b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7340340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc73404d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7340660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc73407f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7340a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7340c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f1cc732c020" loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f1cc732c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc732c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc732c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc732c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc732c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc732c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc732cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc732cd00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc732b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc732b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc732b340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc732b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc732b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc732b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc732ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc732bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f1cc72f5580" loc="144:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f1cc72f5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72f5900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72f5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72f5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72f5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72f4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72f41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72f4340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72f44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72f4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72f47f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72f4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72f4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72f4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72f3020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f1cc72d4570" loc="162:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f1cc72d4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72d48f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72d4a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72d4c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72d4da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72d3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72d31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72d3340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72d34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72d3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72d37f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72d3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72d3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72d3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72d2020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f1cc72c8570" loc="169:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f1cc72c8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72c88f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72c8a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72c8c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72c8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72c7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72c71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72c7340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72c74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72c7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72c77f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72c7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72c7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72c7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72c6020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f1cc72e1580" loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f1cc72e1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72e1900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72e1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72e1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72e1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72e0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72e01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72e0340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72e04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72e0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72e07f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72e0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72e0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72e0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72df020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f1cc7328020" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f1cc7328020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc73285a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7328730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73288c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7328a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7328be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7328d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7327020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc73271b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7327340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc73274d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7327660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc73277f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7327980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7327c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7327da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f1cc7314200" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f1cc7314200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7314580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7314710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73148a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7314a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7314bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7314d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7313020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc73131b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7313340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc73134d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7313660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc73137f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7313980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7313c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7313da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f1cc7303200" loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f1cc7303200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7303580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7303710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73038a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7303a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7303bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7303d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7302020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc73021b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7302340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc73024d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7302660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc73027f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7302980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7302c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7302da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f1cc72d2570" loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f1cc72d2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72d28f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72d2a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72d2c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72d2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72d1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72d11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72d1340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72d14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72d1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72d17f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72d1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72d1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72d1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72d0020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f1cc72e7570" loc="152:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f1cc72e7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72e78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72e7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72e7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72e7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72e6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72e61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72e6340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72e64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72e6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72e67f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72e6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72e6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72e6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72e5020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72e51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f1cc734f020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f1cc734f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc734f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc734f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc734f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc734f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc734f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc734fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc734fd00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc734e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc734e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc734e340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc734e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc734e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc734e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc734ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc734ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f1cc733a020" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f1cc733a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc733a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc733a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc733a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc733a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc733a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc733ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc733ad00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7339020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc73391b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7339340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc73394d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7339660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc73397f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7339a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7339c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f1cc7307200" loc="104:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f1cc7307200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7307580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7307710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73078a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7307a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7307bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7307d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7306020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc73061b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7306340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc73064d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7306660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc73067f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7306980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7306c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7306da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f1cc7336020" loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f1cc7336020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc73363a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7336530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73366c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7336850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc73369e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7336b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7336d00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7335020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc73351b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7335340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc73354d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7335660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc73357f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7335a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7335c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f1cc7322200" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f1cc7322200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7322580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7322710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73228a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7322a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7322bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7322d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7321020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc73211b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7321340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc73214d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7321660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc73217f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7321980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7321c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7321da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f1cc730d200" loc="98:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f1cc730d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc730d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc730d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc730d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc730da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc730dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc730dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc730c020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc730c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc730c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc730c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc730c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc730c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc730c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc730cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc730cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f1cc72fd200" loc="109:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f1cc72fd200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72fd580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72fd710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72fd8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72fda30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72fdbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72fdd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72fc020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72fc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72fc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72fc4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72fc660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72fc7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72fc980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72fcc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72fcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f1cc72e3580" loc="154:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f1cc72e3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72e3900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72e3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72e3c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72e3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72e2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72e21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72e2340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72e24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72e2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72e27f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72e2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72e2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72e2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72e1020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f1cc7362020" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f1cc7362020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc73623a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7362530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73626c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7362850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc73629e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7362b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7362d00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7361020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc73611b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7361340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc73614d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7361660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc73617f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7361a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7361c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f1cc7345020" loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f1cc7345020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc73453a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7345530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73456c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7345850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc73459e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7345b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7345d00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7344020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc73441b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7344340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc73444d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7344660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc73447f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7344a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7344c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f1cc7330020" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f1cc7330020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc73303a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7330530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73306c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7330850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc73309e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7330b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7330d00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc732f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc732f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc732f340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc732f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc732f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc732f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc732fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc732fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f1cc731c200" loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f1cc731c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc731c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc731c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc731c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc731ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc731cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc731cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc731b020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc731b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc731b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc731b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc731b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc731b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc731b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc731bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc731bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f1cc72df580" loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f1cc72df580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72df900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72dfa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72dfc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72dfdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72dd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72dd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72dd340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72dd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72dd660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72dd7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72dd980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72ddb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72ddca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72dc020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72dc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f1cc72d8570" loc="160:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f1cc72d8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72d88f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72d8a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72d8c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72d8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72d7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72d71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72d7340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72d74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72d7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72d77f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72d7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72d7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72d7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72d6020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f1cc72cc570" loc="166:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f1cc72cc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72cc8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72cca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72ccc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72ccda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72cb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72cb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72cb340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72cb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72cb660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72cb7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72cb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72cbb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72cbca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72ca020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f1cc7318200" loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f1cc7318200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7318580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7318710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73188a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7318a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7318bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7318d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7317020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc73171b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7317340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc73174d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7317660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc73177f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7317980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7317c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7317da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f1cc72dc580" loc="157:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f1cc72dc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72dc900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72dca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72dcc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72dcdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72db020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72db1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72db340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72db4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72db660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72db7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72db980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72dbb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72dbca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72da020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f1cc7353020" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f1cc7353020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc73533a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7353530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73536c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7353850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc73539e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7353b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7353d00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7352020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc73521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7352340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc73524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7352660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc73527f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7352a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7352c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f1cc733f020" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f1cc733f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc733f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc733f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc733f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc733f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc733f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc733fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc733fd00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc733e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc733e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc733e340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc733e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc733e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc733e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc733ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc733ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f1cc732a020" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f1cc732a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc732a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc732a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc732a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc732a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc732a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc732ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc732ad00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7329020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc73291b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7329340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc73294d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7329660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc73297f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7329a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7329c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f1cc72e5580" loc="153:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f1cc72e5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72e5900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72e5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72e5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72e5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72e4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72e41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72e4340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72e44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72e4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72e47f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72e4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72e4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72e4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72e3020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f1cc72d0570" loc="164:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f1cc72d0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72d08f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72d0a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72d0c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72d0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72cf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72cf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72cf340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72cf4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72cf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72cf7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72cf980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72cfb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72cfca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72ce020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72ce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f1cc7326200" loc="83:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f1cc7326200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7326580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7326710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73268a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7326a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7326bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7326d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7325020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc73251b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7325340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc73254d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7325660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc73257f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7325980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7325c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7325da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f1cc7312200" loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f1cc7312200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7312580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7312710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73128a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7312a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7312bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7312d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7311020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc73111b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7311340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc73114d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7311660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc73117f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7311980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7311c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7311da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f1cc7301200" loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f1cc7301200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7301580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7301710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73018a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7301a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7301bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7301d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7300020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc73001b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7300340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc73004d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7300660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc73007f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7300980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7300c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7300da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f1cc734d020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f1cc734d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc734d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc734d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc734d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc734d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc734d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc734db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc734dd00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc734c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc734c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc734c340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc734c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc734c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc734c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc734ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc734cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f1cc7305200" loc="105:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f1cc7305200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7305580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7305710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73058a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7305a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7305bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7305d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7304020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc73041b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7304340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc73044d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7304660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc73047f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7304980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7304c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7304da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f1cc7349020" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f1cc7349020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc73493a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7349530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73496c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7349850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc73499e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7349b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7349d00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7348020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc73481b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7348340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc73484d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7348660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc73487f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7348a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7348c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f1cc7334020" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f1cc7334020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc73343a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7334530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73346c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7334850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc73349e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7334b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7334d00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7333020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc73331b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7333340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc73334d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7333660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc73337f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7333a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7333c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f1cc7320200" loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f1cc7320200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7320580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7320710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73208a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7320a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7320bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7320d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc731f020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc731f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc731f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc731f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc731f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc731f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc731f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc731fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc731fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f1cc730b200" loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f1cc730b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc730b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc730b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc730b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc730ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc730bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc730bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc730a020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc730a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc730a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc730a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc730a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc730a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc730a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc730ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc730ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f1cc72fb200" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f1cc72fb200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72fb580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72fb710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72fb8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72fba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72fbbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72fbd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72fa020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72fa1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72fa340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72fa4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72fa660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72fa7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72fa980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72fac10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72fada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f1cc7357020" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f1cc7357020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc73573a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7357530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73576c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7357850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc73579e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7357b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7357d00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7356020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc73561b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7356340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc73564d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7356660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc73567f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7356a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7356c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f1cc7343020" loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f1cc7343020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc73433a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7343530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73436c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7343850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc73439e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7343b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7343d00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7342020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc73421b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7342340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc73424d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7342660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc73427f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7342a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7342c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f1cc732e020" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f1cc732e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc732e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc732e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc732e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc732e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc732e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc732eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc732ed00"/>
        <function-ref name="get" scoped="" ref="0x7f1cc732d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc732d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc732d340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc732d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc732d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc732d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc732da80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc732dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f1cc731a200" loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f1cc731a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc731a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc731a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc731a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc731aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc731abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc731ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7319020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc73191b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7319340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc73194d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7319660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc73197f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7319980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7319c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7319da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f1cc72ed560" loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f1cc72ed560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72ed8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72eda70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72edc00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72edd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72ec020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72ec1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72ec340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72ec4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72ec660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72ec7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72ec980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72ecb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72ecca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72eb020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72eb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f1cc72d6570" loc="161:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f1cc72d6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72d68f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72d6a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72d6c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72d6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72d5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72d51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72d5340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72d54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72d5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72d57f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72d5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72d5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72d5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72d4020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f1cc72ef580" loc="147:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f1cc72ef580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72ef900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72efa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72efc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72efdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72ee020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72ee1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72ee340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72ee4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72ee660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72ee7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72ee980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72eeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72eeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72ed020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f1cc7316200" loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f1cc7316200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7316580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7316710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc73168a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7316a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7316bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7316d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7315020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc73151b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7315340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc73154d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7315660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc73157f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7315980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7315c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7315da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f1cc72ca570" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f1cc72ca570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72ca8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72caa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72cac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72cada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72c9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72c91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72c9340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72c94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72c9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72c97f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72c9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72c9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72c9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72c8020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f1cc72c4580" loc="172:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f1cc72c4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72c4900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72c4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72c4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72c4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72c3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72c31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72c3340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72c34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72c3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72c37f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72c3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72c3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72c3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72c2020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f1cc72f71f0" loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f1cc72f71f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72f7970"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc72f7b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72f7c90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc72f7e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72f6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72f61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72f6340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72f64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72f6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72f67f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72f6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72f6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72f6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc72f5020"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72f51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc72996d0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc72996d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7299a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7299be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc7299d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7298020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72981b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7298340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72984d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7298660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72987f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7298980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7298b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7298ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7298e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7297120"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72972b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7294100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7294100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7294480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7294610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72947a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7294930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7294ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7294c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7294de0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7293020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72931b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7293340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72934d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7293660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72937f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7293a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7293c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7290d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7290d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc728e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc728e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc728e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc728e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc728e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc728e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc728ea40"/>
        <function-ref name="get" scoped="" ref="0x7f1cc728ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc728ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc728d020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc728d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc728d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc728d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc728d760"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc728d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc728a740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc728a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc728aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc728ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc728ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7289020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72891b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7289340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72894d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7289660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72897f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7289980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7289b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7289ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7289e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7288120"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72882b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7285100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7285100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7285480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7285610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72857a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7285930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7285ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7285c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7285de0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7284020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72841b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7284340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72844d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7284660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72847f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7284a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7284c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7281d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7281d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72800e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7280270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc7280400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7280590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7280720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72808b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7280a40"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7280bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7280d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc727f020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc727f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc727f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc727f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc727f760"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc727f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc727c740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc727c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc727cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc727cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc727cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc727b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc727b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc727b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc727b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc727b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc727b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc727b980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc727bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc727bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc727be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc727a120"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc727a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7277100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7277100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7277480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7277610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72777a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7277930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7277ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7277c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7277de0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7276020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72761b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7276340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72764d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7276660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72767f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7276a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7276c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7273d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7273d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72720e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7272270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc7272400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7272590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7272720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72728b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7272a40"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7272bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7272d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7271020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72711b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7271340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72714d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7271760"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72718f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc726e740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc726e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc726eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc726ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc726ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc726d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc726d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc726d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc726d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc726d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc726d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc726d980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc726db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc726dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc726de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc726c120"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc726c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7268100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7268100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7268480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7268610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72687a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7268930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7268ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7268c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7268de0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7267020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72671b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7267340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72674d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7267660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72677f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7267a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7267c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7264d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7264d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72630e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7263270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc7263400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7263590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7263720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72638b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7263a40"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7263bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7263d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7262020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72621b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7262340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72624d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7262760"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72628f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc725f860" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc725f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc725fbe0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc725fd70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc725e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc725e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc725e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc725e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc725e660"/>
        <function-ref name="get" scoped="" ref="0x7f1cc725e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc725e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc725eb10"/>
        <function-ref name="set" scoped="" ref="0x7f1cc725eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc725ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc725d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc725d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc725d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc725a270" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc725a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc725a5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc725a780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc725a910"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc725aaa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc725ac30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc725adc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7259020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc72591b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7259340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc72594d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7259660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc72597f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7259980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7259c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7259da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7256d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7256d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72550e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7255270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc7255400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7255590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7255720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72558b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7255a40"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7255bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7255d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7254020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72541b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7254340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72544d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7254760"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72548f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7251740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7251740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7251ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7251c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc7251de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7250020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72501b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7250340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72504d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7250660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72507f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7250980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7250b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7250ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7250e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc724f120"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc724f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc724c100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc724c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc724c480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc724c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc724c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc724c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc724cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc724cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc724cde0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc724b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc724b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc724b340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc724b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc724b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc724b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc724ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc724bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7248d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7248d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72460e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7246270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc7246400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7246590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7246720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72468b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7246a40"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7246bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7246d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7245020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72451b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7245340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72454d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7245760"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72458f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7242740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7242740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7242ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7242c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc7242de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7241020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72411b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7241340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72414d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7241660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72417f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7241980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7241b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7241ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7241e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7240120"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72402b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc723d100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc723d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc723d480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc723d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc723d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc723d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc723dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc723dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc723dde0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc723c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc723c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc723c340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc723c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc723c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc723c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc723ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc723cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7239d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7239d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72380e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7238270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc7238400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7238590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7238720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc72388b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7238a40"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7238bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7238d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7237020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72371b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7237340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72374d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7237760"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72378f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7234740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7234740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7234ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7234c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc7234de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7233020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72331b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7233340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72334d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7233660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72337f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7233980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7233b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7233ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7233e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7232120"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72322b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc722f100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc722f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc722f480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc722f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc722f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc722f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc722fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc722fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc722fde0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc722e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc722e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc722e340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc722e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc722e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc722e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc722ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc722ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc722bd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc722bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc722a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc722a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc722a400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc722a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc722a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc722a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc722aa40"/>
        <function-ref name="get" scoped="" ref="0x7f1cc722abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc722ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7229020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72291b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7229340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72294d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7229760"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72298f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7226a60" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7226a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7226de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7225020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72251b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7225340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72254d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7225660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72257f0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7225980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7225b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7225ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7225e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7224020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72241b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7224440"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72245d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7221460" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7221460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc72217e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7221970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc7221b00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7221c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7221e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc721f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc721f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc721f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc721f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc721f660"/>
        <function-ref name="set" scoped="" ref="0x7f1cc721f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc721f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc721fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc721fda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc721e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc721ce00" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc721ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc721b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc721b350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc721b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc721b670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc721b800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc721b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc721bb20"/>
        <function-ref name="get" scoped="" ref="0x7f1cc721bcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc721be40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc721a020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc721a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc721a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc721a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc721a760"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc721a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7217740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7217740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7217ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7217c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc7217de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7216020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72161b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7216340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72164d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7216660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72167f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7216980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7216b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7216ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7216e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7215120"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72152b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7212100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7212100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7212480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7212610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72127a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7212930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7212ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7212c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7212de0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7211020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72111b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7211340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72114d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7211660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72117f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7211a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7211c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc720ed10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc720ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc720d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc720d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc720d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc720d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc720d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc720d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc720da40"/>
        <function-ref name="get" scoped="" ref="0x7f1cc720dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc720dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc720c020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc720c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc720c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc720c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc720c760"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc720c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7209740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7209740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7209ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7209c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc7209de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7208020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc72081b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7208340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc72084d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7208660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72087f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7208980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7208b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7208ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7208e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7207120"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc72072b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7204100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7204100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7204480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7204610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc72047a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7204930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7204ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7204c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7204de0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7203020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc72031b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7203340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc72034d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7203660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc72037f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7203a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7203c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc7200d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc7200d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc71ff0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc71ff270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc71ff400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc71ff590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc71ff720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc71ff8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc71ffa40"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71ffbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc71ffd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc71fe020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71fe1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc71fe340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc71fe4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc71fe760"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc71fe8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc71fa740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc71fa740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc71faac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc71fac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc71fade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc71f9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc71f91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc71f9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc71f94d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71f9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc71f97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc71f9980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71f9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc71f9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc71f9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc71f8120"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc71f82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc71f5100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc71f5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc71f5480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc71f5610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc71f57a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc71f5930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc71f5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc71f5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc71f5de0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71f4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc71f41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc71f4340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71f44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc71f4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc71f47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc71f4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc71f4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc71f1d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc71f1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc71f00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc71f0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc71f0400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc71f0590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc71f0720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc71f08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc71f0a40"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71f0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc71f0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc71ef020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71ef1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc71ef340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc71ef4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc71ef760"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc71ef8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc71ec740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc71ec740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc71ecac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc71ecc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc71ecde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc71eb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc71eb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc71eb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc71eb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71eb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc71eb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc71eb980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71ebb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc71ebca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc71ebe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc71ea120"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc71ea2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc71e7100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc71e7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc71e7480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc71e7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc71e77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc71e7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc71e7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc71e7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc71e7de0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71e6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc71e61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc71e6340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71e64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc71e6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc71e67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc71e6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc71e6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc71e3d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc71e3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc71e20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc71e2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc71e2400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc71e2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc71e2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc71e28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc71e2a40"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71e2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc71e2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc71e1020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71e11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc71e1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc71e14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc71e1760"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc71e18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc71de740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc71de740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc71deac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc71dec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc71dede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc71dd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc71dd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc71dd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc71dd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71dd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc71dd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc71dd980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71ddb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc71ddca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc71dde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc71dc120"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc71dc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc71d9100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc71d9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc71d9480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc71d9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc71d97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc71d9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc71d9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc71d9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc71d9de0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71d7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc71d71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc71d7340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71d74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc71d7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc71d77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc71d7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc71d7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc71d4d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc71d4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc71d30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc71d3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc71d3400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc71d3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc71d3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc71d38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc71d3a40"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71d3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc71d3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc71d2020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71d21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc71d2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc71d24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc71d2760"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc71d28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc71cf740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc71cf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc71cfac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc71cfc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc71cfde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc71ce020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc71ce1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc71ce340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc71ce4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71ce660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc71ce7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc71ce980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71ceb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc71ceca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc71cee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc71cd120"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc71cd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc71ca100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc71ca100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc71ca480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc71ca610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc71ca7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc71ca930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc71caac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc71cac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc71cade0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71c9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc71c91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc71c9340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71c94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc71c9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc71c97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc71c9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc71c9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc71c6d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc71c6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc71c50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc71c5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc71c5400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc71c5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc71c5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc71c58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc71c5a40"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71c5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc71c5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc71c4020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71c41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc71c4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc71c44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc71c4760"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc71c48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc71c1740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc71c1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc71c1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc71c1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc71c1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc71c0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc71c01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc71c0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc71c04d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71c0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc71c07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc71c0980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71c0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc71c0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc71c0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc71bf120"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc71bf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc71bc100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc71bc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc71bc480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc71bc610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc71bc7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc71bc930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc71bcac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc71bcc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc71bcde0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71bb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc71bb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc71bb340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71bb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc71bb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc71bb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc71bba80"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc71bbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1cc71b8d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1cc71b8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc71b70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc71b7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc71b7400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc71b7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc71b7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc71b78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc71b7a40"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71b7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc71b7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc71b6020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71b61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc71b6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc71b64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc71b6760"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc71b68f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1cc713e2f0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1cc713e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc713e670"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc713e800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc713e990"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc713eb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc713ecb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc713ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc713d020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc713d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc713d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc713d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc713d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc713d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc713d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc713dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc713dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1cc714f020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1cc714f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc714f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc714f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc714f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc714f850"/>
        <function-ref name="get" scoped="" ref="0x7f1cc714f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc714fb70"/>
        <function-ref name="set" scoped="" ref="0x7f1cc714fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc713e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1cc713ade0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1cc713ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7139180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7139310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc71394a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7139630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc71397c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc7139950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7139ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc7139c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7139e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7138020"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71381b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7138340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc71384d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc7138760"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc71388f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1cc713bb90" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1cc713bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc713a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc713a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc713a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc713a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc713a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc713a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc713a980"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc713ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1cc7135930" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1cc7135930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7135cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7135e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc7134020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc71341b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7134340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc71344d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7134660"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71347f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc7134980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc7134b10"/>
        <function-ref name="set" scoped="" ref="0x7f1cc7134ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc7134e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc7133020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc71332b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7133440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1cc7136710" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1cc7136710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc7136a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc7136c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc7136db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc7135020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc71351b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc7135340"/>
        <function-ref name="set" scoped="" ref="0x7f1cc71354d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc7135660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1cc6f7c370" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1cc6f7c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1cc6f79870"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc6f7be40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1cc6f7ac00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1cc6f7a780"/>
        <function-ref name="getdt" scoped="" ref="0x7f1cc6f771e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1cc6f79cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1cc6f7a300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1cc6f7b020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1cc6f79260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1cc6f7b4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc6f7b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1cc711e610" loc="49:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f1cc711e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1cc711ac40"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc711b1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1cc711a020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1cc711bae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1cc7119590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1cc7119110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1cc711b660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1cc711d390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1cc711a630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1cc711d860"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc711dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1cc71141d0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f1cc71141d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1cc7110630"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc7113c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1cc71129d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1cc7112550"/>
        <function-ref name="getdt" scoped="" ref="0x7f1cc710f020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1cc7110ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1cc71120d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1cc7114dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1cc7110020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1cc71132e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc71137b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1cc710ba80" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1cc710ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1cc710d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1cc7115400" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1cc7115400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc7115780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1cc7018870" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1cc7018870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1cc7015090"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc7016090"/>
        <function-ref name="startAt" scoped="" ref="0x7f1cc7016a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1cc7016550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1cc7015550"/>
        <function-ref name="start" scoped="" ref="0x7f1cc70176a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc7017bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1cc7018020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1cc7018020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc70183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1cc6501bd0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1cc6501bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc73b7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1cc73b79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1cc64fe4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc64ff4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1cc64ffe60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1cc64ff9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1cc64fe9a0"/>
        <function-ref name="start" scoped="" ref="0x7f1cc6500a80"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc64ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1cc6501380" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1cc6501380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc6501700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1cc64e80c0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1cc64e80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc64e8440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc64e85d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc64e8760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc64e88f0"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc64e8a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1cc64eb7b0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1cc64eb7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc64ebb30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc64ebcc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc64ebe50"/>
        <function-ref name="get" scoped="" ref="0x7f1cc64ea020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc64ea1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc64ea340"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc64ea4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc64ea660"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc64ea7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc64ea980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc64eab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1cc64eada0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1cc64eada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc64e9180"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc64e9310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc64e94a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc64e9630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc64e97c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc64e9950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc64e9ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc64e9c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc64e9e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1cc70e6020" loc="52:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1cc70e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc70e63a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc70e6530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc70e66c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc70e6850"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc70e69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1cc70ec8b0" loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1cc70ec8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc70ecc30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc70ecdc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc70eb020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc70eb1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc70eb340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc70eb4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc70eb660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc70eb7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc70eb980"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc70ebb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc70ebca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1cc70e9560" loc="51:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1cc70e9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc70e98e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc70e9a70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc70e9c00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc70e9d90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc70e8020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc70e81b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc70e8340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc70e84d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc70e8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f1cc64dfda0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1cc64dfda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1cc64de180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1cc64de310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1cc64de4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1cc64de630"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc64de7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1cc64e14c0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1cc64e14c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc64e1840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc64e19d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc64e1b60"/>
        <function-ref name="get" scoped="" ref="0x7f1cc64e1cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc64e1e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc64e0030"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc64e01c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc64e0350"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc64e04e0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc64e0670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc64e0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1cc64e5340" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1cc64e5340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc73b7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1cc73b79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1cc64e2ba0"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc64e4b80"/>
        <function-ref name="startAt" scoped="" ref="0x7f1cc64e2550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1cc64e2090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1cc64e1090"/>
        <function-ref name="start" scoped="" ref="0x7f1cc64e41b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc64e46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1cc64e6a30" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1cc64e6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc64e6db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f1cc64e0a90" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1cc64e0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1cc64e0e10"/>
        <function-ref name="getControl" scoped="" ref="0x7f1cc64df020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc64df1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1cc64df340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1cc64df4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc64df660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1cc64df7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1cc64df980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1cc64dfb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1cc7091900" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1cc7091900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1cc7096780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc7095150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc7096c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc7095610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f1cc708f990" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1cc708f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc73b7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1cc73b79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1cc708c7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc708b170"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc708cc80"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc708b630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1cc707ac50" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1cc707ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc7079020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1cc70791b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1cc7079340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc70794d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1cc7079660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc70797f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc7079980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc7079b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc7079ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1cc7079e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1cc7078020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1cc7089b80" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1cc7089b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc73b7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1cc73b79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1cc70889b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc707a360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc7088e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc707a820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f1cc70570f0" loc="63:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f1cc70570f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc73b7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1cc73b79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1cc7055020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc70559a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc70554e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc7055e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1cc7074cf0" loc="62:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1cc7074cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1cc7059b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc7058550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc7058090"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc7058a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1cc64fb020" loc="61:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1cc64fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1cc64f8870"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc64f9840"/>
        <function-ref name="startAt" scoped="" ref="0x7f1cc64f8220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1cc64f9d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1cc64f8d30"/>
        <function-ref name="start" scoped="" ref="0x7f1cc64fbe30"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc64f9380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f1cc64f5780" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f1cc64f5780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc73b7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1cc73b79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1cc64f1020"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc64f2020"/>
        <function-ref name="startAt" scoped="" ref="0x7f1cc64f29a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1cc64f24e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1cc64f14e0"/>
        <function-ref name="start" scoped="" ref="0x7f1cc64f35d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc64f3ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1cc64f73d0" loc="68:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1cc64f73d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1cc64f6240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc64f6bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc64f6700"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc64f50d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f1cc6fe39c0" loc="74:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f1cc6fe39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1cc6fe3d40"/>
        <function-ref name="runTask" scoped="" ref="0x7f1cc6fe2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f1cc6fe7850" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1cc6fe7850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1cc6fe3090"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc6fe5090"/>
        <function-ref name="startAt" scoped="" ref="0x7f1cc6fe5a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1cc6fe5550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1cc6fe3550"/>
        <function-ref name="start" scoped="" ref="0x7f1cc6fe66a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc6fe6bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1cc6fec2f0" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1cc6fec2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1cc6fe8870"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc6febe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1cc6feac00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1cc6fea780"/>
        <function-ref name="getdt" scoped="" ref="0x7f1cc6fe71e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1cc6fe8cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1cc6fea300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1cc6feb020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1cc6fe8260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1cc6feb4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc6feb9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f1cc6f92a00" loc="71:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f1cc6f92a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1cc6f92d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f1cc6f91020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f1cc6f97640" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f1cc6f97640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1cc6f93c40"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc6f941e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1cc6f93020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1cc6f94ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1cc6f92590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1cc6f92110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1cc6f94660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1cc6f96390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1cc6f93630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1cc6f96860"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc6f96d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1cc6f9d150" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1cc6f9d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1cc6f99700"/>
        <function-ref name="fired" scoped="" ref="0x7f1cc6f9cc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1cc6f9aa50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1cc6f9a5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1cc6f97090"/>
        <function-ref name="gett0" scoped="" ref="0x7f1cc6f99ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1cc6f9a110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1cc6f9dd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1cc6f990d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1cc6f9c2a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc6f9c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1cc6f8f790" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1cc6f8f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1cc6f8e3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1cc6f8ea60" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1cc6f8ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc7593ea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1cc73b7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1cc6f83890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc6f82260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc6f83d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc6f82720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1cc6a2f020" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1cc6a2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6a2f3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1cc6a2f530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1cc6a2f6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1cc6a2f850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1cc6a2f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1cc6a2fc30" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1cc6a2fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc6a2e020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1cc6a2e1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1cc6a2e340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1cc6a2e4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1cc6a2e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1cc6a2e8b0" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1cc6a2e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1cc6a2ec30"/>
        <function-ref name="source" scoped="" ref="0x7f1cc6a2edc0"/>
        <function-ref name="address" scoped="" ref="0x7f1cc6a2d020"/>
        <function-ref name="destination" scoped="" ref="0x7f1cc6a2d1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1cc6a2d340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1cc6a2d4d0"/>
        <function-ref name="type" scoped="" ref="0x7f1cc6a2d660"/>
        <function-ref name="setType" scoped="" ref="0x7f1cc6a2d7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1cc6a2d980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1cc6a2db10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1cc6a2dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1cc6a2c020" loc="52:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f1cc6a2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1cc6a2c3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1cc6a2c530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1cc6a2c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1cc644e390" loc="44:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1cc644e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc644e710"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1cc644e8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1cc644ea30"/>
        <function-ref name="cancel" scoped="" ref="0x7f1cc644ebc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1cc644ed50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f1cc644d060" loc="46:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1cc644d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc644d3e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1cc644d570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1cc644d700"/>
        <function-ref name="cancel" scoped="" ref="0x7f1cc644d890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1cc644da20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f1cc644dc70" loc="47:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1cc644dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1cc644b020"/>
        <function-ref name="source" scoped="" ref="0x7f1cc644b1b0"/>
        <function-ref name="address" scoped="" ref="0x7f1cc644b340"/>
        <function-ref name="destination" scoped="" ref="0x7f1cc644b4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1cc644b660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1cc644b7f0"/>
        <function-ref name="type" scoped="" ref="0x7f1cc644b980"/>
        <function-ref name="setType" scoped="" ref="0x7f1cc644bb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1cc644bca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1cc644be30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1cc644a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1cc6f27cf0" loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1cc6f27cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6f240a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1cc6f24230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1cc6f243c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1cc6f24550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1cc6f246e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f1cc6eda400" loc="48:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1cc6eda400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1cc75a9550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6eda7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1cc6eda930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1cc6edaac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1cc6edac50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1cc6edade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1cc6edb580" loc="46:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1cc6edb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6edb920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1cc6edbab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1cc6edbc40"/>
        <function-ref name="cancel" scoped="" ref="0x7f1cc6edbdd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1cc6eda020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1cc6ed7720" loc="50:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1cc6ed7720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc6ed7aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1cc6ed7c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1cc6ed7dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1cc6ed6020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1cc6ed61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f1cc6ed6480" loc="169:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f1cc6ed6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1cc6ed6800"/>
        <function-ref name="runTask" scoped="" ref="0x7f1cc6ed6990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f1cc6ed6c60" loc="126:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f1cc6ed6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1cc6ed5020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1cc6ed51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f1cc6ed8060" loc="49:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1cc6ed8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1cc6ed83e0"/>
        <function-ref name="source" scoped="" ref="0x7f1cc6ed8570"/>
        <function-ref name="address" scoped="" ref="0x7f1cc6ed8700"/>
        <function-ref name="destination" scoped="" ref="0x7f1cc6ed8890"/>
        <function-ref name="setSource" scoped="" ref="0x7f1cc6ed8a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1cc6ed8bb0"/>
        <function-ref name="type" scoped="" ref="0x7f1cc6ed8d40"/>
        <function-ref name="setType" scoped="" ref="0x7f1cc6ed7020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1cc6ed71b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1cc6ed7340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1cc6ed74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1cc6ecb3b0" loc="46:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1cc6ecb3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1cc6ecb730"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1cc6ecb8c0"/>
        <function-ref name="start" scoped="" ref="0x7f1cc6ecba50"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc6ecbbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1cc6ed03f0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1cc6ed03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1cc75a9550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6ed0770"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1cc6ed0900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1cc6ed0a90"/>
        <function-ref name="cancel" scoped="" ref="0x7f1cc6ed0c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1cc6ed0db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1cc6eca7e0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1cc6eca7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc6ecab60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1cc6ecacf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1cc6ecae80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1cc6ec9030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1cc6ec91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1cc6eca1d0" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1cc6eca1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1cc75a9550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1cc6eca550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1cc6ec4620" loc="53:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1cc6ec4620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1cc6ec49a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1cc6ec4b30"/>
        <function-ref name="led1On" scoped="" ref="0x7f1cc6ec4cc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1cc6ec4e50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1cc6ec3020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc6ec31b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1cc6ec3340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1cc6ec3980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc6ec34d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1cc6ec3660"/>
        <function-ref name="led2On" scoped="" ref="0x7f1cc6ec37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1cc6ec7b20" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1cc6ec7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1cc6ec4020"/>
        <function-ref name="noAck" scoped="" ref="0x7f1cc6ec41b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1cc6ec4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1cc6ec9470" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1cc6ec9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1cc6ec97f0"/>
        <function-ref name="source" scoped="" ref="0x7f1cc6ec9980"/>
        <function-ref name="address" scoped="" ref="0x7f1cc6ec9b10"/>
        <function-ref name="destination" scoped="" ref="0x7f1cc6ec9ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1cc6ec9e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1cc6ec7020"/>
        <function-ref name="type" scoped="" ref="0x7f1cc6ec71b0"/>
        <function-ref name="setType" scoped="" ref="0x7f1cc6ec7340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1cc6ec74d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1cc6ec7660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1cc6ec77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1cc6e699f0" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1cc6e699f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6e69d70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1cc6e67020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1cc6e671b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1cc6e67340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1cc6e674d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1cc6e67760" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1cc6e67760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1cc6e67ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1cc6ec07d0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1cc6ec07d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1cc75a9550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6ec0b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1cc6ec0d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1cc6e6c020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1cc6e6c1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1cc6e6c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1cc6e6a400" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1cc6e6a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc6e6a780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1cc6e6a910"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1cc6e6aaa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1cc6e6ac30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1cc6e6adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1cc6e6c6c0" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1cc6e6c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1cc75a9550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1cc6e6ca60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1cc6e69060" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1cc6e69060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1cc6e693e0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1cc6e69570"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1cc6e69700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1cc6e6ccb0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1cc6e6ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1cc6e6b0a0"/>
        <function-ref name="source" scoped="" ref="0x7f1cc6e6b230"/>
        <function-ref name="address" scoped="" ref="0x7f1cc6e6b3c0"/>
        <function-ref name="destination" scoped="" ref="0x7f1cc6e6b550"/>
        <function-ref name="setSource" scoped="" ref="0x7f1cc6e6b6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1cc6e6b870"/>
        <function-ref name="type" scoped="" ref="0x7f1cc6e6ba00"/>
        <function-ref name="setType" scoped="" ref="0x7f1cc6e6bb90"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1cc6e6bd20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1cc6e6a020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1cc6e6a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1cc6e622f0" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1cc6e622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1cc6e62670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1cc6e62800"/>
        <function-ref name="start" scoped="" ref="0x7f1cc6e62990"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc6e62b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1cc6e61e10" loc="52:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1cc6e61e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1cc75a60d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6e601c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1cc6e60350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1cc6e604e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1cc6e60670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1cc6e60800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1cc6e65bc0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1cc6e65bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc6e62020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1cc6e61320" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1cc6e61320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1cc75a60d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1cc6e616a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1cc6e5f940" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1cc6e5f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1cc6e5fcc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1cc6e5fe50"/>
        <function-ref name="led1On" scoped="" ref="0x7f1cc6e5e020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1cc6e5e1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1cc6e5e340"/>
        <function-ref name="get" scoped="" ref="0x7f1cc6e5e4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1cc6e5e660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1cc6e5eca0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc6e5e7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1cc6e5e980"/>
        <function-ref name="led2On" scoped="" ref="0x7f1cc6e5eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f1cc6e5f020" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f1cc6e5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1cc75a60d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f1cc6e5f3a0"/>
        <function-ref name="offset" scoped="" ref="0x7f1cc6e5f530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f1cc6e5f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1cc6e52450" loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1cc6e52450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1cc6e527d0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1cc6e52960"/>
        <function-ref name="start" scoped="" ref="0x7f1cc6e52af0"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc6e52c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f1cc6debe40" loc="332:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f1cc6debe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1cc6de91e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1cc6de9370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f1cc6e3de00" loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f1cc6e3de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1cc6e3f1c0"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc6e3f350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f1cc6e22d10" loc="191:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f1cc6e22d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1cc6e210e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1cc6e21270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1cc6e53d60" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1cc6e53d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc6e52180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f1cc6e3ba80" loc="75:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f1cc6e3ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f1cc6e3be00"/>
        <function-ref name="flush" scoped="" ref="0x7f1cc6e3e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f1cc6ded400" loc="322:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f1cc6ded400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1cc6ded780"/>
        <function-ref name="runTask" scoped="" ref="0x7f1cc6ded910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f1cc6e42e30" loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f1cc6e42e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f1cc6e4a1e0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f1cc6e4a370"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f1cc6e4a500"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f1cc6e4a690"/>
        <function-ref name="putData" scoped="" ref="0x7f1cc6e4a820"/>
        <function-ref name="putDone" scoped="" ref="0x7f1cc6e4a9b0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f1cc6e4ab40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1cc6e4adc0" loc="73:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1cc6e4adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1cc6e41180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1cc6e41310"/>
        <function-ref name="led1On" scoped="" ref="0x7f1cc6e414a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1cc6e41630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1cc6e417c0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc6e41950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1cc6e41ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1cc6e401b0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc6e41c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f1cc6e41e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f1cc6e40020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f1cc6de60c0" loc="341:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f1cc6de60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1cc6de6440"/>
        <function-ref name="runTask" scoped="" ref="0x7f1cc6de65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f1cc6e4b4a0" loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f1cc6e4b4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f1cc6e4b820"/>
        <function-ref name="nextByte" scoped="" ref="0x7f1cc6e4b9b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f1cc6e4bb40"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f1cc6e4bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f1cc6e48ad0" loc="68:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f1cc6e48ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f1cc6e48e50"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f1cc6e4f020"/>
        <function-ref name="endPacket" scoped="" ref="0x7f1cc6e4f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f1cc6d1cc50" loc="275:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f1cc6d1cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1cc6d1b020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1cc6d1b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1cc6d20830" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1cc6d20830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1cc75a60d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6d20bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1cc6d20d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1cc6d1f020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1cc6d1f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1cc6d1f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f1cc6d1b480" loc="158:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f1cc6d1b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1cc6d1b800"/>
        <function-ref name="runTask" scoped="" ref="0x7f1cc6d1b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1cc6d20110" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1cc6d20110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1cc75a60d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1cc6d204b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f1cc6d1f760" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f1cc6d1f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1cc75a60d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f1cc6d1fb00"/>
        <function-ref name="offset" scoped="" ref="0x7f1cc6d1fc90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f1cc6d1fe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1cc6d1d590" loc="57:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1cc6d1d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1cc6d1d910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1cc6d1daa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1cc6d1dc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1cc6d1ddc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1cc6d1c020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc6d1c1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1cc6d1c340"/>
        <function-ref name="led2On" scoped="" ref="0x7f1cc6d1c980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc6d1c660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1cc6d1c4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1cc6d1c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f1cc6d1e9d0" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f1cc6d1e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f1cc6d1ed50"/>
        <function-ref name="nextByte" scoped="" ref="0x7f1cc6d1d020"/>
        <function-ref name="startSend" scoped="" ref="0x7f1cc6d1d1b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f1cc6d1d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f1cc6d1e0e0" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f1cc6d1e0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f1cc6d1e460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f1cc6d1e5f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f1cc6d1e780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f1cc6d0ad20" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1cc6d0ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6d140e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1cc6d14270"/>
        <function-ref name="receive" scoped="" ref="0x7f1cc6d14400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1cc6d14590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1cc6d14720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1cc6d148b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1cc6d14a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f1cc6d19b70" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f1cc6d19b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f1cc6d15020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f1cc6d151b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f1cc6d15340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f1cc6d154d0"/>
        <function-ref name="putData" scoped="" ref="0x7f1cc6d15660"/>
        <function-ref name="putDone" scoped="" ref="0x7f1cc6d157f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f1cc6d15980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1cc6d14cc0" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1cc6d14cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1cc6d130a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1cc6d13230"/>
        <function-ref name="led1On" scoped="" ref="0x7f1cc6d133c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1cc6d13550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1cc6d136e0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc6d13870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1cc6d13a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1cc6d071b0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc6d13b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f1cc6d13d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f1cc6d07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1cc6ceb020" loc="6:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1cc6ceb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6ceb3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1cc6ceb530"/>
        <function-ref name="receive" scoped="" ref="0x7f1cc6ceb6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1cc6ceb850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1cc6ced890" loc="5:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1cc6ced890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6cedc10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1cc6cedda0"/>
        <function-ref name="receive" scoped="" ref="0x7f1cc6cec020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1cc6cec1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1cc6cec340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1cc6cec4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1cc6cec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1cc6ced080" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1cc6ced080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1cc6ced400"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc6ced590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1cc6a61c70" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1cc6a61c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1cc6a60020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1cc6a601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1cc6a5f440" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1cc6a5f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6a5f7c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1cc6a5f950"/>
        <function-ref name="receive" scoped="" ref="0x7f1cc6a5fae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1cc6a5fc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f1cc6a5e020" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1cc6a5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1cc6a5e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1cc6a60440" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1cc6a60440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6a607c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1cc6a60950"/>
        <function-ref name="receive" scoped="" ref="0x7f1cc6a60ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1cc6a60c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1cc6a60e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1cc6a5f020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1cc6a5f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1cc6a61020" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1cc6a61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1cc6a613a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1cc6a61530"/>
        <function-ref name="request" scoped="" ref="0x7f1cc6a616c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1cc6a61850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1cc6a619e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1cc6c82dd0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1cc6c82dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1cc6c84180"/>
        <function-ref name="configure" scoped="" ref="0x7f1cc6c84310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1cc6c81210" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1cc6c81210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6c81590"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1cc6c81720"/>
        <function-ref name="receive" scoped="" ref="0x7f1cc6c818b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1cc6c81a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f1cc6c7e600" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1cc6c7e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1cc6c7e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1cc6c84b50" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1cc6c84b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6c83020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1cc6c831b0"/>
        <function-ref name="receive" scoped="" ref="0x7f1cc6c83340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1cc6c834d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1cc6c83660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1cc6c837f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1cc6c83980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f1cc6c7f370" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f1cc6c7f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1cc6c7f6f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1cc6c7f880"/>
        <function-ref name="request" scoped="" ref="0x7f1cc6c7fa10"/>
        <function-ref name="granted" scoped="" ref="0x7f1cc6c7fba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1cc6c7fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1cc6c87320" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1cc6c87320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1cc6c876a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1cc6c87830"/>
        <function-ref name="request" scoped="" ref="0x7f1cc6c879c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1cc6c87b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1cc6c87ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f1cc6c7abe0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1cc6c7abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1cc6c7d020"/>
        <function-ref name="txDone" scoped="" ref="0x7f1cc6c7d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1cc6bf5e70" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1cc6bf5e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1cc6bf4240"/>
        <function-ref name="configure" scoped="" ref="0x7f1cc6bf43d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1cc6bf3890" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1cc6bf3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6bf3c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1cc6bf3dc0"/>
        <function-ref name="receive" scoped="" ref="0x7f1cc6bf2020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1cc6bf21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f1cc6bf03e0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1cc6bf03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1cc6bf0780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f1cc6bf0a50" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f1cc6bf0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1cc6bf0dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1cc6bef020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1cc6bef1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1cc6bef340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1cc6bef4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1cc6bef660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1cc6bef7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1cc6bef980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1cc6befb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1cc6befca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1cc6befe30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1cc6bee020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1cc6bee1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1cc6bee440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1cc6bee5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1cc6bee760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1cc6bee8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1cc6beea80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1cc6beec10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1cc6beeda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1cc6bed020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1cc6bed1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1cc6bed340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1cc6bed4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc6bed660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1cc6bed9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1cc6bedb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1cc6bedd10"/>
        <function-ref name="tx" scoped="" ref="0x7f1cc6bec020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1cc6bec1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1cc6bec340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1cc6bec4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1cc6bec660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1cc6bec7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f1cc6bec980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1cc6becb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1cc6becca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1cc6bece30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1cc6beb020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1cc6beb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1cc6bf4790" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1cc6bf4790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc6bf4b30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1cc6bf4cc0"/>
        <function-ref name="receive" scoped="" ref="0x7f1cc6bf4e50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1cc6bf3020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1cc6bf31b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1cc6bf3340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1cc6bf34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1cc6bea020" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1cc6bea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc73b7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1cc73b79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1cc6beae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc6be9800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc6be9340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc6be9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f1cc6bf25b0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f1cc6bf25b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1cc6bf2950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1cc6bf2ae0"/>
        <function-ref name="request" scoped="" ref="0x7f1cc6bf2c70"/>
        <function-ref name="granted" scoped="" ref="0x7f1cc6bf2e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1cc6bf0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1cc6bf50d0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1cc6bf50d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1cc6bf5470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1cc6bf5600"/>
        <function-ref name="request" scoped="" ref="0x7f1cc6bf5790"/>
        <function-ref name="granted" scoped="" ref="0x7f1cc6bf5920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1cc6bf5ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f1cc6beb5b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1cc6beb5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1cc6beb950"/>
        <function-ref name="txDone" scoped="" ref="0x7f1cc6bebae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1cc6be8120" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1cc6be8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1cc6be84a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1cc6be8630"/>
        <function-ref name="led1On" scoped="" ref="0x7f1cc6be87c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1cc6be8950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1cc6be8ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc6be8c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1cc6be8e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f1cc6be74d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc6be71b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1cc6be7020"/>
        <function-ref name="led0On" scoped="" ref="0x7f1cc6be7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f1cc6bd7080" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1cc6bd7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1cc6bd7400"/>
        <function-ref name="txDone" scoped="" ref="0x7f1cc6bd7590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f1cc6bdcca0" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1cc6bdcca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1cc6bde0a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc6bde230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f1cc6bde550" loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1cc6bde550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1cc6bde8d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1cc6bdea60"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1cc6bdebf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1cc6bded80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1cc6bdd020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1cc6bdd1b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1cc6bdd340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1cc6bdd4d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1cc6bdd660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1cc6bdd7f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1cc6bdd980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1cc6bddb10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1cc6bddca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1cc6bda020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1cc6bda1b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1cc6bda340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1cc6bda4d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1cc6bda660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1cc6bda7f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1cc6bda980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1cc6bdab10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1cc6bdaca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1cc6bdae30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1cc6bd9020"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc6bd91b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1cc6bd9540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1cc6bd96d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1cc6bd9860"/>
        <function-ref name="tx" scoped="" ref="0x7f1cc6bd99f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1cc6bd9b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1cc6bd9d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1cc6bd8020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1cc6bd81b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1cc6bd8340"/>
        <function-ref name="rx" scoped="" ref="0x7f1cc6bd84d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1cc6bd8660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1cc6bd87f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1cc6bd8980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1cc6bd8b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1cc6bd8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f1cc6bc91f0" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f1cc6bc91f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc6bc9570"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc6bc9700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc6bc9890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc6bc9a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc6bc9bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc6bc9d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc6bc8020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc6bc81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc6bc8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc6bc84d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc6bc8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc6bc87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc6bc8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc6bc8c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc6bc8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1cc6bce910" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1cc6bce910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1cc6bcec90"/>
        <function-ref name="txDone" scoped="" ref="0x7f1cc6bcee20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f1cc6bc71f0" loc="81:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f1cc6bc71f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc6bc7570"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc6bc7700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc6bc7890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc6bc7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc6bc7bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc6bc7d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc6bc6020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc6bc61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc6bc6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc6bc64d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc6bc6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc6bc67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc6bc6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc6bc6c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc6bc6da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f1cc6bc51f0" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f1cc6bc51f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc6bc5570"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc6bc5700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc6bc5890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc6bc5a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc6bc5bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc6bc5d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc6bc4020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc6bc41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc6bc4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc6bc44d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc6bc4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc6bc47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc6bc4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc6bc4c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc6bc4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f1cc6bd3cc0" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f1cc6bd3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1cc6bd20a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1cc6bd2230"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1cc6bd23c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1cc6bd2550"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1cc6bd26e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1cc6bd2870"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1cc6bd2a00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1cc6bd2b90"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1cc6bd2d20"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1cc6bd1020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1cc6bd11b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1cc6bd1340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1cc6bd14d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1cc6bd1760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1cc6bd18f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1cc6bd1a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1cc6bd1c10"/>
        <function-ref name="isUart" scoped="" ref="0x7f1cc6bd1da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1cc6bd0020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1cc6bd01b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1cc6bd0340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1cc6bd04d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1cc6bd0660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1cc6bd07f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc6bd0980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1cc6bd0d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1cc6bcf020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1cc6bcf1b0"/>
        <function-ref name="tx" scoped="" ref="0x7f1cc6bcf340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1cc6bcf4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1cc6bcf660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1cc6bcf7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1cc6bcf980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1cc6bcfb10"/>
        <function-ref name="rx" scoped="" ref="0x7f1cc6bcfca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1cc6bcfe30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1cc6bce020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1cc6bce1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1cc6bce340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1cc6bce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f1cc6bd3410" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1cc6bd3410"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1cc6bd3790"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc6bd3920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f1cc6bcb1f0" loc="79:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f1cc6bcb1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc6bcb570"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc6bcb700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc6bcb890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc6bcba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc6bcbbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc6bcbd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc6bca020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc6bca1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc6bca340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc6bca4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc6bca660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc6bca7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc6bca980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc6bcac10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc6bcada0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1cc6bcd210" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1cc6bcd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1cc6bcd590"/>
        <function-ref name="isInput" scoped="" ref="0x7f1cc6bcd720"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1cc6bcd8b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1cc6bcda40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1cc6bcdbd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1cc6bcdd60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1cc6bcc020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc6bcc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1cc6bcc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1cc6bcc4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1cc6bcc660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1cc6bcc7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1cc6bcc980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1cc6bccc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1cc6bccda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1cc6b47110" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1cc6b47110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1cc73b7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1cc73b79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1cc6b45020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1cc6b459a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1cc6b454e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1cc6b45e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1cc6390a90" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1cc6390a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1cc6390e10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1cc638e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1cc6389be0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1cc6389be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1cc6388020"/>
        <function-ref name="configure" scoped="" ref="0x7f1cc63881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f1cc6389440" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1cc6389440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1cc63897c0"/>
        <function-ref name="txDone" scoped="" ref="0x7f1cc6389950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1cc6391e00" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1cc6391e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1cc63901c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1cc6390350"/>
        <function-ref name="request" scoped="" ref="0x7f1cc63904e0"/>
        <function-ref name="granted" scoped="" ref="0x7f1cc6390670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1cc6390800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f1cc638ea50" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1cc638ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1cc638edd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1cc638d020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1cc638d1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1cc638d340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1cc638d4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1cc638d660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1cc638d7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1cc638d980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1cc638db10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1cc638dca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1cc638de30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1cc638c020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1cc638c1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1cc638c440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1cc638c5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1cc638c760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1cc638c8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1cc638ca80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1cc638cc10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1cc638cda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1cc638b020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1cc638b1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1cc638b340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1cc638b4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1cc638b660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1cc638b9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1cc638bb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1cc638bd10"/>
        <function-ref name="tx" scoped="" ref="0x7f1cc638a020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1cc638a1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1cc638a340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1cc638a4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1cc638a660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1cc638a7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f1cc638a980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1cc638ab10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1cc638aca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1cc638ae30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1cc6389020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1cc63891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1cc638e2b0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1cc638e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1cc638e630"/>
        <function-ref name="userId" scoped="" ref="0x7f1cc638e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1cc6b28d50" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1cc6b28d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1cc6b27100"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1cc6b27290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1cc6b26370" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1cc6b26370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1cc6b266f0"/>
        <function-ref name="configure" scoped="" ref="0x7f1cc6b26880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1cc6b2fce0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1cc6b2fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1cc6b2c0a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f1cc6b2c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1cc6b2ca60" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1cc6b2ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1cc6b2cde0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1cc6b28020"/>
        <function-ref name="request" scoped="" ref="0x7f1cc6b281b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1cc6b28340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1cc6b284d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1cc6b27590" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1cc6b27590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1cc6b27910"/>
        <function-ref name="userId" scoped="" ref="0x7f1cc6b27aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1cc6b104b0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1cc6b104b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1cc6b10830"/>
        <function-ref name="userId" scoped="" ref="0x7f1cc6b109c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1cc6b235c0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1cc6b235c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1cc6b23960"/>
        <function-ref name="txDone" scoped="" ref="0x7f1cc6b23af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f1cc6b11e70" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f1cc6b11e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc6b10220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f1cc6b11020" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1cc6b11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1cc6b113c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f1cc6b11690" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f1cc6b11690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1cc6b11a10"/>
        <function-ref name="txDone" scoped="" ref="0x7f1cc6b11ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1cc6a97bf0" loc="92:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1cc6a97bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1cc6a96020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1cc6a961b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1cc6a95930" loc="96:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1cc6a95930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1cc6a95cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f1cc6a95e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1cc6a96400" loc="93:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1cc6a96400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1cc6a96780"/>
        <function-ref name="requested" scoped="" ref="0x7f1cc6a96910"/>
        <function-ref name="granted" scoped="" ref="0x7f1cc6a96aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1cc6a96c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1cc6a96dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1cc6a98e60" loc="91:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1cc6a98e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1cc6a97230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1cc6a973c0"/>
        <function-ref name="request" scoped="" ref="0x7f1cc6a97550"/>
        <function-ref name="granted" scoped="" ref="0x7f1cc6a976e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1cc6a97870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1cc6a95060" loc="94:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1cc6a95060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1cc6a953e0"/>
        <function-ref name="userId" scoped="" ref="0x7f1cc6a95570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1cc6326ca0" loc="44:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1cc6326ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc63240a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1cc6324330" loc="45:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1cc6324330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1cc63246b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1cc6324840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1cc63249d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1cc6324b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1cc63213a0" loc="55:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1cc63213a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1cc6321740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1cc63218d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1cc631f210" loc="60:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1cc631f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1cc631f5b0"/>
        <function-ref name="configure" scoped="" ref="0x7f1cc631f740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1cc631f9d0" loc="61:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1cc631f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1cc631fd50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1cc631e020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1cc631e1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1cc631e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1cc6321b20" loc="56:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1cc6321b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1cc6320020"/>
        <function-ref name="requested" scoped="" ref="0x7f1cc63201b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1cc6320340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1cc63204d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1cc6320660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1cc631e590" loc="62:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1cc631e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1cc631e910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1cc631eaa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1cc631ec30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1cc631edc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1cc631c020"/>
        <function-ref name="get" scoped="" ref="0x7f1cc631c1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1cc631c340"/>
        <function-ref name="led0On" scoped="" ref="0x7f1cc631c980"/>
        <function-ref name="set" scoped="" ref="0x7f1cc631c660"/>
        <function-ref name="led2On" scoped="" ref="0x7f1cc631c4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1cc631c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1cc6322540" loc="54:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1cc6322540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1cc63228e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1cc6322a70"/>
        <function-ref name="request" scoped="" ref="0x7f1cc6322c00"/>
        <function-ref name="granted" scoped="" ref="0x7f1cc6322d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1cc6321020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1cc63208b0" loc="57:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1cc63208b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1cc6320c30"/>
        <function-ref name="userId" scoped="" ref="0x7f1cc6320dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1cc631cc50" loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f1cc631cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1cc631b020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1cc631b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1cc6a7a400" loc="72:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1cc6a7a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1cc6a7a780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1cc6a7a9d0" loc="73:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1cc6a7a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1cc6a7ad50"/>
        <function-ref name="requested" scoped="" ref="0x7f1cc6a79020"/>
        <function-ref name="granted" scoped="" ref="0x7f1cc6a791b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1cc6a79340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1cc6a794d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f1cc6a8fb20" loc="70:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1cc6a8fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1cc6a7a020"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc6a7a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1cc6a79720" loc="74:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1cc6a79720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1cc6a79aa0"/>
        <function-ref name="userId" scoped="" ref="0x7f1cc6a79c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1cc62ecb00" loc="62:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1cc62ecb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1cc62ece80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1cc62eb0f0" loc="63:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1cc62eb0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1cc62eb470"/>
        <function-ref name="requested" scoped="" ref="0x7f1cc62eb600"/>
        <function-ref name="granted" scoped="" ref="0x7f1cc62eb790"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1cc62eb920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1cc62ebab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f1cc62ec3a0" loc="60:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1cc62ec3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1cc62ec720"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc62ec8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1cc62ebd00" loc="64:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1cc62ebd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1cc62ea0a0"/>
        <function-ref name="userId" scoped="" ref="0x7f1cc62ea230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f1cc6a59920" loc="3:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1cc6a59920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1cc6a59ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1cc6a58020" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1cc6a58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1cc6a583a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1cc6a58530"/>
        <function-ref name="request" scoped="" ref="0x7f1cc6a586c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1cc6a58850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1cc6a589e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1cc6a590c0" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1cc6a590c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1cc6a59440"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc6a595d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f1cc6a478d0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f1cc6a478d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f1cc6a47c50"/>
        <function-ref name="offset" scoped="" ref="0x7f1cc6a47de0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f1cc6a44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f1cc6a28930" loc="43:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1cc6a28930"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f1cc6a07790"/>
        <function-ref name="enqueue" scoped="" ref="0x7f1cc6a060d0"/>
        <function-ref name="element" scoped="" ref="0x7f1cc6a065a0"/>
        <function-ref name="full" scoped="" ref="0x7f1cc6a099e0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f1cc6a07310"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1cc6a07c10"/>
        <function-ref name="empty" scoped="" ref="0x7f1cc6a09560"/>
        <function-ref name="size" scoped="" ref="0x7f1cc6a09e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1cc6a00020" loc="93:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1cc6a00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f1cc69ffe50"/>
        <function-ref name="enqueue" scoped="" ref="0x7f1cc69fd780"/>
        <function-ref name="element" scoped="" ref="0x7f1cc69fdc50"/>
        <function-ref name="full" scoped="" ref="0x7f1cc69ff0d0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f1cc69ff9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1cc69fd300"/>
        <function-ref name="empty" scoped="" ref="0x7f1cc6a00c10"/>
        <function-ref name="size" scoped="" ref="0x7f1cc69ff550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f1cc69fb100" loc="94:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1cc69fb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1cc69fb480"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1cc69fb610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1cc69fb7a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1cc69fb930"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1cc69fbac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1cc69fbd50" loc="95:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1cc69fbd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1cc69fa100"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1cc69fa290"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1cc69fa420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1cc69fa5b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1cc69fa740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f1cc69f41d0" loc="114:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7f1cc69f41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1cc69f4550"/>
        <function-ref name="runTask" scoped="" ref="0x7f1cc69f46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1cc6a05d70" loc="89:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1cc6a05d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc6a02180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1cc69fa9c0" loc="96:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1cc69fa9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1cc69fad40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1cc69f9020"/>
        <function-ref name="led1On" scoped="" ref="0x7f1cc69f91b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1cc69f9340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1cc69f94d0"/>
        <function-ref name="get" scoped="" ref="0x7f1cc69f9660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1cc69f97f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1cc69f9e30"/>
        <function-ref name="set" scoped="" ref="0x7f1cc69f9980"/>
        <function-ref name="led0On" scoped="" ref="0x7f1cc69f9b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f1cc69f9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f1cc69fe5f0" loc="90:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f1cc69fe5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f1cc69fe970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f1cc69de7e0" loc="43:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f1cc69de7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f1cc69deb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1cc69dbb20" loc="94:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1cc69dbb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1cc69d7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f1cc69d7300" loc="95:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f1cc69d7300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f1cc69d7680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f1cc69cf0f0" loc="39:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1cc69cf0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1cc69cf470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f1cc69cf810" loc="40:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f1cc69cf810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1cc69cfb90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1cc69cfd20"/>
        <function-ref name="start" scoped="" ref="0x7f1cc69ce020"/>
        <function-ref name="stop" scoped="" ref="0x7f1cc69ce1b0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1cc7591e10" loc="62:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f1cc7592a20" loc="60:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f1cc7561b40" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f1cc7563de0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f1cc7561420" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f1cc7563700" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f1cc75625a0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f1cc7567910" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f1cc7563020" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f1cc7562cc0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f1cc7704020" loc="62:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f1cc79c9dd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f1cc750e020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f1cc750fcc0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f1cc7512390" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1cc75595a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1cc7557020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f1cc750e890" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f1cc750d7b0" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f1cc750f560" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f1cc750d020" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f1cc7512b30" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f1cc7511350" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f1cc7511da0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1cc75595a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1cc7557020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1cc7511b20" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1cc75595a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1cc7557020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f1cc75010e0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f1cc74fe730" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f1cc74fe4b0" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f1cc74fd2e0" loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1cc74fd060" loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1cc74ffca0" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1cc74ff3e0" loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f1cc7501a90" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f1cc7501810" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f1cc75083e0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f1cc7508d60" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1cc7508ae0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f1cc7506790" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f1cc7506510" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f1cc75052a0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f1cc7505020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1cc7505990" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1cc7518810" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f1cc75152a0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f1cc7515020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f1cc7517020" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1cc751eab0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f1cc7517760" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1cc751a9b0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f1cc7518120" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1cc751a270" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1cc75190e0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f1cc75199f0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1cc7519770" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f1cc7515cb0" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f1cc7515a30" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1cc74d71f0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f1cc7627a80" loc="85:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f1cc76261f0" loc="86:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f1cc76272b0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f1cc7840830" loc="52:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1cc7a82020" loc="57:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f1cc7a81020" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f1cc7a82790" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f1cc7a76350" loc="67:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f1cc7a76ba0" loc="75:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1cc73b3350" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1cc73b3350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1cc73ab1f0" loc="136:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1cc73b0a60" loc="83:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f1cc73ae820" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1cc73ae250" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1cc73ae590" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f1cc73afa60" loc="98:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f1cc73aa270" loc="151:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f1cc73ab980" loc="144:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1cc73af270" loc="92:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f1cc73b1020" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1cc73b3c40" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f1cc73ad820" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1cc73ad250" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1cc73ad590" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f1cc73b1ae0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1cc73b1860" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1cc73b0350" loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f1cc73a17b0" loc="61:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f1cc739f020" loc="67:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f1cc739f800" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f1cc739e7d0" loc="83:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f1cc739c020" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1cc739c830" loc="117:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f1cc739e020" loc="77:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1cc739b3f0" loc="134:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f1cc739b170" loc="134:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f1cc73a1020" loc="56:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f1cc739d020" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f1cc739d7b0" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1cc7388270" loc="44:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f1cc73889a0" loc="45:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1cc738a420" loc="42:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f1cc7387820" loc="47:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1cc738ab20" loc="43:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1cc73870e0" loc="46:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1cc738b610" loc="40:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1cc738bce0" loc="41:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1cc735d190" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f1cc735d8e0" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f1cc73582e0" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1cc7358060" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1cc73609c0" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f1cc735c7d0" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f1cc7358bd0" loc="117:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1cc735c070" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1cc735f990" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f1cc735a020" loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f1cc735f190" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1cc7363aa0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f1cc735b020" loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f1cc735a7c0" loc="101:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f1cc735b7e0" loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1cc7360270" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1cc710fc50" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1cc710fc50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1cc710b5a0" loc="61:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1cc80e2920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1cc71065d0" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1cc71065d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1cc7106810" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1cc7106810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1cc7101390" loc="109:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1cc7106810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1cc71043b0" loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f1cc71029d0" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1cc7106810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1cc7106810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1cc7102400" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1cc7106810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f1cc7102740" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1cc7106810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1cc7104b90" loc="88:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f1cc7101b80" loc="116:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1cc7106810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1cc7105390" loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1cc7106810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1cc7105110" loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1cc7106810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1cc7105bc0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1cc7099e20" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1cc7099e20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1cc70930d0" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1cc70930d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1cc70939f0" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1cc70930d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1cc7092b10" loc="76:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1cc70922b0" loc="71:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1cc70912b0" loc="82:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1cc6f6ec90" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1cc75a9d10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1cc6f6e340" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1cc75a9d10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1cc6f6e6c0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1cc6f6e9f0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1cc6f69620" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1cc6f69020" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1cc6f69350" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1cc6f686d0" loc="123:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1cc6f6c2a0" loc="96:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1cc6f6c020" loc="96:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1cc6f6a7f0" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1cc6f6a210" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1cc6f6a560" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1cc6f64020" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1cc6f70c60" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f1cc6f63110" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1cc6f64e10" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1cc6f5f490" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1cc6f60e50" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1cc6f5f1c0" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1cc6f60560" loc="106:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f1cc6f615e0" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1cc6f61020" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1cc6f61350" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f1cc6f4fd30" loc="177:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1cc75a9930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1cc6f4fab0" loc="177:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f1cc6f59a10" loc="88:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1cc75a9d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1cc6f59790" loc="88:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f1cc6f6fe60" loc="68:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1cc75a9d10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f1cc6f5b950" loc="78:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1cc75a9d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1cc6f5b6d0" loc="78:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f1cc6f563a0" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1cc75a9d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1cc6f5ad70" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1cc6f56110" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1cc75a9d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f1cc6f57e50" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1cc75a9d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1cc6f57870" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1cc6f57bc0" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1cc75a9d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f1cc6f53810" loc="147:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1cc75a9550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1cc6f53590" loc="147:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f1cc6f51b90" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1cc75a9550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1cc6f515e0" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f1cc6f51900" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1cc75a9550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f1cc6f54600" loc="136:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1cc6f54380" loc="136:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f1cc6f4d2f0" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1cc75a9930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1cc6f52cf0" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f1cc6f4d060" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1cc75a9930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f1cc6f4c190" loc="195:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1cc75a9930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f1cc6f4aad0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1cc6f4a850" loc="59:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f1cc6f48cd0" loc="71:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1cc6f48a50" loc="71:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f1cc6f46020" loc="85:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1cc6f47ce0" loc="85:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1cc6f3f5e0" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1cc6f3f020" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1cc6f3f350" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1cc6f3abb0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1cc6f3a5b0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1cc6f3a8e0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1cc6f3dd20" loc="112:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1cc6f3c900" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1cc6f3c680" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1cc6f3be00" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1cc6f3b820" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1cc6f3bb70" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f1cc6eceab0" loc="113:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1cc6ece830" loc="113:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f1cc6ecb020" loc="138:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1cc6ecdd30" loc="138:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1cc6ed1d70" loc="104:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1cc6ecd350" loc="130:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f1cc6ec8410" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
              <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1cc6ecfa90" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f1cc6ecfde0" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1cc6ec8130" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f1cc6e5a630" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1cc6e5a020" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f1cc6e5a3a0" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f1cc6e5d670" loc="15:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f1cc6e5c620" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1cc6e5c020" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1cc7599720"/>
                <typename><typedef-ref name="message_t" ref="0x7f1cc7598d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f1cc6e5c390" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f1cc6e3d0e0" loc="95:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1cc6e3d8f0" loc="105:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f1cc6e3b790" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f1cc6e3b020" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f1cc6e45120" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f1cc6e44560" loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f1cc6e422a0" loc="94:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1cc6e42020" loc="94:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f1cc6e44de0" loc="79:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f1cc6e45c90" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1cc6e45a10" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f1cc6e42b00" loc="100:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f1cc6e436e0" loc="85:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f1cc6e4e990" loc="71:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f1cc6e4c350" loc="81:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f1cc6e4e020" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f1cc6e51c30" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f1cc6e4b020" loc="91:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1cc6e4cc50" loc="91:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f1cc6e50c60" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f1cc6e49a60" loc="69:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1cc6e497e0" loc="69:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f1cc6e485c0" loc="80:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1cc6e48340" loc="80:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1cc6d12c40" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1cc6d12670" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1cc6d129b0" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f1cc6d0ca70" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f1cc6d0c7f0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f1cc6d0b890" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1cc6d0b2c0" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1cc6d0b600" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f1cc6d0e610" loc="65:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f1cc6d0a2c0" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1cc6d09820" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1cc6d09b60" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1cc6d0a020" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f1cc6d0c020" loc="72:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1cc6d10610" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1cc6d0fbd0" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1cc6d10020" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1cc6d10370" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1cc6ce95b0" loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f1cc6ce9330" loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f1cc6ce9df0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f1cc6ce8cf0" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f1cc6ce8700" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f1cc6ce8a60" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f1cc6ce6b50" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f1cc6c8e270" loc="53:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f1cc6c8eba0" loc="61:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f1cc6c89070" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1cc6cb2450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f1cc6cb2870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f1cc6c919c0" loc="120:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f1cc6c92990" loc="97:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f1cc6c92020" loc="88:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f1cc6c911f0" loc="102:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f1cc6c90470" loc="128:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f1cc6c82510" loc="65:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f1cc6c85cc0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f1cc6c7a2a0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1cc6c7a020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f1cc6c7b780" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f1cc6c55af0" loc="213:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f1cc6c60790" loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f1cc6c6d530" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1cc6ce13b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f1cc6ce1bf0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1cc6c6d2b0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1cc6ce13b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f1cc6ce1bf0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f1cc6c63870" loc="123:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f1cc6c6aa40" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1cc6cdc360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f1cc6cdcba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1cc6c6a7c0" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1cc6cdc360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f1cc6cdcba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f1cc6c5ae70" loc="180:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f1cc6c56480" loc="197:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f1cc6c6a020" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1cc6cdf290"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f1cc6cdfa20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f1cc6c69270" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1cc6cdc360"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f1cc6cdcba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f1cc6c65020" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f1cc6c67d30" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f1cc6c67610" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f1cc6c5a740" loc="179:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f1cc6c6c780" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1cc6cdf290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f1cc6cdfa20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1cc6c6c500" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1cc6cdf290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f1cc6cdfa20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f1cc6c68420" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f1cc6c595d0" loc="181:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f1cc6c68e00" loc="90:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f1cc6c68b80" loc="90:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f1cc6c64910" loc="113:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f1cc6c630e0" loc="118:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f1cc6c5b840" loc="177:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f1cc6c5e790" loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f1cc6c617e0" loc="133:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f1cc6c5a020" loc="178:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f1cc6c5f020" loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f1cc6c59cf0" loc="182:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f1cc6c65800" loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f1cc6cea330"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f1cc6ce3a50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f1cc6c574c0" loc="187:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f1cc6c55350" loc="207:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f1cc6c69c10" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f1cc6c69990" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f1cc6c544d0" loc="224:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1cc6c54250" loc="224:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f1cc6c6dd10" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1cc6ce13b0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f1cc6ce1bf0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f1cc6c61020" loc="128:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f1cc6c5f770" loc="153:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f1cc6c5b020" loc="174:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1cc6cb2450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f1cc6cb2870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1cc6c5ccf0" loc="174:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1cc6cb2450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f1cc6cb2870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f1cc6c5c2a0" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f1cc6cc5420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f1cc6cc5840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1cc6c5c020" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f1cc6cc5420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f1cc6cc5840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f1cc6c54d90" loc="231:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f1cc6c57cb0" loc="192:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f1cc6c64070" loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f1cc6c56be0" loc="202:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f1cc6c5e020" loc="158:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f1cc6c60020" loc="138:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f1cc6bdc030" loc="95:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1cc6bdc880" loc="105:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f1cc6b35020" loc="90:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f1cc6b35880" loc="98:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1cc80e2160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1cc6b1f4a0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f1cc6b05900" loc="56:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f1cc6b04a20" loc="73:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f1cc6b05070" loc="46:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f1cc6b041f0" loc="65:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f1cc6b02390" loc="81:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f1cc6af8b60" loc="79:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1cc6b01b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1cc6af88e0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1cc6b01b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f1cc6afdb90" loc="53:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f1cc6afa6f0" loc="62:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1cc6b01b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1cc6afa470" loc="62:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1cc6b01b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f1cc6af8030" loc="70:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f1cc6b01b40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f1cc6a8b4b0" loc="62:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BigQueue" loc="43:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-09-19 17:29:17 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f1cc6a252a0" loc="43:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <interfacedef-ref qname="BigQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1cc6a252a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f1cc6a22ac0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1cc6a252a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f1cc6a21cb0" loc="97:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param newVal - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1cc7a7dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1cc6a252a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f1cc6a21a30" loc="97:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1cc6a252a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f1cc6a20720" loc="108:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1cc6a252a0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1cc6a204a0" loc="108:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f1cc6a24350" loc="57:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f1cc6a22350" loc="72:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f1cc6a212b0" loc="88:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1cc6a252a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f1cc6a25b50" loc="50:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1cc7a86090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f1cc6a24ae0" loc="65:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1cc80e2520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f1cc69fe2a0" loc="49:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f1cc69fe020" loc="49:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
