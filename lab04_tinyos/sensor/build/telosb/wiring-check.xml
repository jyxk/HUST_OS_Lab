<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="15:SenseAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fdfb7038a20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fdfb6f7e3f0"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fdfb6f7e3f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fdfb6dbf590"/></to>
    </wire>
    <wire loc="16:SenseAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fdfb702eb50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fdfb6f7c5a0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fdfb6f7c5a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fdfb6d9f020"/></to>
    </wire>
    <wire loc="17:SenseAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb702c020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb6b37640"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb6b37640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fdfb6b2e610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:SenseAppC.nc">
      <from><interface-ref name="readTemp" scoped="" ref="0x7fdfb701a6c0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7fdfb626b310"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7fdfb626b310"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7fdfb576d7d0"/></to>
    </wire>
    <wire loc="19:SenseAppC.nc">
      <from><interface-ref name="readHumidity" scoped="" ref="0x7fdfb701d060"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7fdfb6269240"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7fdfb6269240"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7fdfb576b610"/></to>
    </wire>
    <wire loc="20:SenseAppC.nc">
      <from><interface-ref name="readPhoto" scoped="" ref="0x7fdfb70198e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fdfb6264bc0"/></to>
    </wire>
    <wire loc="47:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fdfb6264bc0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fdfb5681bd0"/></to>
    </wire>
    <wire loc="21:SenseAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fdfb6fbc180"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fdfb623b630"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fdfb623b630"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fdfb61cc400"/></to>
    </wire>
    <wire loc="22:SenseAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fdfb6fad1e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fdfb623a2d0"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fdfb623a2d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fdfb61cecb0"/></to>
    </wire>
    <wire loc="23:SenseAppC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7fdfb6f9d6e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fdfb623e250"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fdfb623e250"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fdfb61c52f0"/></to>
    </wire>
    <wire loc="24:SenseAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fdfb6fa15a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fdfb623d280"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fdfb6f798d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb5559ca0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fdfb6f798d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb61c8bc0"/></to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fdfb6f798d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb56d41b0"/></to>
    </wire>
    <wire loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fdfb6f798d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb6638980"/></to>
    </wire>
    <wire loc="96:/home/jyxk/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fdfb6f798d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb584c060"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fdfb6f798d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb68c4680"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fdfb6f798d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb6b27840"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fdfb6dbfc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fdfb74d23a0"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fdfb74d23a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fdfb707d140"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fdfb6daf6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb6f7b790"/></to>
    </wire>
    <wire loc="48:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fdfb6f7b790"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb6f779c0"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fdfb6dafdc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fdfb6f798d0"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fdfb6f73150"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fdfb6f56020"/></to>
    </wire>
    <wire loc="46:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fdfb6f56020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb6f53110"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fdfb6f73830"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb6f76c80"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fdfb6f72020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb6d77c40"/></to>
    </wire>
    <wire loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fdfb6f53110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb6f3dcb0"/></to>
    </wire>
    <wire loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fdfb6f4c6c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fdfb6f3c3d0"/></to>
    </wire>
    <wire loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fdfb71554c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fdfb6f3b680"/></to>
    </wire>
    <wire loc="113:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fdfb6ef75a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fdfb6e346d0"/></to>
    </wire>
    <wire loc="126:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fdfb6ee5020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fdfb6e2db30"/></to>
    </wire>
    <wire loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fdfb6eee700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fdfb6e39160"/></to>
    </wire>
    <wire loc="149:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fdfb6ed3a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fdfb6e13cb0"/></to>
    </wire>
    <wire loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fdfb6ef5aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fdfb6e3a480"/></to>
    </wire>
    <wire loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fdfb6ed9020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fdfb6e13020"/></to>
    </wire>
    <wire loc="170:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fdfb6ed0a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fdfb6dfccb0"/></to>
    </wire>
    <wire loc="154:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fdfb6ee05a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fdfb6e0d220"/></to>
    </wire>
    <wire loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fdfb6ef9b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fdfb6e8a9d0"/></to>
    </wire>
    <wire loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fdfb6ed5a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fdfb6e222f0"/></to>
    </wire>
    <wire loc="134:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fdfb6edb3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fdfb6e23610"/></to>
    </wire>
    <wire loc="133:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fdfb6ee45a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fdfb6e24220"/></to>
    </wire>
    <wire loc="115:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fdfb6ee8700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fdfb6e327a0"/></to>
    </wire>
    <wire loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fdfb6ed2a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fdfb6e0b2f0"/></to>
    </wire>
    <wire loc="140:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fdfb6ee3be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fdfb6e1d6d0"/></to>
    </wire>
    <wire loc="114:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fdfb6ef4890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fdfb6e33ac0"/></to>
    </wire>
    <wire loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fdfb6f08060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb6e99c80"/></to>
    </wire>
    <wire loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fdfb6ed9da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fdfb6e0c610"/></to>
    </wire>
    <wire loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fdfb6eff0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fdfb6e3c020"/></to>
    </wire>
    <wire loc="161:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fdfb6edfa50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fdfb6e056d0"/></to>
    </wire>
    <wire loc="101:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fdfb6ee96d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fdfb6e42a90"/></to>
    </wire>
    <wire loc="142:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fdfb6ed4a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fdfb6e1a7a0"/></to>
    </wire>
    <wire loc="100:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fdfb6ef1cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fdfb6e43de0"/></to>
    </wire>
    <wire loc="141:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fdfb6eda1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fdfb6e1cac0"/></to>
    </wire>
    <wire loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fdfb6ed1a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fdfb6e037a0"/></to>
    </wire>
    <wire loc="147:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fdfb6ee10c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fdfb6e15b30"/></to>
    </wire>
    <wire loc="120:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fdfb6ee76c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb6e91c80"/></to>
    </wire>
    <wire loc="162:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fdfb6ed8b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fdfb6e04ac0"/></to>
    </wire>
    <wire loc="128:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fdfb6ed6a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fdfb6e2bcb0"/></to>
    </wire>
    <wire loc="169:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fdfb6ed7a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fdfb6dfc020"/></to>
    </wire>
    <wire loc="127:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fdfb6edc570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fdfb6e2b020"/></to>
    </wire>
    <wire loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fdfb6edd020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fdfb6dfeb30"/></to>
    </wire>
    <wire loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fdfb6e97c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fdfb6e975b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fdfb6e952f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fdfb6df6aa0"/></to>
    </wire>
    <wire loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fdfb6e95940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fdfb6df3260"/></to>
    </wire>
    <wire loc="102:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb6e41930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb6e99c80"/></to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fdfb6e3f020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fdfb6e975b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb6e38020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb6e99c80"/></to>
    </wire>
    <wire loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fdfb6e377a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fdfb6e975b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb6e31610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb6e99c80"/></to>
    </wire>
    <wire loc="117:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fdfb6e30c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fdfb6e975b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fdfb6e8fc20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fdfb6e8f5b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fdfb6e8e2f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fdfb6df39f0"/></to>
    </wire>
    <wire loc="123:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fdfb6e8e940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fdfb6df2240"/></to>
    </wire>
    <wire loc="129:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb6e29b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb6e91c80"/></to>
    </wire>
    <wire loc="130:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fdfb6e272f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fdfb6e8f5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb6e21160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb6e91c80"/></to>
    </wire>
    <wire loc="137:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fdfb6e207a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fdfb6e8f5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb6e19610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb6e91c80"/></to>
    </wire>
    <wire loc="144:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fdfb6e18c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fdfb6e8f5b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb6e12b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb6e91c80"/></to>
    </wire>
    <wire loc="151:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fdfb6e102f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fdfb6e8f5b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb6e09160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb6e91c80"/></to>
    </wire>
    <wire loc="158:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fdfb6e087a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fdfb6e8f5b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb6e02610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb6e91c80"/></to>
    </wire>
    <wire loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fdfb6e01c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fdfb6e8f5b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb6dfab40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb6e91c80"/></to>
    </wire>
    <wire loc="172:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fdfb6df82f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fdfb6e8f5b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb707b040"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fdfb7077490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fdfb74693b0"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fdfb6d77c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb6da28e0"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fdfb6d977b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fdfb6d7a360"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fdfb6d7a360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fdfb6b5f020"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fdfb6d9d980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fdfb6d796a0"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fdfb6d796a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fdfb6b4bb90"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fdfb6d9cca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fdfb6d789c0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fdfb6d789c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fdfb6b46710"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fdfb6b4e2f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fdfb6d1f200"/></to>
    </wire>
    <wire loc="486:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fdfb6d1f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bfc740"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fdfb6b4ade0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7fdfb6d1d200"/></to>
    </wire>
    <wire loc="487:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fdfb6d1d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bf7100"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fdfb6b45930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fdfb6d1b200"/></to>
    </wire>
    <wire loc="488:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fdfb6d1b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bf3d10"/></to>
    </wire>
    <wire loc="442:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fdfb6d61020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c95100"/></to>
    </wire>
    <wire loc="455:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fdfb6d4c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c66d10"/></to>
    </wire>
    <wire loc="531:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fdfb6d03560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c58d10"/></to>
    </wire>
    <wire loc="551:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fdfb6cde570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bcc100"/></to>
    </wire>
    <wire loc="532:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fdfb6d01580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c52740"/></to>
    </wire>
    <wire loc="460:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fdfb6d48020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c5c100"/></to>
    </wire>
    <wire loc="473:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fdfb6d34200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c2ce00"/></to>
    </wire>
    <wire loc="497:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fdfb6d0f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bd6d10"/></to>
    </wire>
    <wire loc="535:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fdfb6cfb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c49d10"/></to>
    </wire>
    <wire loc="545:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fdfb6cea570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6be9100"/></to>
    </wire>
    <wire loc="557:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fdfb6cd6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bc8d10"/></to>
    </wire>
    <wire loc="445:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fdfb6d5b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c87100"/></to>
    </wire>
    <wire loc="536:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fdfb6cf9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c44740"/></to>
    </wire>
    <wire loc="450:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fdfb6d57020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c7e740"/></to>
    </wire>
    <wire loc="463:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fdfb6d42020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c4d100"/></to>
    </wire>
    <wire loc="476:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fdfb6d2e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c1ed10"/></to>
    </wire>
    <wire loc="489:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fdfb6d19200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bee740"/></to>
    </wire>
    <wire loc="500:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fdfb6d09200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bc8d10"/></to>
    </wire>
    <wire loc="440:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fdfb6d65020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c9fd10"/></to>
    </wire>
    <wire loc="453:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fdfb6d51020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c6f860"/></to>
    </wire>
    <wire loc="466:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fdfb6d3c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c3f100"/></to>
    </wire>
    <wire loc="530:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fdfb6d05580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c58d10"/></to>
    </wire>
    <wire loc="548:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fdfb6ce4570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bda100"/></to>
    </wire>
    <wire loc="555:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fdfb6cd8570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bc8d10"/></to>
    </wire>
    <wire loc="541:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fdfb6cf1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c01d10"/></to>
    </wire>
    <wire loc="471:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fdfb6d38020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c36a60"/></to>
    </wire>
    <wire loc="484:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fdfb6d24200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c05100"/></to>
    </wire>
    <wire loc="495:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fdfb6d13200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bdf740"/></to>
    </wire>
    <wire loc="549:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fdfb6ce2570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bd6d10"/></to>
    </wire>
    <wire loc="538:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fdfb6cf7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c10d10"/></to>
    </wire>
    <wire loc="443:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fdfb6d5f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c91d10"/></to>
    </wire>
    <wire loc="456:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fdfb6d4a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c61740"/></to>
    </wire>
    <wire loc="493:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fdfb6d17200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6be9100"/></to>
    </wire>
    <wire loc="461:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fdfb6d46020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c58d10"/></to>
    </wire>
    <wire loc="474:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fdfb6d32200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c27740"/></to>
    </wire>
    <wire loc="498:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fdfb6d0d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bd1740"/></to>
    </wire>
    <wire loc="540:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fdfb6cf3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c05100"/></to>
    </wire>
    <wire loc="438:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fdfb6d72020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6ca96d0"/></to>
    </wire>
    <wire loc="451:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fdfb6d55020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c78100"/></to>
    </wire>
    <wire loc="464:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fdfb6d40020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c49d10"/></to>
    </wire>
    <wire loc="477:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fdfb6d2c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c19740"/></to>
    </wire>
    <wire loc="542:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fdfb6cee580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c3f100"/></to>
    </wire>
    <wire loc="546:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fdfb6ce8570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6be4d10"/></to>
    </wire>
    <wire loc="552:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fdfb6cdc570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bc8d10"/></to>
    </wire>
    <wire loc="482:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fdfb6d28200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c10d10"/></to>
    </wire>
    <wire loc="543:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fdfb6cec580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c3bd10"/></to>
    </wire>
    <wire loc="441:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fdfb6d63020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c9a740"/></to>
    </wire>
    <wire loc="454:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fdfb6d4e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c6a270"/></to>
    </wire>
    <wire loc="467:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fdfb6d3a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c3bd10"/></to>
    </wire>
    <wire loc="539:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fdfb6cf5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c0a740"/></to>
    </wire>
    <wire loc="550:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fdfb6ce0570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bd1740"/></to>
    </wire>
    <wire loc="472:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fdfb6d36200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c30460"/></to>
    </wire>
    <wire loc="485:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fdfb6d22200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c01d10"/></to>
    </wire>
    <wire loc="496:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fdfb6d11200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bda100"/></to>
    </wire>
    <wire loc="444:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fdfb6d5d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c8c740"/></to>
    </wire>
    <wire loc="494:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fdfb6d15200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6be4d10"/></to>
    </wire>
    <wire loc="449:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fdfb6d59020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c83d10"/></to>
    </wire>
    <wire loc="462:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fdfb6d44020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c52740"/></to>
    </wire>
    <wire loc="475:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fdfb6d30200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c22100"/></to>
    </wire>
    <wire loc="499:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fdfb6d0b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bcc100"/></to>
    </wire>
    <wire loc="439:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fdfb6d67020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6ca4100"/></to>
    </wire>
    <wire loc="452:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fdfb6d53020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c74d10"/></to>
    </wire>
    <wire loc="465:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fdfb6d3e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c44740"/></to>
    </wire>
    <wire loc="478:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fdfb6d2a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c14100"/></to>
    </wire>
    <wire loc="534:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fdfb6cfd560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c4d100"/></to>
    </wire>
    <wire loc="547:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fdfb6ce6570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bdf740"/></to>
    </wire>
    <wire loc="533:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fdfb6cff580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c4d100"/></to>
    </wire>
    <wire loc="483:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fdfb6d26200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c0a740"/></to>
    </wire>
    <wire loc="554:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fdfb6cda570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bcc100"/></to>
    </wire>
    <wire loc="558:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fdfb6cd4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6bee740"/></to>
    </wire>
    <wire loc="529:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fdfb6d071f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdfb6c5c100"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fdfb6b2e610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fdfb6b24610"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fdfb6b24610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb69ad690"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fdfb6b27840"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb6a28760"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fdfb6b1d1a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fdfb699ecf0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fdfb6a28760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb5944380"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fdfb69a7c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb69fccf0"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fdfb69f61d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fdfb6a27020"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fdfb6a27020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fdfb593d020"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fdfb6993020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fdfb6aa5020"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fdfb6aa5020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fdfb6a690f0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fdfb5944380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb5928a30"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fdfb5937780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fdfb5944bd0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fdfb5944bd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fdfb5927340"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fdfb59393d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fdfb6aa5020"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb59244c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb592d7b0"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb592d7b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb6afec00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb5922a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb592cda0"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb592cda0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb6af98b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb5921da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb592a0c0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb592a0c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb6af6210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb6afec00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fdfb6ee76c0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb6af98b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fdfb6ee5020"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb6af6210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fdfb6edc570"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb6afec00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fdfb6ee76c0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb6af98b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fdfb6ee3be0"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb6af6210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fdfb6eda1f0"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb6afec00"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fdfb6ee76c0"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb6af98b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fdfb6ee10c0"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb6af6210"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fdfb6ed9020"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb6afec00"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fdfb6ee76c0"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb6af98b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fdfb6ee05a0"/></to>
    </wire>
    <wire loc="76:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb6af6210"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fdfb6ed9da0"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb6afec00"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fdfb6ee76c0"/></to>
    </wire>
    <wire loc="79:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb6af98b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fdfb6edfa50"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb6af6210"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fdfb6ed8b80"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb6afec00"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fdfb6ee76c0"/></to>
    </wire>
    <wire loc="83:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb6af98b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fdfb6edd020"/></to>
    </wire>
    <wire loc="84:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb6af6210"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fdfb6ed7a20"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fdfb6a67540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fdfb6a9c060"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fdfb6a9c060"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fdfb6a980a0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb6a892c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fdfb6ee76c0"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fdfb69f2490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fdfb69a2e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/platforms/telosb/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fdfb6985cb0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fdfb5896450"/></to>
    </wire>
    <wire loc="48:/home/jyxk/tinyos-main/tos/platforms/telosb/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fdfb5896450"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fdfb58924f0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fdfb58924f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fdfb5889e60"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fdfb5889e60"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fdfb6941b10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7fdfb588d570"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7fdfb587ce70"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7fdfb587ce70"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7fdfb693e950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fdfb5891c70"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fdfb5883ac0"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fdfb5883ac0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fdfb66441d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb588e7e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb587c140"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb587c140"/></from>
      <to><interface-ref name="ResourceReadNow" scoped="" ref="0x7fdfb693c6c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb5886780"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb6579560"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb5880830"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb6579560"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb587a780"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb6579560"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fdfb69375c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb5886780"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fdfb6925b10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb5873720"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb5873720"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fdfb68ce1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7fdfb693bb20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb58749e0"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb58749e0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fdfb672bd30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb58719a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb5886780"/></to>
    </wire>
    <wire loc="136:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7fdfb69085c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fdfb5872720"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fdfb68cd960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fdfb5871060"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fdfb68cb920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fdfb67271d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb68dacd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7fdfb5860300"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb58719a0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fdfb6726740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7fdfb58620a0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7fdfb68cd960"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fdfb68c2af0"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7fdfb68c91d0"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7fdfb68c0910"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fdfb68cb920"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fdfb68c1ab0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fdfb68ce1d0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fdfb68c33f0"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb68dacd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb6745520"/></to>
    </wire>
    <wire loc="98:/home/jyxk/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb6745520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb58496c0"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7fdfb68bbb30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb6744b20"/></to>
    </wire>
    <wire loc="100:/home/jyxk/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb6744b20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb5848cb0"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7fdfb68afb80"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7fdfb67dc0c0"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fdfb68a9860"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7fdfb6d17200"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fdfb68a67d0"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7fdfb6d15200"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fdfb68a4640"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7fdfb6d13200"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fdfb68a2540"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7fdfb6d11200"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fdfb68a0540"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7fdfb6d0f200"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fdfb689e540"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7fdfb6d0d200"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fdfb689c540"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7fdfb6d0b200"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fdfb689a540"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7fdfb6d09200"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fdfb68baaa0"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fdfb6f08060"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fdfb68ad220"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7fdfb6ef9b10"/></to>
    </wire>
    <wire loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fdfb68ac6f0"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7fdfb6eff0c0"/></to>
    </wire>
    <wire loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fdfb68abb70"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7fdfb6ef1cf0"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fdfb68aa9e0"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7fdfb6ef5aa0"/></to>
    </wire>
    <wire loc="99:/home/jyxk/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb67443a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb5848530"/></to>
    </wire>
    <wire loc="101:/home/jyxk/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb5847610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb6742570"/></to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fdfb5847dd0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fdfb584c670"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fdfb5846900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7fdfb672bd30"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fdfb66c1cb0"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fdfb66bd030"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7fdfb67271d0"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fdfb66ba020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fdfb6726740"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fdfb66bdd80"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fdfb6721280"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fdfb66bc9c0"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fdfb6721e40"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7fdfb671ea90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb66884e0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb66884e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fdfb6b2e610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7fdfb6713020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb6681020"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb6681020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fdfb6b2e610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7fdfb670e6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb667bb40"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb667bb40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fdfb6b2e610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7fdfb67209c0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7fdfb67dc0c0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7fdfb66b77f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb5807280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb5880830"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb66405e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb5880830"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb663c280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb580b360"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb580b360"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fdfb672bd30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb663fc90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb5809020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb5809020"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fdfb68ce1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fdfb66441d0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fdfb65c25a0"/></to>
    </wire>
    <wire loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb6631300"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb66405e0"/></to>
    </wire>
    <wire loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb6591210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb663c280"/></to>
    </wire>
    <wire loc="35:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fdfb6596480"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fdfb66376c0"/></to>
    </wire>
    <wire loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fdfb6633a70"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb663fc90"/></to>
    </wire>
    <wire loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fdfb662f730"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fdfb65cad80"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fdfb65cad80"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fdfb57f4020"/></to>
    </wire>
    <wire loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7fdfb6606900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7fdfb6613190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7fdfb660e740"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fdfb65ca530"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb57fb450"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fdfb57fb450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb57dfca0"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fdfb57ee780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fdfb57fbca0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fdfb57fbca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fdfb57de5b0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fdfb57f03d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fdfb6aa5020"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb57da710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb57e4880"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb57e4880"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb6afec00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb57d9da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb57e2020"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb57e2020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb6af98b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb57d70c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb57e1440"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb57e1440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb6af6210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fdfb5808020"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fdfb68cd960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fdfb5808910"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fdfb68cb920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fdfb67271d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb68dacd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7fdfb5794120"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb5807280"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fdfb6726740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7fdfb5797dc0"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fdfb69375c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb587a780"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fdfb6925b10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb5789020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb5789020"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fdfb68ce1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="SubResourceReadNow" scoped="" ref="0x7fdfb6938020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb578a280"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb578a280"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fdfb672bd30"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb5787280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb587a780"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fdfb5788020"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fdfb68cd960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fdfb5788910"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fdfb68cb920"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fdfb67271d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb68dacd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7fdfb5778cc0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb5787280"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fdfb6726740"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7fdfb5779a40"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x7fdfb6268900"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x7fdfb576ce80"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fdfb626aaa0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fdfb576d060"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7fdfb5769e10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb6501680"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7fdfb57677a0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fdfb6500a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x7fdfb5768ad0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb6501680"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7fdfb5766c50"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fdfb6500a30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7fdfb6500a30"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fdfb6482580"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb6501680"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb6472b20"/></to>
    </wire>
    <wire loc="77:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb6472b20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb62bf210"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fdfb6481ac0"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7fdfb646f9c0"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fdfb646f9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fdfb646bb70"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7fdfb6480c50"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7fdfb646ecd0"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fdfb646ecd0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fdfb6466690"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7fdfb647fde0"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7fdfb646c020"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7fdfb646c020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fdfb6341a30"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb647e9e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb627c1e0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb627c1e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fdfb6b2e610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fdfb6479d50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fdfb6f7c5a0"/></to>
    </wire>
    <wire loc="102:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x7fdfb6477c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7fdfb6477480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb62bf210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb56d1970"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fdfb646ade0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fdfb6d5f020"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fdfb6465930"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fdfb6d5d020"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fdfb645f480"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fdfb6d5b020"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0x7fdfb6453a80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fdfb64601b0"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fdfb6452ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fdfb646bb70"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fdfb6450020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fdfb6466690"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb6458770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdfb6444c10"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdfb6444c10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fdfb6b2e610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fdfb6340610"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fdfb6432bc0"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fdfb6432bc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fdfb641ea30"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fdfb62b8280"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fdfb645ba90"/></to>
    </wire>
    <wire loc="81:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb6288020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb62bd400"/></to>
    </wire>
    <wire loc="108:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb62bd400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb56cfc30"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb62892f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb62be7a0"/></to>
    </wire>
    <wire loc="107:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb62be7a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb56cf020"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fdfb644fba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fdfb6433bc0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fdfb641fa30"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fdfb6429bc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fdfb6415bc0"/></to>
    </wire>
    <wire loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fdfb6430bc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fdfb641ca30"/></to>
    </wire>
    <wire loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fdfb642ebc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fdfb641aa30"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fdfb6439bc0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fdfb6421a30"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fdfb642bbc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fdfb6417a30"/></to>
    </wire>
    <wire loc="83:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fdfb6428bc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fdfb6414bc0"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fdfb6435bf0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fdfb64259d0"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fdfb642dbc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fdfb6419a30"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fdfb6434bc0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fdfb6420a30"/></to>
    </wire>
    <wire loc="81:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fdfb642ac40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fdfb6416bc0"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fdfb6431bc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fdfb641da30"/></to>
    </wire>
    <wire loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fdfb642fbc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fdfb641ba30"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fdfb643abc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fdfb6422a30"/></to>
    </wire>
    <wire loc="79:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fdfb642cbc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fdfb6418a30"/></to>
    </wire>
    <wire loc="106:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb62be020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb56d0850"/></to>
    </wire>
    <wire loc="109:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb56ce590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb62bdcd0"/></to>
    </wire>
    <wire loc="111:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fdfb56ced50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fdfb56d47c0"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fdfb56cb020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/jyxk/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fdfb569a0f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fdfb62b8280"/></to>
    </wire>
    <wire loc="81:/home/jyxk/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fdfb569ab70"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fdfb62b8d00"/></to>
    </wire>
    <wire loc="83:/home/jyxk/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb5699270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb62892f0"/></to>
    </wire>
    <wire loc="84:/home/jyxk/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb5699e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb6288020"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fdfb5698680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/jyxk/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fdfb5698e60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fdfb5681bd0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fdfb6941b10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fdfb6245370"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fdfb567c840"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fdfb567c840"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fdfb66441d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x7fdfb6264490"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x7fdfb624d170"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb567e4a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb624dac0"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb56785c0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb624dac0"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fdfb69375c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb567e4a0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fdfb6925b10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb5672730"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb5672730"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fdfb68ce1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7fdfb693bb20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb5673af0"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb5673af0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fdfb672bd30"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb56709a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb567e4a0"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fdfb5671720"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fdfb68cd960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fdfb5670060"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fdfb68cb920"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fdfb67271d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb68dacd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7fdfb5661120"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb56709a0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fdfb6726740"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7fdfb5663dc0"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb5653280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb56785c0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb66405e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb56785c0"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb663c280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb5657280"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb5657280"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fdfb672bd30"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb663fc90"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb5656020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb5656020"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fdfb68ce1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fdfb5655020"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fdfb68cd960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fdfb5655910"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fdfb68cb920"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fdfb67271d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb68dacd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7fdfb5644300"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb5653280"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fdfb6726740"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7fdfb5645060"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fdfb61c52f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fdfb61b4450"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fdfb623d280"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fdfb622b7d0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fdfb623b020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fdfb61ce6c0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fdfb622c4c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fdfb61cb060"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fdfb61c8bc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdfb61b5d60"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fdfb61c1940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fdfb622ce40"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fdfb61cb9f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fdfb61c4e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fdfb61ca760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fdfb61c4320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fdfb61c1020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7fdfb5e268d0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fdfb61c4e10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fdfb6085de0"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fdfb61c4320"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fdfb60856c0"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7fdfb6084c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fdfb61c1020"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fdfb61acdc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fdfb61c1940"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fdfb6082920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fdfb61c1940"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fdfb6078cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fdfb61c1940"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fdfb6083590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fdfb61aaad0"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7fdfb6083e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7fdfb61ad4a0"/></to>
    </wire>
    <wire loc="77:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7fdfb61a4e30"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7fdfb607de10"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fdfb61a3540"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fdfb6053080"/></to>
    </wire>
    <wire loc="17:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fdfb6053080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fdfb5e390c0"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fdfb6070d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fdfb6053890"/></to>
    </wire>
    <wire loc="13:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fdfb6053890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fdfb5e3f440"/></to>
    </wire>
    <wire loc="332:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7fdfb614e6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7fdfb61854f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7fdfb6152c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fdfb614ba00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7fdfb607f020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7fdfb607f800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fdfb6051020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fdfb5e3e440"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fdfb5e3e440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fdfb5feed00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fdfb5e3f440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fdfb5fef670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fdfb5e3d020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fdfb5e39920"/></to>
    </wire>
    <wire loc="19:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb5e37020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb5e40020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb5e40020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb5ff14d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb5e40c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb55c8970"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb55c8970"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb5e91510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fdfb5fea1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fdfb5e3d020"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb55c2a50"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb5ff08a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fdfb5fece50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb55c9cc0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb55c9cc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb5e93280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fdfb5fdc710"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fdfb55c22b0"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fdfb55c22b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fdfb5e94510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb5ff08a0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb5f58e70"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fdfb5feed00"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fdfb5f55890"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fdfb5fef670"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fdfb5f57790"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb5ff14d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb5f580d0"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fdfb5f533e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fdfb5fea1d0"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fdfb5f545b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fdfb5fece50"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fdfb5f4e5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fdfb5fdc710"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fdfb5f53a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fdfb5f414d0"/></to>
    </wire>
    <wire loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fdfb5f414d0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fdfb5f39cc0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fdfb5f4d020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fdfb5ead110"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fdfb5ead110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fdfb6a9c060"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fdfb5f4a120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fdfb6f7c5a0"/></to>
    </wire>
    <wire loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fdfb5f3c080"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fdfb5f34910"/></to>
    </wire>
    <wire loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fdfb5f44b80"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fdfb5f39410"/></to>
    </wire>
    <wire loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fdfb5f33210"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7fdfb6cf5580"/></to>
    </wire>
    <wire loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fdfb5f311f0"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7fdfb6cf3580"/></to>
    </wire>
    <wire loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fdfb5f2f1f0"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7fdfb6cf1580"/></to>
    </wire>
    <wire loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fdfb5f2d1f0"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7fdfb6cec580"/></to>
    </wire>
    <wire loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fdfb5f2b1f0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7fdfb6cee580"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fdfb55c78d0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fdfb5f414d0"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb55c7130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb5e91d20"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb5e91d20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb5e73930"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb5e90af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb55c2a50"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb5e91510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb5e74530"/></to>
    </wire>
    <wire loc="106:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb5e74530"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb55543a0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fdfb5e94510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fdfb5e8eb60"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb5e93280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb5e75780"/></to>
    </wire>
    <wire loc="105:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fdfb5e75780"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fdfb5555540"/></to>
    </wire>
    <wire loc="108:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb5e73930"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb55538b0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fdfb5e8dc20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fdfb5f3c080"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb5e71250"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb5e90af0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb5e78a90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb5e73930"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb5e6dd50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb5e74cb0"/></to>
    </wire>
    <wire loc="107:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb5e74cb0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb5554b20"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fdfb5e6d020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fdfb5f44b80"/></to>
    </wire>
    <wire loc="109:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb5552210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb5e71250"/></to>
    </wire>
    <wire loc="111:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fdfb55529d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fdfb5558330"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fdfb5550c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fdfb551f3a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fdfb5e6d020"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fdfb551fb00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fdfb5e6d780"/></to>
    </wire>
    <wire loc="84:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb551e0f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb5e6dd50"/></to>
    </wire>
    <wire loc="85:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb551ed00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb5e58990"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="SenseC" loc="5:SenseC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/jyxk/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/jyxk/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/jyxk/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/jyxk/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.TimerMilliC" loc="44(SenseAppC.TimerMilliC):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7041230"/>
            <typename><typedef-ref name="T32khz" ref="0x7fdfb70415a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7041230"/>
            <typename><typedef-ref name="T32khz" ref="0x7fdfb70415a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7041230"/>
            <typename><typedef-ref name="T32khz" ref="0x7fdfb70415a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7041230"/>
            <typename><typedef-ref name="T32khz" ref="0x7fdfb70415a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.Sensor" loc="49(SenseAppC.Sensor):/home/jyxk/tinyos-main/tos/platforms/telosb/DemoSensorC.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/platforms/telosb/DemoSensorC.nc">
        <short> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value.</short>
        <long> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value. The platform author chooses which sensor actually sits&#10; behind DemoSensorC, and though it's probably Voltage, Light, or&#10; Temperature, there are no guarantees.&#10;&#10; This particular DemoSensorC on the telosb platform provides a&#10; voltage reading, using VoltageC. &#10;&#10; To convert from ADC counts to actual voltage, divide this reading&#10; by 4096 and multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10; &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.Sensor.DemoSensor" loc="43(SenseAppC.Sensor.DemoSensor):/home/jyxk/tinyos-main/tos/platforms/telosb/VoltageC.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/platforms/telosb/VoltageC.nc">
        <short>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.</short>
        <long>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC" loc="43(SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC):/home/jyxk/tinyos-main/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
        <short>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.</short>
        <long>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InternalVoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC" loc="47(SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC):/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient" loc="43(SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient):/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):/home/jyxk/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:/home/jyxk/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):/home/jyxk/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):/home/jyxk/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC" loc="47(SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC):/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7041230"/>
            <typename><typedef-ref name="T32khz" ref="0x7fdfb70415a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7041230"/>
            <typename><typedef-ref name="T32khz" ref="0x7fdfb70415a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):/home/jyxk/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:/home/jyxk/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient" loc="43(SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient):/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430InternalVoltageP" loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/sensors/Msp430InternalVoltageP.nc">
      <module/>
    </component>
    <component qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC" loc="47(SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC):/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient" loc="43(SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient):/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.SensirionSht11C" loc="45(SenseAppC.SensirionSht11C):/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP" loc="45(SenseAppC.SensirionSht11C.SensirionSht11ReaderP):/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
        <short>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor.</short>
        <long>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor. It acquires the&#10; underlying resource before executing each read, enabling&#10; arbitrated access.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="43(HplSensirionSht11C.InterruptDATAC):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):/home/jyxk/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/home/jyxk/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.HamamatsuS1087ParC" loc="40(SenseAppC.HamamatsuS1087ParC):/home/jyxk/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
        <short>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS1087ParC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC" loc="47(SenseAppC.HamamatsuS1087ParC.AdcReadClientC):/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient" loc="43(SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient):/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC" loc="47(SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC):/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient" loc="43(SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient):/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS1087ParP" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
        <short>&#10; HamamatsuS1087ParP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fdfb6ec9230" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fdfb6ec95d0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fdfb6ec9980" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fdfb6ec9d00" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fdfb6ec80d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fdfb6ec8440" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fdfb6ec87d0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fdfb6ec8b60" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fdfb6ec7020" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fdfb6e8c960" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fdfb6e8cd30" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fdfb6ccfa10" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fdfb6ccfdc0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fdfb6cce1a0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fdfb6cce550" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fdfb6cce8c0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fdfb6ad73b0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fdfb6ad73b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fdfb6a97160" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fdfb6a97160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fdfb6a85a60" loc="55:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fdfb6a85a60"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fdfb6a82290" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fdfb6a82290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fdfb6a82680" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fdfb6a82680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fdfb6a82e60" loc="58:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fdfb6a82e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fdfb6a81260" loc="59:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fdfb6a81a60" loc="60:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fdfb6a81a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fdfb6aa6ad0" loc="52:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fdfb6aa6ad0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fdfb6a602d0" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fdfb6a602d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fdfb6a606c0" loc="54:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fdfb6a606c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fdfb6a5e020" loc="55:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fdfb6a5e020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fdfb6a5e3f0" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fdfb6a204f0" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fdfb6a204f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fdfb69f0d80" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fdfb69f0d80"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fdfb69ed110" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fdfb699c1f0" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fdfb699c1f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="49:/home/jyxk/tinyos-main/tos/platforms/telosb/DemoSensorC.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/platforms/telosb/DemoSensorC.nc">
        <short> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value.</short>
        <long> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value. The platform author chooses which sensor actually sits&#10; behind DemoSensorC, and though it's probably Voltage, Light, or&#10; Temperature, there are no guarantees.&#10;&#10; This particular DemoSensorC on the telosb platform provides a&#10; voltage reading, using VoltageC. &#10;&#10; To convert from ADC counts to actual voltage, divide this reading&#10; by 4096 and multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10; &#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="43:/home/jyxk/tinyos-main/tos/platforms/telosb/VoltageC.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/platforms/telosb/VoltageC.nc">
        <short>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.</short>
        <long>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430InternalVoltageC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
        <short>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.</short>
        <long>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:/home/jyxk/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:/home/jyxk/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fdfb67a5850" loc="83:/home/jyxk/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/jyxk/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fdfb679bb40" loc="42:/home/jyxk/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/jyxk/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:/home/jyxk/tinyos-main/tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:/home/jyxk/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7fdfb65c4c50" loc="23:/home/jyxk/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7fdfb65c1020" loc="23:/home/jyxk/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fdfb65c1020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadNowClientC" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadNowClientC.nc" abstract="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11C" loc="45:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
        <short>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor.</short>
        <long>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor. It acquires the&#10; underlying resource before executing each read, enabling&#10; arbitrated access.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fdfb632f7d0" loc="89:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7fdfb6322350" loc="42:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fdfb630dd90" loc="52:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/home/jyxk/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/home/jyxk/tinyos-main/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS1087ParC" loc="40:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
        <short>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="readHumidity" ref="0x7fdfb701d060" loc="13:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readHumidity" scoped="" ref="0x7fdfb701d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fdfb701dc50"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb7019110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fdfb7038a20" loc="9:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fdfb7038a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fdfb7038da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fdfb6fbc180" loc="15:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fdfb6fbc180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6fbc500"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fdfb6fbc690"/>
        <function-ref name="getPayload" scoped="" ref="0x7fdfb6fbc820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fdfb6fbc9b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fdfb6fbcb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readTemp" ref="0x7fdfb701a6c0" loc="12:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readTemp" scoped="" ref="0x7fdfb701a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fdfb701e390"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb701e810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fdfb6fa15a0" loc="17:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fdfb6fa15a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fdfb6fa1920"/>
        <function-ref name="getPayload" scoped="" ref="0x7fdfb6fa1ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fdfb6fa1c40"/>
        <function-ref name="cancel" scoped="" ref="0x7fdfb6fa1dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fdfb6fc6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readPhoto" ref="0x7fdfb70198e0" loc="14:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readPhoto" scoped="" ref="0x7fdfb70198e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fdfb7018560"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb70189e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fdfb702eb50" loc="10:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fdfb702eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fdfb7039020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fdfb70391b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fdfb7039340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fdfb70394d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fdfb7039660"/>
        <function-ref name="get" scoped="" ref="0x7fdfb70397f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fdfb7039980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fdfb7037020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb7039b10"/>
        <function-ref name="led0On" scoped="" ref="0x7fdfb7039ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7fdfb7039e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Control" ref="0x7fdfb6f9d6e0" loc="18:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fdfb6f9d6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fdfb6f9da60"/>
        <function-ref name="stopDone" scoped="" ref="0x7fdfb6f9dbf0"/>
        <function-ref name="start" scoped="" ref="0x7fdfb6f9dd80"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb6fac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fdfb6fad1e0" loc="16:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fdfb6fad1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fdfb6fad560"/>
        <function-ref name="source" scoped="" ref="0x7fdfb6fad6f0"/>
        <function-ref name="address" scoped="" ref="0x7fdfb6fad880"/>
        <function-ref name="destination" scoped="" ref="0x7fdfb6fada10"/>
        <function-ref name="setSource" scoped="" ref="0x7fdfb6fadba0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fdfb6fadd30"/>
        <function-ref name="type" scoped="" ref="0x7fdfb7014020"/>
        <function-ref name="setType" scoped="" ref="0x7fdfb70141b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fdfb7014340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fdfb70144d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fdfb7014660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fdfb702c020" loc="11:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb702c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb7020630"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb702ba60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdfb7021920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdfb70214a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fdfb701f020"/>
        <function-ref name="gett0" scoped="" ref="0x7fdfb7020ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb7021020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdfb702cc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdfb7020020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdfb702b110"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb702b5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fdfb6f798d0" loc="58:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fdfb6f798d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6f79c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fdfb6f7e3f0" loc="57:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fdfb6f7e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fdfb6f7e770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb6f7b790" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb6f7b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6f7bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fdfb6f73830" loc="6:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fdfb6f73830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6f73bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb6f779c0" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb6f779c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6f77d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fdfb6f73150" loc="5:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fdfb6f73150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6f734d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fdfb6f72020" loc="7:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fdfb6f72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6f723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb6f76c80" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb6f76c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6f6c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fdfb6f56020" loc="39:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fdfb6f56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6f563a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fdfb6f4c6c0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fdfb6f4c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fdfb6f51660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fdfb6f4cbd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fdfb6f4cd60"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fdfb6f51020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fdfb6f4ca40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fdfb6f511b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fdfb6f51340"/>
        <function-ref name="initClocks" scoped="" ref="0x7fdfb6f514d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb6f53110" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb6f53110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6f53490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fdfb6f3c3d0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fdfb6f3c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fdfb6f3b340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fdfb6f3c8e0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fdfb6f3ca70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fdfb6f3cc00"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fdfb6f3c750"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fdfb6f3cd90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fdfb6f3b020"/>
        <function-ref name="initClocks" scoped="" ref="0x7fdfb6f3b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fdfb6f3b680" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fdfb6f3b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fdfb6f3ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb6f3dcb0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb6f3dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6f3c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fdfb6ef75a0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fdfb6ef75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6ef7920"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6ef7ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6ef7c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6ef7dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6ef6020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6ef61b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6ef6340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6ef64d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6ef6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fdfb6ee5020" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fdfb6ee5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6ee53a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6ee5530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6ee56c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6ee5850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6ee59e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6ee5b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6ee5d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6ee4020"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6ee41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fdfb6eee700" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fdfb6eee700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6eeea80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6eeec10"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6eeeda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6ee8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6ee81b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6ee8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fdfb6ed3a20" loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fdfb6ed3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6ed3da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6ed2020"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6ed21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6ed2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6ed24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6ed2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fdfb6ef5aa0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fdfb6ef5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6ef5e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6ef4020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6ef41b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6ef4340"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6ef44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fdfb6ed9020" loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fdfb6ed9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6ed93a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6ed9530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6ed96c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6ed9850"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6ed99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fdfb6ed0a20" loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fdfb6ed0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6ed0da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6ece020"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6ece1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6ece340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6ece4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6ece660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fdfb6ee05a0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fdfb6ee05a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6ee0920"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6ee0ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6ee0c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6ee0dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6edf020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6edf1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6edf340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6edf4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6edf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fdfb6ef9b10" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fdfb6ef9b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6f00020"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6f001b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6f00340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6f004d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6f00660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6f007f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6f00980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6f00b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6f00ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fdfb6ed5a20" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fdfb6ed5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6ed5da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6ed4020"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6ed41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6ed4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6ed44d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6ed4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fdfb6edb3e0" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fdfb6edb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6edb760"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6edb8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6edba80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6edbc10"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6edbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fdfb6ee45a0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fdfb6ee45a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6ee4a20"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6ee4bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6ee4d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6ee3020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6ee31b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6ee3340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6ee34d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6ee3660"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6ee37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fdfb6ee8700" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fdfb6ee8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6ee8a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6ee8c10"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6ee8da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6ee7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6ee71b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6ee7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fdfb6ed2a20" loc="69:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fdfb6ed2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6ed2da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6ed1020"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6ed11b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6ed1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6ed14d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6ed1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fdfb6ee3be0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fdfb6ee3be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6ee2020"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6ee21b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6ee2340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6ee24d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6ee2660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6ee27f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6ee2980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6ee2b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6ee2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fdfb6ef4890" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fdfb6ef4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6ef4c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6ef4da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6eef020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6eef1b0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6eef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fdfb6f08060" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fdfb6f08060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6f083e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb6f08570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6f08700"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6f08890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6f08a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6f08bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb6f08d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6f07020"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6f071b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb6f07340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb6f074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fdfb6ed9da0" loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fdfb6ed9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6ed8180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6ed8310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6ed84a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6ed8630"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6ed87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fdfb6eff0c0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fdfb6eff0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6eff440"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6eff5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6eff760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6eff8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6effa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6effc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6effda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6ef7020"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6ef71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fdfb6edfa50" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fdfb6edfa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6edfdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6ede020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6ede1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6ede340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6ede4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6ede660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6ede7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6ede980"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6edeb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fdfb6ee96d0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fdfb6ee96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6ee9a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6ee9be0"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6ee9d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6eee020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6eee1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6eee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fdfb6ed4a20" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fdfb6ed4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6ed4da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6ed3020"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6ed31b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6ed3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6ed34d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6ed3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fdfb6ef1cf0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fdfb6ef1cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6ef50a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6ef5230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6ef53c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6ef5550"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6ef56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fdfb6eda1f0" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fdfb6eda1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6eda570"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6eda700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6eda890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6edaa20"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6edabb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fdfb6ed1a20" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fdfb6ed1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6ed1da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6ed0020"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6ed01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6ed0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6ed04d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6ed0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fdfb6ee10c0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fdfb6ee10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6ee1440"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6ee15d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6ee1760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6ee18f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6ee1a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6ee1c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6ee1da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6ee0020"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6ee01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fdfb6ee76c0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fdfb6ee76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6ee7a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb6ee7bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6ee7d60"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6ee6020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6ee61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6ee6340"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb6ee64d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6ee6660"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6ee67f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb6ee6980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb6ee6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fdfb6ed8b80" loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fdfb6ed8b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6ed7020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6ed71b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6ed7340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6ed74d0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6ed7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fdfb6ed6a20" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fdfb6ed6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6ed6da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6ed5020"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6ed51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6ed5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6ed54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6ed5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fdfb6ed7a20" loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fdfb6ed7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6ed6020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6ed61b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6ed6340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6ed64d0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6ed6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fdfb6edc570" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fdfb6edc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6edc8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6edca80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6edcc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6edcda0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6edb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fdfb6edd020" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fdfb6edd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6edd3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6edd530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6edd6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6edd850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6edd9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6eddb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6eddd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6edc020"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6edc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fdfb6e952f0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fdfb6e952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e95670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fdfb6e97c20" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fdfb6e97c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e95020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fdfb6e95940" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fdfb6e95940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e95cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fdfb6e975b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fdfb6e975b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e97950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fdfb6e99c80" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb6e99c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6e980a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb6e98230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e983c0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6e98550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e986e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e98870"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb6e98a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e98b90"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6e98d20"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb6e97020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb6e971b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fdfb6e8e2f0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fdfb6e8e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e8e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fdfb6e8fc20" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fdfb6e8fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e8e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fdfb6e8e940" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fdfb6e8e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e8ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fdfb6e8f5b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fdfb6e8f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e8f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fdfb6e91c80" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb6e91c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6e900a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb6e90230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e903c0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6e90550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e906e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e90870"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb6e90a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e90b90"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6e90d20"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb6e8f020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb6e8f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fdfb6e42a90" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fdfb6e42a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e42e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6e41020"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6e411b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e41340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e414d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6e41660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fdfb6e8a9d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fdfb6e8a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6e8ad50"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6e43020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e431b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6e43340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6e434d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e43660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6e437f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6e43980"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6e43b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fdfb6e3f020" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fdfb6e3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e3f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fdfb6e43de0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fdfb6e43de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e42180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6e42310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6e424a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6e42630"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e427c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fdfb6e41930" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb6e41930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6e41cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb6e41e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e40020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6e401b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e40340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e404d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb6e40660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e407f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6e40980"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb6e40b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb6e40ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fdfb6e39160" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fdfb6e39160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e394e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6e39670"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6e39800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e39990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e39b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6e39cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fdfb6e3c020" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fdfb6e3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6e3c3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6e3c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e3c6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6e3c850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6e3c9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e3cb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6e3cd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6e3a020"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6e3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fdfb6e377a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fdfb6e377a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e37b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fdfb6e3a480" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fdfb6e3a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e3a800"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6e3a990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6e3ab20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6e3acb0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e3ae40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fdfb6e38020" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb6e38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6e383a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb6e38530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e386c0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6e38850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e389e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e38b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb6e38d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e37020"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6e371b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb6e37340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb6e374d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fdfb6e327a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fdfb6e327a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e32b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6e32cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6e32e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e31020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e311b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6e31340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fdfb6e346d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fdfb6e346d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6e34a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6e34be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e34d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6e33020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6e331b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e33340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6e334d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6e33660"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6e337f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fdfb6e30c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fdfb6e30c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fdfb6e33ac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fdfb6e33ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e33e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6e32020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6e321b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6e32340"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e324d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fdfb6e31610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb6e31610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6e31990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb6e31b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e31cb0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6e31e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e30020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e301b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb6e30340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e304d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6e30660"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb6e307f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb6e30980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fdfb6e2bcb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fdfb6e2bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e290a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6e29230"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6e293c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e29550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e296e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6e29870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fdfb6e2db30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fdfb6e2db30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6e2c020"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6e2c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e2c340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6e2c4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6e2c660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e2c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6e2c980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6e2cb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6e2cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fdfb6e272f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fdfb6e272f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e27670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fdfb6e2b020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fdfb6e2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e2b3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6e2b530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6e2b6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6e2b850"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e2b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fdfb6e29b40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb6e29b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6e28020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb6e281b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e28340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6e284d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e28660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e287f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb6e28980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e28b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6e28ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb6e28e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb6e27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fdfb6e222f0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fdfb6e222f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e22670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6e22800"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6e22990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e22b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e22cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6e22e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fdfb6e24220" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fdfb6e24220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6e245a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6e24730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e248c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6e24a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6e24be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e24d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6e23020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6e231b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6e23340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fdfb6e207a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fdfb6e207a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e20b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fdfb6e23610" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fdfb6e23610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e23990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6e23b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6e23cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6e23e40"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e22020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fdfb6e21160" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb6e21160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6e214e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb6e21670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e21800"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6e21990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e21b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e21cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb6e21e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e20020"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6e201b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb6e20340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb6e204d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fdfb6e1a7a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fdfb6e1a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e1ab20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6e1acb0"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6e1ae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e19020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e191b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6e19340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fdfb6e1d6d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fdfb6e1d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6e1da50"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6e1dbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e1dd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6e1c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6e1c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e1c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6e1c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6e1c660"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6e1c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fdfb6e18c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fdfb6e18c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e17020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fdfb6e1cac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fdfb6e1cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e1ce40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6e1a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6e1a1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6e1a340"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e1a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fdfb6e19610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb6e19610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6e19990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb6e19b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e19cb0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6e19e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e18020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e181b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb6e18340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e184d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6e18660"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb6e187f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb6e18980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fdfb6e13cb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fdfb6e13cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e120a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6e12230"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6e123c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e12550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e126e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6e12870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fdfb6e15b30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fdfb6e15b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6e14020"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6e141b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e14340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6e144d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6e14660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e147f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6e14980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6e14b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6e14ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fdfb6e102f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fdfb6e102f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e10670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fdfb6e13020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fdfb6e13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e133a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6e13530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6e136c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6e13850"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e139e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fdfb6e12b40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb6e12b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6e11020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb6e111b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e11340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6e114d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e11660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e117f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb6e11980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e11b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6e11ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb6e11e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb6e10020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fdfb6e0b2f0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fdfb6e0b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e0b670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6e0b800"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6e0b990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e0bb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e0bcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6e0be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fdfb6e0d220" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fdfb6e0d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6e0d5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6e0d730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e0d8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6e0da50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6e0dbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e0dd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6e0c020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6e0c1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6e0c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fdfb6e087a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fdfb6e087a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e08b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fdfb6e0c610" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fdfb6e0c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e0c990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6e0cb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6e0ccb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6e0ce40"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e0b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fdfb6e09160" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb6e09160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6e094e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb6e09670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e09800"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6e09990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e09b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e09cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb6e09e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e08020"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6e081b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb6e08340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb6e084d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fdfb6e037a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fdfb6e037a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e03b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6e03cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6e03e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e02020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e021b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6e02340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fdfb6e056d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fdfb6e056d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6e05a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6e05be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e05d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6e04020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6e041b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e04340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6e044d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6e04660"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6e047f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fdfb6e01c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fdfb6e01c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fdfb6e04ac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fdfb6e04ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6e04e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6e03020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6e031b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6e03340"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6e034d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fdfb6e02610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb6e02610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6e02990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb6e02b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6e02cb0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6e02e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6e01020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6e011b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb6e01340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6e014d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6e01660"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb6e017f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb6e01980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fdfb6dfccb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fdfb6dfccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6dfa0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fdfb6dfa230"/>
        <function-ref name="captured" scoped="" ref="0x7fdfb6dfa3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6dfa550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6dfa6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fdfb6dfa870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fdfb6dfeb30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fdfb6dfeb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6dfd020"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6dfd1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6dfd340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6dfd4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6dfd660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6dfd7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6dfd980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6dfdb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6dfdca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fdfb6df82f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fdfb6df82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6df8670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fdfb6dfc020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fdfb6dfc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6dfc3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6dfc530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6dfc6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6dfc850"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6dfc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fdfb6dfab40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb6dfab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6df9020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb6df91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6df9340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6df94d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6df9660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6df97f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb6df9980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6df9b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6df9ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb6df9e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb6df8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fdfb6df2240" loc="7:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fdfb6df2240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6df25c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fdfb6df6aa0" loc="4:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fdfb6df6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6df6e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fdfb6df3260" loc="5:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fdfb6df3260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6df35e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fdfb6df39f0" loc="6:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fdfb6df39f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6df3d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fdfb71554c0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fdfb71554c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fdfb7155840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fdfb74693b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fdfb74693b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fdfb7469730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fdfb74698c0"/>
        <function-ref name="sleep" scoped="" ref="0x7fdfb7469a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fdfb7291be0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fdfb7291be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fdfb73cd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7fdfb6f54b50" loc="39:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fdfb6f54b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fdfb6dbeb10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fdfb6dbe1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fdfb6dbe340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fdfb6dbe4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fdfb6dbe020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fdfb6dbe660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fdfb6dbe7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7fdfb6dbe980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fdfb6dafdc0" loc="60:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fdfb6dafdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6dae180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fdfb6dbf590" loc="57:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fdfb6dbf590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fdfb6dbf910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fdfb6daf6c0" loc="59:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fdfb6daf6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6dafa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fdfb6dbfc00" loc="58:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fdfb6dbfc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6daf020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fdfb6daf1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fdfb6daf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fdfb75414f0" loc="48:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb75414f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb7541870"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb7541a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fdfb74d23a0" loc="47:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fdfb74d23a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb74d2720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fdfb74d28b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fdfb74d2a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fdfb707b040" loc="56:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fdfb707b040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb707b3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb707b550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fdfb7077490" loc="57:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fdfb7077490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fdfb7077810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fdfb70779a0"/>
        <function-ref name="sleep" scoped="" ref="0x7fdfb7077b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fdfb707d140" loc="55:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fdfb707d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb707d4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fdfb707d650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fdfb707d7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fdfb6f7c5a0" loc="46:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fdfb6f7c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fdfb6f7c920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fdfb6f7cab0"/>
        <function-ref name="led1On" scoped="" ref="0x7fdfb6f7cc40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fdfb6f7cdd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fdfb6da3020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6da31b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fdfb6da3340"/>
        <function-ref name="led2Off" scoped="" ref="0x7fdfb6da3980"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6da34d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fdfb6da3660"/>
        <function-ref name="led2On" scoped="" ref="0x7fdfb6da37f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fdfb6d977b0" loc="50:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fdfb6d977b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d97b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d97cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d97e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d9d020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d9d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d9d340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d9d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d9d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb6da28e0" loc="46:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb6da28e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6da2c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fdfb6d9d980" loc="51:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fdfb6d9d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d9dd00"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d9c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d9c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d9c340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d9c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d9c660"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d9c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d9c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fdfb6d9f020" loc="47:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fdfb6d9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fdfb6d9f3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fdfb6d9f530"/>
        <function-ref name="led1On" scoped="" ref="0x7fdfb6d9f6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fdfb6d9f850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fdfb6d9f9e0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d9fb70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fdfb6d9fd00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fdfb6d9e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d9e020"/>
        <function-ref name="led0On" scoped="" ref="0x7fdfb6d9e1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fdfb6d9e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fdfb6d9cca0" loc="52:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fdfb6d9cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d960a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d96230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d963c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d96550"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d966e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d96870"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d96a00"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d96b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fdfb6d7a360" loc="41:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fdfb6d7a360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d7a6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d7a870"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d7aa00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d7ab90"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d7ad20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d79020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d791b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d79340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fdfb6d796a0" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fdfb6d796a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d79a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d79bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d79d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d78020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d781b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d78340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d784d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d78660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fdfb6d77c40" loc="44:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb6d77c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6d76020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fdfb6d789c0" loc="43:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fdfb6d789c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d78d40"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d77020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d77340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d77660"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d777f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d77980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fdfb6d61020" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fdfb6d61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d613a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d61530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d616c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d61850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d619e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d61b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d61d00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d60020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d601b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d60340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d604d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d60660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d607f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d60a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d60c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fdfb6d4c020" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fdfb6d4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d4c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d4c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d4c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d4c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d4c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d4cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d4cd00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d4b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d4b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d4b340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d4b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d4b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d4b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d4ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d4bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fdfb6d03560" loc="145:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fdfb6d03560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d038e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d03a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d03c00"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d03d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d02020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d021b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d02340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d024d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d02660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d027f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d02980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d02b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d02ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d01020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fdfb6cde570" loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fdfb6cde570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6cde8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6cdea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6cdec10"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6cdeda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6cdd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6cdd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6cdd340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6cdd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6cdd660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6cdd7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6cdd980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6cddb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6cddca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cdc020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cdc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fdfb6d01580" loc="146:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fdfb6d01580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d01900"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d01a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d01c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d01db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d00020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d001b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d00340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d004d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d00660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d007f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d00980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d00b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d00ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cff020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fdfb6d48020" loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fdfb6d48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d483a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d48530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d486c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d48850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d489e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d48b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d48d00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d47020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d471b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d47340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d474d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d47660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d477f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d47a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d47c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fdfb6d34200" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fdfb6d34200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d34580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d34710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d348a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d34a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d34bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d34d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d33020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d331b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d33340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d334d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d33660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d337f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d33980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d33c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d33da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fdfb6d1f200" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fdfb6d1f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d1f580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d1f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d1f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d1fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d1fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d1fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d1e020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d1e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d1e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d1e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d1e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d1e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d1e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d1ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d1eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fdfb6d0f200" loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fdfb6d0f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d0f580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d0f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d0f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d0fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d0fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d0fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d0e020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d0e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d0e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d0e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d0e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d0e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d0e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d0ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d0eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fdfb6cfb580" loc="149:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fdfb6cfb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6cfb900"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6cfba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6cfbc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6cfbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6cfa020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6cfa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6cfa340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6cfa4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6cfa660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6cfa7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6cfa980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6cfab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6cfaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cf9020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cf91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fdfb6cea570" loc="159:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fdfb6cea570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6cea8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6ceaa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6ceac10"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6ceada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6ce9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6ce91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6ce9340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6ce94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6ce9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6ce97f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6ce9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6ce9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6ce9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6ce8020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6ce81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fdfb6cd6580" loc="171:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fdfb6cd6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6cd6900"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6cd6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6cd6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6cd6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6cd5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6cd51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6cd5340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6cd54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6cd5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6cd57f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6cd5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6cd5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6cd5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cd4020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cd41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fdfb6d5b020" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fdfb6d5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d5b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d5b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d5b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d5b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d5b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d5bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d5bd00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d5a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d5a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d5a340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d5a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d5a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d5a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d5aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d5ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fdfb6cf9580" loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fdfb6cf9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6cf9900"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6cf9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6cf9c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6cf9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6cf8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6cf81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6cf8340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6cf84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6cf8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6cf87f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6cf8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6cf8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6cf8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cf7020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cf71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fdfb6d57020" loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fdfb6d57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d573a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d57530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d576c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d57850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d579e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d57b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d57d00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d56020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d561b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d56340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d564d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d56660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d567f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d56a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d56c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fdfb6d42020" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fdfb6d42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d423a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d42530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d426c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d42850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d429e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d42b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d42d00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d41020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d411b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d41340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d414d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d41660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d417f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d41a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d41c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fdfb6d2e200" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fdfb6d2e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d2e580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d2e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d2e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d2ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d2ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d2ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d2d020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d2d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d2d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d2d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d2d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d2d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d2d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d2dc10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d2dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fdfb6d19200" loc="100:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fdfb6d19200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d19580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d19710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d198a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d19a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d19bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d19d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d18020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d181b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d18340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d184d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d18660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d187f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d18980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d18c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d18da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fdfb6d09200" loc="111:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fdfb6d09200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d09580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d09710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d098a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d09a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d09bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d09d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d08020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d081b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d08340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d084d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d08660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d087f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d08980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d08c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d08da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fdfb6d65020" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fdfb6d65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d653a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d65530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d656c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d65850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d659e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d65b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d65d00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d64020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d641b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d64340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d644d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d64660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d647f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d64a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d64c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fdfb6d51020" loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fdfb6d51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d514a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d51630"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d517c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d51950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d51ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d51c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d51e00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d50020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d501b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d50340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d504d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d50660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d507f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d50a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d50c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fdfb6d3c020" loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fdfb6d3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d3c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d3c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d3c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d3c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d3c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d3cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d3cd00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d3b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d3b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d3b340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d3b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d3b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d3b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d3ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d3bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fdfb6d05580" loc="144:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fdfb6d05580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d05900"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d05a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d05c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d05db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d04020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d041b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d04340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d044d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d04660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d047f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d04980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d04b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d04ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d03020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fdfb6ce4570" loc="162:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fdfb6ce4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6ce48f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6ce4a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6ce4c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6ce4da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6ce3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6ce31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6ce3340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6ce34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6ce3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6ce37f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6ce3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6ce3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6ce3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6ce2020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6ce21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fdfb6cd8570" loc="169:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fdfb6cd8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6cd88f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6cd8a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6cd8c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6cd8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6cd7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6cd71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6cd7340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6cd74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6cd7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6cd77f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6cd7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6cd7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6cd7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cd6020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cd61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fdfb6cf1580" loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fdfb6cf1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6cf1900"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6cf1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6cf1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6cf1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6cef020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6cef1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6cef340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6cef4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6cef660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6cef7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6cef980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6cefb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6cefca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cee020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fdfb6d38020" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fdfb6d38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d385a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d38730"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d388c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d38a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d38be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d38d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d37020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d371b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d37340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d374d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d37660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d377f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d37980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d37c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d37da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fdfb6d24200" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fdfb6d24200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d24580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d24710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d248a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d24a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d24bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d24d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d23020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d231b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d23340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d234d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d23660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d237f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d23980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d23c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d23da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fdfb6d13200" loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fdfb6d13200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d13580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d13710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d138a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d13a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d13bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d13d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d12020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d121b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d12340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d124d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d12660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d127f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d12980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d12c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d12da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fdfb6ce2570" loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fdfb6ce2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6ce28f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6ce2a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6ce2c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6ce2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6ce1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6ce11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6ce1340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6ce14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6ce1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6ce17f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6ce1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6ce1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6ce1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6ce0020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6ce01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fdfb6cf7570" loc="152:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fdfb6cf7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6cf78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6cf7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6cf7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6cf7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6cf6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6cf61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6cf6340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6cf64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6cf6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6cf67f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6cf6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6cf6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6cf6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cf5020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cf51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fdfb6d5f020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fdfb6d5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d5f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d5f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d5f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d5f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d5f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d5fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d5fd00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d5e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d5e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d5e340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d5e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d5e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d5e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d5ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d5ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fdfb6d4a020" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fdfb6d4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d4a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d4a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d4a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d4a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d4a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d4ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d4ad00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d49020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d491b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d49340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d494d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d49660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d497f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d49a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d49c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fdfb6d17200" loc="104:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fdfb6d17200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d17580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d17710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d178a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d17a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d17bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d17d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d16020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d161b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d16340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d164d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d16660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d167f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d16980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d16c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d16da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fdfb6d46020" loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fdfb6d46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d463a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d46530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d466c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d46850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d469e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d46b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d46d00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d45020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d451b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d45340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d454d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d45660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d457f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d45a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d45c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fdfb6d32200" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fdfb6d32200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d32580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d32710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d328a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d32a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d32bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d32d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d31020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d311b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d31340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d314d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d31660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d317f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d31980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d31c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d31da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fdfb6d1d200" loc="98:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fdfb6d1d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d1d580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d1d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d1d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d1da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d1dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d1dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d1c020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d1c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d1c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d1c4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d1c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d1c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d1c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d1cc10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d1cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fdfb6d0d200" loc="109:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fdfb6d0d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d0d580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d0d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d0d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d0da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d0dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d0dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d0c020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d0c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d0c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d0c4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d0c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d0c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d0c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d0cc10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d0cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fdfb6cf3580" loc="154:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fdfb6cf3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6cf3900"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6cf3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6cf3c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6cf3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6cf2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6cf21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6cf2340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6cf24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6cf2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6cf27f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6cf2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6cf2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6cf2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cf1020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cf11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fdfb6d72020" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fdfb6d72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d723a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d72530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d726c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d72850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d729e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d72b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d72d00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d71020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d711b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d71340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d714d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d71660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d717f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d71a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d71c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fdfb6d55020" loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fdfb6d55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d553a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d55530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d556c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d55850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d559e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d55b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d55d00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d54020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d541b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d54340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d544d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d54660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d547f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d54a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d54c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fdfb6d40020" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fdfb6d40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d403a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d40530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d406c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d40850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d409e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d40b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d40d00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d3f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d3f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d3f340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d3f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d3f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d3f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d3fa80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d3fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fdfb6d2c200" loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fdfb6d2c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d2c580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d2c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d2c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d2ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d2cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d2cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d2b020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d2b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d2b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d2b4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d2b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d2b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d2b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d2bc10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d2bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fdfb6cee580" loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fdfb6cee580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6cee900"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6ceea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6ceec20"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6ceedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6ced020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6ced1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6ced340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6ced4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6ced660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6ced7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6ced980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6cedb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6cedca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cec020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fdfb6ce8570" loc="160:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fdfb6ce8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6ce88f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6ce8a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6ce8c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6ce8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6ce7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6ce71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6ce7340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6ce74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6ce7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6ce77f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6ce7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6ce7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6ce7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6ce6020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6ce61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fdfb6cdc570" loc="166:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fdfb6cdc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6cdc8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6cdca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6cdcc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6cdcda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6cdb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6cdb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6cdb340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6cdb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6cdb660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6cdb7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6cdb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6cdbb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6cdbca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cda020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cda1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fdfb6d28200" loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fdfb6d28200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d28580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d28710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d288a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d28a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d28bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d28d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d27020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d271b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d27340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d274d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d27660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d277f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d27980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d27c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d27da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fdfb6cec580" loc="157:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fdfb6cec580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6cec900"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6ceca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6cecc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6cecdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6ceb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6ceb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6ceb340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6ceb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6ceb660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6ceb7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6ceb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6cebb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6cebca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cea020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fdfb6d63020" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fdfb6d63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d633a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d63530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d636c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d63850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d639e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d63b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d63d00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d62020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d621b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d62340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d624d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d62660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d627f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d62a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d62c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fdfb6d4e020" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fdfb6d4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d4e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d4e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d4e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d4e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d4e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d4eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d4ed00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d4d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d4d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d4d340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d4d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d4d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d4d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d4da80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d4dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fdfb6d3a020" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fdfb6d3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d3a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d3a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d3a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d3a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d3a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d3ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d3ad00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d39020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d391b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d39340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d394d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d39660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d397f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d39a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d39c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fdfb6cf5580" loc="153:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fdfb6cf5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6cf5900"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6cf5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6cf5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6cf5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6cf4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6cf41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6cf4340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6cf44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6cf4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6cf47f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6cf4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6cf4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6cf4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cf3020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cf31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fdfb6ce0570" loc="164:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fdfb6ce0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6ce08f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6ce0a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6ce0c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6ce0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6cdf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6cdf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6cdf340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6cdf4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6cdf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6cdf7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6cdf980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6cdfb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6cdfca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cde020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cde1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fdfb6d36200" loc="83:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fdfb6d36200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d36580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d36710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d368a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d36a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d36bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d36d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d35020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d351b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d35340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d354d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d35660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d357f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d35980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d35c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d35da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fdfb6d22200" loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fdfb6d22200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d22580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d22710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d228a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d22a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d22bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d22d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d21020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d211b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d21340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d214d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d21660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d217f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d21980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d21c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d21da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fdfb6d11200" loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fdfb6d11200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d11580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d11710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d118a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d11a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d11bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d11d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d10020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d101b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d10340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d104d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d10660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d107f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d10980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d10c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d10da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fdfb6d5d020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fdfb6d5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d5d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d5d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d5d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d5d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d5d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d5db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d5dd00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d5c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d5c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d5c340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d5c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d5c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d5c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d5ca80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d5cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fdfb6d15200" loc="105:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fdfb6d15200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d15580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d15710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d158a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d15a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d15bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d15d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d14020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d141b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d14340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d144d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d14660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d147f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d14980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d14c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d14da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fdfb6d59020" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fdfb6d59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d593a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d59530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d596c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d59850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d599e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d59b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d59d00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d58020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d581b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d58340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d584d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d58660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d587f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d58a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d58c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fdfb6d44020" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fdfb6d44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d443a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d44530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d446c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d44850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d449e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d44b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d44d00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d43020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d431b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d43340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d434d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d43660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d437f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d43a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d43c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fdfb6d30200" loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fdfb6d30200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d30580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d30710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d308a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d30a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d30bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d30d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d2f020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d2f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d2f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d2f4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d2f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d2f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d2f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d2fc10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d2fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fdfb6d1b200" loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fdfb6d1b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d1b580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d1b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d1b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d1ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d1bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d1bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d1a020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d1a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d1a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d1a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d1a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d1a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d1a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d1ac10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d1ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fdfb6d0b200" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fdfb6d0b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d0b580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d0b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d0b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d0ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d0bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d0bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d0a020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d0a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d0a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d0a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d0a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d0a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d0a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d0ac10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d0ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fdfb6d67020" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fdfb6d67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d673a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d67530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d676c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d67850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d679e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d67b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d67d00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d66020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d661b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d66340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d664d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d66660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d667f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d66a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d66c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fdfb6d53020" loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fdfb6d53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d533a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d53530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d536c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d53850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d539e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d53b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d53d00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d52020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d52340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d52660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d527f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d52a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d52c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fdfb6d3e020" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fdfb6d3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d3e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d3e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d3e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d3e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d3e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d3eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d3ed00"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d3d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d3d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d3d340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d3d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d3d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d3d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d3da80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d3dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fdfb6d2a200" loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fdfb6d2a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d2a580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d2a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d2a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d2aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d2abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d2ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d29020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d291b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d29340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d294d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d29660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d297f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d29980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d29c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d29da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fdfb6cfd560" loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fdfb6cfd560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6cfd8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6cfda70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6cfdc00"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6cfdd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6cfc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6cfc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6cfc340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6cfc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6cfc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6cfc7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6cfc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6cfcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6cfcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cfb020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cfb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fdfb6ce6570" loc="161:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fdfb6ce6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6ce68f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6ce6a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6ce6c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6ce6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6ce5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6ce51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6ce5340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6ce54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6ce5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6ce57f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6ce5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6ce5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6ce5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6ce4020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6ce41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fdfb6cff580" loc="147:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fdfb6cff580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6cff900"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6cffa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6cffc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6cffdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6cfe020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6cfe1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6cfe340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6cfe4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6cfe660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6cfe7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6cfe980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6cfeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6cfeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cfd020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cfd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fdfb6d26200" loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fdfb6d26200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d26580"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d26710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d268a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d26a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d26bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d26d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d25020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d251b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d25340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d254d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d25660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d257f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d25980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d25c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d25da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fdfb6cda570" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fdfb6cda570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6cda8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6cdaa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6cdac10"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6cdada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6cd9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6cd91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6cd9340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6cd94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6cd9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6cd97f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6cd9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6cd9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6cd9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cd8020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cd81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fdfb6cd4580" loc="172:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fdfb6cd4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6cd4900"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6cd4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6cd4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6cd4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6cd3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6cd31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6cd3340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6cd34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6cd3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6cd37f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6cd3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6cd3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6cd3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6cd2020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6cd21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fdfb6d071f0" loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fdfb6d071f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6d07970"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6d07b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6d07c90"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6d07e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6d06020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6d061b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6d06340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6d064d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6d06660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6d067f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6d06980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6d06b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6d06ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6d05020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6d051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6ca96d0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6ca96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6ca9a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6ca9be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6ca9d70"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6ca8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6ca81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6ca8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6ca84d0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6ca8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6ca87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6ca8980"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6ca8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6ca8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6ca8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6ca7120"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6ca72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6ca4100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6ca4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6ca4480"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6ca4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6ca47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6ca4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6ca4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6ca4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6ca4de0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6ca3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6ca31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6ca3340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6ca34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6ca3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6ca37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6ca3a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6ca3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c9fd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c9fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c9e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c9e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c9e400"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c9e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c9e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c9e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c9ea40"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c9ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c9ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c9d020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c9d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c9d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c9d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c9d760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c9d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c9a740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c9a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c9aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c9ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c9ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c99020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c991b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c99340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c994d0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c99660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c997f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c99980"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c99b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c99ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c99e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c98120"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c982b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c95100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c95100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c95480"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c95610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c957a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c95930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c95ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c95c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c95de0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c94020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c941b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c94340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c944d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c94660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c947f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c94a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c94c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c91d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c91d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c900e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c90270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c90400"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c90590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c90720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c908b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c90a40"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c90bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c90d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c8f020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c8f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c8f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c8f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c8f760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c8f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c8c740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c8c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c8cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c8cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c8cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c8b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c8b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c8b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c8b4d0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c8b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c8b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c8b980"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c8bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c8bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c8be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c8a120"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c8a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c87100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c87100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c87480"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c87610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c877a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c87930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c87ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c87c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c87de0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c86020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c861b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c86340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c864d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c86660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c867f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c86a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c86c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c83d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c83d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c820e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c82270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c82400"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c82590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c82720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c828b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c82a40"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c82bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c82d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c81020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c811b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c81340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c814d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c81760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c818f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c7e740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c7e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c7eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c7ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c7ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c7c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c7c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c7c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c7c4d0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c7c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c7c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c7c980"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c7cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c7cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c7ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c7b120"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c7b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c78100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c78100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c78480"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c78610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c787a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c78930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c78ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c78c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c78de0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c77020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c771b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c77340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c774d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c77660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c777f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c77a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c77c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c74d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c74d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c730e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c73270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c73400"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c73590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c73720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c738b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c73a40"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c73bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c73d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c72020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c721b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c72340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c724d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c72760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c728f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c6f860" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c6f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c6fbe0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c6fd70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c6e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c6e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c6e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c6e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c6e660"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c6e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c6e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c6eb10"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c6eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c6ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c6d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c6d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c6d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c6a270" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c6a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c6a5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c6a780"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c6a910"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c6aaa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c6ac30"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c6adc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c69020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c691b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c69340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c694d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c69660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c697f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c69980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c69c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c69da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c66d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c66d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c650e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c65270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c65400"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c65590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c65720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c658b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c65a40"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c65bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c65d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c64020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c641b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c64340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c644d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c64760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c648f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c61740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c61740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c61ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c61c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c61de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c60020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c601b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c60340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c604d0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c60660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c607f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c60980"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c60b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c60ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c60e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c5f120"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c5f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c5c100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c5c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c5c480"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c5c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c5c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c5c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c5cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c5cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c5cde0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c5b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c5b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c5b340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c5b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c5b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c5b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c5ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c5bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c58d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c58d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c560e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c56270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c56400"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c56590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c56720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c568b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c56a40"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c56bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c56d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c55020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c551b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c55340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c554d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c55760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c558f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c52740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c52740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c52ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c52c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c52de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c51020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c511b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c51340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c514d0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c51660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c517f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c51980"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c51b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c51ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c51e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c50120"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c502b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c4d100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c4d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c4d480"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c4d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c4d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c4d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c4dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c4dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c4dde0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c4c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c4c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c4c340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c4c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c4c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c4c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c4ca80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c4cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c49d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c49d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c480e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c48270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c48400"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c48590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c48720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c488b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c48a40"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c48bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c48d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c47020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c471b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c47340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c474d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c47760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c478f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c44740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c44740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c44ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c44c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c44de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c43020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c431b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c43340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c434d0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c43660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c437f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c43980"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c43b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c43ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c43e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c42120"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c422b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c3f100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c3f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c3f480"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c3f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c3f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c3f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c3fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c3fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c3fde0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c3e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c3e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c3e340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c3e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c3e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c3e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c3ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c3ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c3bd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c3bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c3a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c3a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c3a400"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c3a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c3a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c3a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c3aa40"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c3abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c3ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c39020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c391b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c39340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c394d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c39760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c398f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c36a60" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c36a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c36de0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c35020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c351b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c35340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c354d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c35660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c357f0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c35980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c35b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c35ca0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c35e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c34020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c341b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c34440"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c345d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c30460" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c30460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c307e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c30970"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c30b00"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c30c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c30e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c2f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c2f1b0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c2f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c2f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c2f660"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c2f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c2f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c2fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c2fda0"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c2ce00" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c2ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c2b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c2b350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c2b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c2b670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c2b800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c2b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c2bb20"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c2bcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c2be40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c2a020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c2a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c2a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c2a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c2a760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c2a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c27740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c27740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c27ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c27c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c27de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c26020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c261b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c26340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c264d0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c26660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c267f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c26980"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c26b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c26ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c26e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c25120"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c252b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c22100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c22100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c22480"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c22610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c227a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c22930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c22ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c22c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c22de0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c21020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c211b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c21340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c214d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c21660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c217f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c21a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c21c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c1ed10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c1ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c1d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c1d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c1d400"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c1d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c1d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c1d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c1da40"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c1dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c1dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c1c020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c1c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c1c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c1c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c1c760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c1c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c19740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c19740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c19ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c19c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c19de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c18020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c181b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c18340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c184d0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c18660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c187f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c18980"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c18b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c18ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c18e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c17120"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c172b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c14100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c14100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c14480"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c14610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c147a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c14930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c14ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c14c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c14de0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c13020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c131b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c13340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c134d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c13660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c137f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c13a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c13c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c10d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c10d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c0e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c0e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c0e400"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c0e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c0e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c0e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c0ea40"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c0ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c0ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c0d020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c0d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c0d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c0d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c0d760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c0d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c0a740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c0a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c0aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c0ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c0ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c09020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c091b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c09340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c094d0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c09660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c097f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c09980"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c09b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c09ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c09e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c08120"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c082b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c05100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c05100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c05480"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c05610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c057a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c05930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c05ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c05c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c05de0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c04020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c041b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6c04340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6c044d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6c04660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6c047f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6c04a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6c04c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6c01d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6c01d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6c000e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6c00270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6c00400"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6c00590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6c00720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6c008b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6c00a40"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6c00bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6c00d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6bff020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6bff1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6bff340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6bff4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6bff760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6bff8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6bfc740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6bfc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6bfcac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6bfcc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6bfcde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6bfb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6bfb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6bfb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6bfb4d0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6bfb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6bfb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6bfb980"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6bfbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6bfbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6bfbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6bfa120"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6bfa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6bf7100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6bf7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6bf7480"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6bf7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6bf77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6bf7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6bf7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6bf7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6bf7de0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6bf6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6bf61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6bf6340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6bf64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6bf6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6bf67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6bf6a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6bf6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6bf3d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6bf3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6bf20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6bf2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6bf2400"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6bf2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6bf2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6bf28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6bf2a40"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6bf2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6bf2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6bf1020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6bf11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6bf1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6bf14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6bf1760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6bf18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6bee740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6bee740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6beeac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6beec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6beede0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6bed020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6bed1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6bed340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6bed4d0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6bed660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6bed7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6bed980"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6bedb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6bedca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6bede30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6bec120"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6bec2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6be9100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6be9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6be9480"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6be9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6be97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6be9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6be9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6be9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6be9de0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6be7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6be71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6be7340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6be74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6be7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6be77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6be7a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6be7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6be4d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6be4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6be30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6be3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6be3400"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6be3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6be3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6be38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6be3a40"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6be3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6be3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6be2020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6be21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6be2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6be24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6be2760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6be28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6bdf740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6bdf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6bdfac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6bdfc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6bdfde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6bde020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6bde1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6bde340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6bde4d0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6bde660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6bde7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6bde980"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6bdeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6bdeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6bdee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6bdd120"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6bdd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6bda100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6bda100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6bda480"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6bda610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6bda7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6bda930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6bdaac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6bdac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6bdade0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6bd9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6bd91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6bd9340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6bd94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6bd9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6bd97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6bd9a80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6bd9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6bd6d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6bd6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6bd50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6bd5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6bd5400"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6bd5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6bd5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6bd58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6bd5a40"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6bd5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6bd5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6bd4020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6bd41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6bd4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6bd44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6bd4760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6bd48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6bd1740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6bd1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6bd1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6bd1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6bd1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6bd0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6bd01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6bd0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6bd04d0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6bd0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6bd07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6bd0980"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6bd0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6bd0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6bd0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6bcf120"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6bcf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6bcc100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6bcc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6bcc480"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6bcc610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6bcc7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6bcc930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6bccac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6bccc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6bccde0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6bcb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6bcb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6bcb340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6bcb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6bcb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6bcb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6bcba80"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6bcbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdfb6bc8d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fdfb6bc8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6bc70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6bc7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6bc7400"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6bc7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6bc7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6bc78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6bc7a40"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6bc7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6bc7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6bc6020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6bc61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6bc6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6bc64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6bc6760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6bc68f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fdfb6b4e2f0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fdfb6b4e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6b4e670"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6b4e800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6b4e990"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6b4eb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6b4ecb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6b4ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6b4d020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6b4d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6b4d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6b4d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6b4d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6b4d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6b4d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6b4dc10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6b4dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fdfb6b5f020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fdfb6b5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6b5f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6b5f530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6b5f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6b5f850"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6b5f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6b5fb70"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6b5fd00"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6b4e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fdfb6b4ade0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fdfb6b4ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6b49180"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6b49310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6b494a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6b49630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6b497c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6b49950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6b49ae0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6b49c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6b49e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6b48020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6b481b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6b48340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6b484d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6b48760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6b488f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fdfb6b4bb90" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fdfb6b4bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6b4a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6b4a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6b4a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6b4a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6b4a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6b4a7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6b4a980"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6b4ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fdfb6b45930" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fdfb6b45930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6b45cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6b45e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6b44020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6b441b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6b44340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6b444d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6b44660"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6b447f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6b44980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6b44b10"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6b44ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6b44e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6b43020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6b432b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6b43440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fdfb6b46710" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fdfb6b46710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6b46a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6b46c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6b46db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6b45020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6b451b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6b45340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6b454d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6b45660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fdfb6b37640" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SenseAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb6b37640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb6989c40"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb698a1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdfb6989020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdfb698aae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fdfb6987590"/>
        <function-ref name="gett0" scoped="" ref="0x7fdfb6987110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb698a660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdfb698b390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdfb6989630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdfb698b860"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb698bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fdfb6b2e610" loc="49:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fdfb6b2e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb6b2ac40"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6b2b1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdfb6b2a020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdfb6b2bae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fdfb6b29590"/>
        <function-ref name="gett0" scoped="" ref="0x7fdfb6b29110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb6b2b660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdfb6b2d390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdfb6b2a630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdfb6b2d860"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb6b2dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fdfb6b24610" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fdfb6b24610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb6b20c40"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6b221e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdfb6b20020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdfb6b22ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fdfb6b1f590"/>
        <function-ref name="gett0" scoped="" ref="0x7fdfb6b1f110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb6b22660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdfb6b23390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdfb6b20630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdfb6b23860"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb6b23d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fdfb6b1d1a0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fdfb6b1d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdfb6b1ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb6b27840" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb6b27840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6b27bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fdfb6a27020" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fdfb6a27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb6a25870"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6a26840"/>
        <function-ref name="startAt" scoped="" ref="0x7fdfb6a25220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb6a26d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fdfb6a25d30"/>
        <function-ref name="start" scoped="" ref="0x7fdfb6a27e30"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb6a26380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb6a28760" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb6a28760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6a28ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fdfb5944bd0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fdfb5944bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7041230"/>
            <typename><typedef-ref name="T32khz" ref="0x7fdfb70415a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb59404e0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb59424e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fdfb5942e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb59429a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fdfb59409a0"/>
        <function-ref name="start" scoped="" ref="0x7fdfb5943a80"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb5942020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb5944380" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb5944380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb5944700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fdfb592a0c0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb592a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb592a440"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb592a5d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb592a760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb592a8f0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb592aa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fdfb592d7b0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb592d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb592db30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb592dcc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb592de50"/>
        <function-ref name="get" scoped="" ref="0x7fdfb592c020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb592c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb592c340"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb592c4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb592c660"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb592c7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb592c980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb592cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fdfb592cda0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb592cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb592b180"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb592b310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb592b4a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb592b630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb592b7c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb592b950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb592bae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb592bc70"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb592be00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fdfb6af6210" loc="52:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb6af6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb6af6590"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb6af6720"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb6af68b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb6af6a40"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6af6bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fdfb6afec00" loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb6afec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6afa020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb6afa1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6afa340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6afa4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6afa660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6afa7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb6afa980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6afab10"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6afaca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb6afae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb6af9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fdfb6af98b0" loc="51:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb6af98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb6af9c30"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb6af9dc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6af8020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb6af81b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb6af8340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6af84d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb6af8660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb6af87f0"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb6af8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fdfb5921da0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb5921da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb5920180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb5920310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb59204a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb5920630"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb59207c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fdfb59244c0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb59244c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb5924840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb59249d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb5924b60"/>
        <function-ref name="get" scoped="" ref="0x7fdfb5924cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb5924e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb5922030"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb59221c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb5922350"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb59224e0"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb5922670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb5922800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fdfb5927340" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fdfb5927340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7041230"/>
            <typename><typedef-ref name="T32khz" ref="0x7fdfb70415a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb5925ba0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb5926b80"/>
        <function-ref name="startAt" scoped="" ref="0x7fdfb5925550"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb5925090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fdfb5924090"/>
        <function-ref name="start" scoped="" ref="0x7fdfb59261b0"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb59266c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb5928a30" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb5928a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb5928db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fdfb5922a90" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb5922a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb5922e10"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb5921020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb59211b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb5921340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb59214d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb5921660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb59217f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb5921980"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb5921b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fdfb6aa5020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fdfb6aa5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdfb6aa5e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6aa4800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6aa4340"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6aa4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fdfb6a9c060" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fdfb6a9c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7041230"/>
            <typename><typedef-ref name="T32khz" ref="0x7fdfb70415a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdfb6a9ce70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6a9b820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6a9b360"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6a9bce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fdfb6a892c0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb6a892c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6a89640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb6a897d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb6a89960"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6a89af0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb6a89c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6a89e10"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb6a88020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6a881b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6a88340"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb6a884d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb6a88660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fdfb6a980a0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fdfb6a980a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7041230"/>
            <typename><typedef-ref name="T32khz" ref="0x7fdfb70415a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdfb6a8a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6a8a9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6a8a4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6a8ae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fdfb6a67540" loc="63:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fdfb6a67540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7041230"/>
            <typename><typedef-ref name="T32khz" ref="0x7fdfb70415a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdfb6a653d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6a65d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6a65890"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6a64260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fdfb6a690f0" loc="62:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fdfb6a690f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdfb6a68020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6a689a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6a684e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6a68e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fdfb593d020" loc="61:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fdfb593d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb593b870"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb593c840"/>
        <function-ref name="startAt" scoped="" ref="0x7fdfb593b220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb593cd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fdfb593bd30"/>
        <function-ref name="start" scoped="" ref="0x7fdfb593de30"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb593c380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fdfb5937780" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fdfb5937780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7041230"/>
            <typename><typedef-ref name="T32khz" ref="0x7fdfb70415a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb5933020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb5935020"/>
        <function-ref name="startAt" scoped="" ref="0x7fdfb59359a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb59354e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fdfb59334e0"/>
        <function-ref name="start" scoped="" ref="0x7fdfb59365d0"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb5936ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fdfb59393d0" loc="68:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fdfb59393d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdfb5938240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb5938bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb5938700"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb59370d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fdfb69f2490" loc="74:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fdfb69f2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb69f2810"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb69f29a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fdfb69f61d0" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fdfb69f61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb69f3b30"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb69f59f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fdfb69f34e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb69f3020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fdfb69f2020"/>
        <function-ref name="start" scoped="" ref="0x7fdfb69f5020"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb69f5530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fdfb69fccf0" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb69fccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb69f7220"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb69fa7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdfb69f8590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdfb69f8110"/>
        <function-ref name="getdt" scoped="" ref="0x7fdfb69f7b20"/>
        <function-ref name="gett0" scoped="" ref="0x7fdfb69f76a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb69fac40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdfb69fb940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdfb69f8ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdfb69fbe10"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb69fa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fdfb69a2e80" loc="71:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fdfb69a2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb69a1220"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb69a13b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fdfb69a7c30" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fdfb69a7c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb69a2110"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb69a46a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdfb69a34a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdfb69a3020"/>
        <function-ref name="getdt" scoped="" ref="0x7fdfb69a2a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fdfb69a2590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb69a4b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdfb69a6860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdfb69a3ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdfb69a6d30"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb69a4220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fdfb69ad690" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb69ad690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb69a9cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb69aa260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdfb69a9090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdfb69aaba0"/>
        <function-ref name="getdt" scoped="" ref="0x7fdfb69a7680"/>
        <function-ref name="gett0" scoped="" ref="0x7fdfb69a71e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb69aa700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdfb69ac390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdfb69a96c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdfb69ac880"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb69acd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fdfb699ecf0" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fdfb699ecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdfb699d980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fdfb6993020" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fdfb6993020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdfb6993e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb6992800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb6992340"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb6992cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fdfb6985cb0" loc="51:/home/jyxk/tinyos-main/tos/platforms/telosb/DemoSensorC.nc">
      <component-ref qname="SenseAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fdfb6985cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fdfb6984940"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb6984dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fdfb5896450" loc="44:/home/jyxk/tinyos-main/tos/platforms/telosb/VoltageC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fdfb5896450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fdfb5895090"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb5895510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fdfb58924f0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fdfb58924f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fdfb5891110"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb5891590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fdfb588d570" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7fdfb588d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fdfb588b1f0"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb588b6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fdfb5891c70" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fdfb5891c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fdfb588f730"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fdfb58908a0"/>
        <function-ref name="read" scoped="" ref="0x7fdfb588f260"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb588e220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb588e7e0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb588e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb588eb60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb588ecf0"/>
        <function-ref name="request" scoped="" ref="0x7fdfb588ee80"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb588d030"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb588d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fdfb5889e60" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fdfb5889e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fdfb5887a80"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb5886020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fdfb5886780" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb5886780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb58843f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x7fdfb6938020" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x7fdfb6938020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb69383a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb6938530"/>
        <function-ref name="request" scoped="" ref="0x7fdfb69386c0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb6938850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb69389e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fdfb6941b10" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fdfb6941b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fdfb6940750"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb6940bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fdfb693e950" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7fdfb693e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fdfb693d5a0"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb693da60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x7fdfb693c6c0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x7fdfb693c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb693ca40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb693cbd0"/>
        <function-ref name="request" scoped="" ref="0x7fdfb693cd60"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb693b020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb693b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fdfb69375c0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fdfb69375c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb6936240"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7fdfb6925b10" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fdfb6925b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fdfb6935020"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fdfb69351b0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fdfb6935340"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fdfb69354d0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fdfb6935660"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fdfb69357f0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fdfb6935980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x7fdfb693bb20" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x7fdfb693bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb693a020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb693a1b0"/>
        <function-ref name="request" scoped="" ref="0x7fdfb693a340"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb693a4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb693a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7fdfb69085c0" loc="136:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7fdfb69085c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb6908940"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb6908ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7fdfb5872720" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fdfb5872720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fdfb5872aa0"/>
        <function-ref name="configure" scoped="" ref="0x7fdfb5872c30"/>
        <function-ref name="dataReady" scoped="" ref="0x7fdfb5872dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7fdfb5873720" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb5873720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fdfb5873aa0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fdfb5873c30"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fdfb5873dc0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fdfb5872020"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fdfb58721b0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fdfb5872340"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fdfb58724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7fdfb5871060" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fdfb5871060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fdfb58713e0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fdfb5871570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fdfb58719a0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb58719a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb586f600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb58749e0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb58749e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb5874d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb5873020"/>
        <function-ref name="request" scoped="" ref="0x7fdfb58731b0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5873340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb58734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7fdfb68cd960" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7fdfb68cd960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fdfb68cdce0"/>
        <function-ref name="configure" scoped="" ref="0x7fdfb68cde70"/>
        <function-ref name="dataReady" scoped="" ref="0x7fdfb68cb030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7fdfb68c91d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7fdfb68c91d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fdfb68c9550"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb68c96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7fdfb68cb920" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fdfb68cb920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fdfb68cbca0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fdfb68cbe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7fdfb68ce1d0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fdfb68ce1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fdfb68ce550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fdfb68ce6e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fdfb68ce870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fdfb68cea00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fdfb68ceb90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fdfb68ced20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fdfb68cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb68dacd0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb68dacd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb68cf0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb68cf230"/>
        <function-ref name="request" scoped="" ref="0x7fdfb68cf3c0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb68cf550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb68cf6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7fdfb68c2af0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7fdfb68c2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fdfb68c2e70"/>
        <function-ref name="configure" scoped="" ref="0x7fdfb68c1030"/>
        <function-ref name="dataReady" scoped="" ref="0x7fdfb68c11c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7fdfb68afb80" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fdfb68afb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fdfb68bc020"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fdfb68bc1b0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fdfb68bc340"/>
        <function-ref name="isBusy" scoped="" ref="0x7fdfb68bc4d0"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fdfb68bc660"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fdfb68bc7f0"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fdfb68bc980"/>
        <function-ref name="startConversion" scoped="" ref="0x7fdfb68bcb10"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fdfb68bcca0"/>
        <function-ref name="getMem" scoped="" ref="0x7fdfb68bce30"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fdfb68ba020"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fdfb68ba1b0"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fdfb68ba340"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fdfb68ba5d0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fdfb68ba760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7fdfb68a0540" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fdfb68a0540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb68a08c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb68a0a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb68a0be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb68a0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb689f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb689f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb689f340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb689f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb689f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb689f7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb689f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb689fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb689fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb689e020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb689e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7fdfb68aa9e0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fdfb68aa9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb68aad60"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb68a9020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb68a91b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb68a9340"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb68a94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7fdfb68ad220" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fdfb68ad220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb68ad5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb68ad730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb68ad8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb68ada50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb68adbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb68add70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb68ac020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb68ac1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb68ac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7fdfb68c0910" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7fdfb68c0910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fdfb68c0c90"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb68c0e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7fdfb68a4640" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fdfb68a4640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb68a49c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb68a4b50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb68a4ce0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb68a4e70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb68a3030"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb68a31c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb68a3350"/>
        <function-ref name="get" scoped="" ref="0x7fdfb68a34e0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb68a3670"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb68a3800"/>
        <function-ref name="set" scoped="" ref="0x7fdfb68a3990"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb68a3b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb68a3cb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb68a2020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb68a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7fdfb68c1ab0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fdfb68c1ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fdfb68c1e30"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fdfb68c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7fdfb689a540" loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fdfb689a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb689a8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb689aa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb689abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb689ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6899020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb68991b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6899340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb68994d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6899660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb68997f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6899980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6899b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6899ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6898020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb68981b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7fdfb68a9860" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fdfb68a9860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb68a9ce0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb68a9e70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb68a7030"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb68a71c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb68a7350"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb68a74e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb68a7670"/>
        <function-ref name="get" scoped="" ref="0x7fdfb68a7800"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb68a7990"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb68a7b20"/>
        <function-ref name="set" scoped="" ref="0x7fdfb68a7cb0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb68a7e40"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb68a6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb68a62b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb68a6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb68c4680" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb68c4680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb68c4a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7fdfb689e540" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fdfb689e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb689e8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb689ea50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb689ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb689ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb689d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb689d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb689d340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb689d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb689d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb689d7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb689d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb689db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb689dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb689c020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb689c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7fdfb68baaa0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fdfb68baaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb68bae20"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb68ae020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb68ae1b0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb68ae340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb68ae4d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb68ae660"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb68ae7f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb68ae980"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb68aeb10"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb68aeca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb68aee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7fdfb68bbb30" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7fdfb68bbb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fdfb68bd020"/>
        <function-ref name="userId" scoped="" ref="0x7fdfb68bd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7fdfb68ac6f0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fdfb68ac6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb68aca70"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb68acc00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb68acd90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb68ab020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb68ab1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb68ab340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb68ab4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb68ab660"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb68ab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7fdfb68c33f0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fdfb68c33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fdfb68c3770"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fdfb68c3900"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fdfb68c3a90"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fdfb68c3c20"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fdfb68c3db0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fdfb68c2020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fdfb68c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7fdfb68a2540" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fdfb68a2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb68a28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb68a2a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb68a2be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb68a2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb68a1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb68a11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb68a1340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb68a14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb68a1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb68a17f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb68a1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb68a1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb68a1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb68a0020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb68a01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7fdfb68abb70" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fdfb68abb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb68aa020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb68aa1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb68aa340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb68aa4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb68aa660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7fdfb68a67d0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fdfb68a67d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb68a6b50"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb68a6ce0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb68a6e70"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb68a5030"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb68a51c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb68a5350"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb68a54e0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb68a5670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb68a5800"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb68a5990"/>
        <function-ref name="set" scoped="" ref="0x7fdfb68a5b20"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb68a5cb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb68a5e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb68a4120"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb68a42b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7fdfb689c540" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fdfb689c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb689c8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb689ca50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb689cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb689cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb689b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb689b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb689b340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb689b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb689b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb689b7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb689b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb689bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb689bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb689a020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb689a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7fdfb67dc0c0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fdfb67dc0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fdfb67dc440"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fdfb67dc5d0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fdfb67dc760"/>
        <function-ref name="isBusy" scoped="" ref="0x7fdfb67dc8f0"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fdfb67dca80"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fdfb67dcc10"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fdfb67dcda0"/>
        <function-ref name="startConversion" scoped="" ref="0x7fdfb67db020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fdfb67db1b0"/>
        <function-ref name="getMem" scoped="" ref="0x7fdfb67db340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fdfb67db4d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fdfb67db660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fdfb67db7f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fdfb67dba80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fdfb67dbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fdfb67443a0" loc="86:/home/jyxk/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb67443a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fdfb6744740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fdfb67448d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fdfb6742570" loc="89:/home/jyxk/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb6742570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fdfb6742910"/>
        <function-ref name="configure" scoped="" ref="0x7fdfb6742aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb6745520" loc="85:/home/jyxk/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb6745520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb67458c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb6745a50"/>
        <function-ref name="request" scoped="" ref="0x7fdfb6745be0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb6745d70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb6744020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fdfb6744b20" loc="87:/home/jyxk/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb6744b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fdfb6742020"/>
        <function-ref name="userId" scoped="" ref="0x7fdfb67421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb584c060" loc="44:/home/jyxk/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb584c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb584c3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fdfb584c670" loc="45:/home/jyxk/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fdfb584c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fdfb584c9f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fdfb584cb80"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fdfb584cd10"/>
        <function-ref name="dequeue" scoped="" ref="0x7fdfb584b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fdfb5848530" loc="52:/home/jyxk/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb5848530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fdfb58488d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fdfb5848a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fdfb5847610" loc="56:/home/jyxk/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb5847610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fdfb58479b0"/>
        <function-ref name="configure" scoped="" ref="0x7fdfb5847b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fdfb5847dd0" loc="57:/home/jyxk/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fdfb5847dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fdfb5846180"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fdfb5846310"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fdfb58464a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fdfb5846630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb58496c0" loc="51:/home/jyxk/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb58496c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb5849a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb5849bf0"/>
        <function-ref name="request" scoped="" ref="0x7fdfb5849d80"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5848020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb58481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fdfb5848cb0" loc="53:/home/jyxk/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb5848cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fdfb58470a0"/>
        <function-ref name="userId" scoped="" ref="0x7fdfb5847230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fdfb5846900" loc="68:/home/jyxk/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fdfb5846900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb5846c80"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb5846e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fdfb6726740" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fdfb6726740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb67253d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7fdfb67271d0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7fdfb67271d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb6727550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb67276e0"/>
        <function-ref name="request" scoped="" ref="0x7fdfb6727870"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb6727a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb6727b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7fdfb672bd30" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7fdfb672bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb67280e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb6728270"/>
        <function-ref name="request" scoped="" ref="0x7fdfb6728400"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb6728590"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb6728720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7fdfb67209c0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fdfb67209c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fdfb6720d40"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fdfb671f020"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fdfb671f1b0"/>
        <function-ref name="isBusy" scoped="" ref="0x7fdfb671f340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fdfb671f4d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fdfb671f660"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fdfb671f7f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7fdfb671f980"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fdfb671fb10"/>
        <function-ref name="getMem" scoped="" ref="0x7fdfb671fca0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fdfb671fe30"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fdfb671e020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fdfb671e1b0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fdfb671e440"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fdfb671e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7fdfb6713020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7fdfb6713020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb6710630"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6712a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdfb6711920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdfb67114a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fdfb670e020"/>
        <function-ref name="gett0" scoped="" ref="0x7fdfb6710ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb6711020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdfb6713c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdfb6710020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdfb6712110"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb67125e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7fdfb6721e40" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fdfb6721e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fdfb67201e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fdfb6720370"/>
        <function-ref name="start" scoped="" ref="0x7fdfb6720500"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb6720690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7fdfb670e6c0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7fdfb670e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb670bc40"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb670c1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdfb670b020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdfb670cae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fdfb6709590"/>
        <function-ref name="gett0" scoped="" ref="0x7fdfb6709110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb670c660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdfb670d390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdfb670b630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdfb670d860"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb670dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7fdfb6721280" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fdfb6721280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fdfb6721600"/>
        <function-ref name="stopDone" scoped="" ref="0x7fdfb6721790"/>
        <function-ref name="start" scoped="" ref="0x7fdfb6721920"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb6721ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7fdfb671ea90" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7fdfb671ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb6715020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6717510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdfb6716300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdfb6717e10"/>
        <function-ref name="getdt" scoped="" ref="0x7fdfb6715920"/>
        <function-ref name="gett0" scoped="" ref="0x7fdfb67154a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb6717990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdfb67186b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdfb6716910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdfb6718b80"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb6717090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fdfb66ba020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fdfb66ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb66bac50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7fdfb66bc9c0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fdfb66bc9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fdfb66bcd40"/>
        <function-ref name="stopDone" scoped="" ref="0x7fdfb66bb020"/>
        <function-ref name="start" scoped="" ref="0x7fdfb66bb1b0"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb66bb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7fdfb66bd030" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7fdfb66bd030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb66bd3b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb66bd540"/>
        <function-ref name="request" scoped="" ref="0x7fdfb66bd6d0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb66bd860"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb66bd9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7fdfb66c1cb0" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7fdfb66c1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb66be0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb66be230"/>
        <function-ref name="request" scoped="" ref="0x7fdfb66be3c0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb66be550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb66be6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7fdfb66b77f0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7fdfb66b77f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb66b7b70"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb66b7d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7fdfb66bdd80" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fdfb66bdd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fdfb66bc180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fdfb66bc310"/>
        <function-ref name="start" scoped="" ref="0x7fdfb66bc4a0"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb66bc630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fdfb66884e0" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb66884e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb6684a20"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6686020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdfb6686da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdfb6686920"/>
        <function-ref name="getdt" scoped="" ref="0x7fdfb66834a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fdfb6683020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb66864a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdfb6687110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdfb6684410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdfb66875e0"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb6687ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fdfb6681020" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb6681020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb667d630"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6680a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdfb667f920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdfb667f4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fdfb667c020"/>
        <function-ref name="gett0" scoped="" ref="0x7fdfb667dab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb667f020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdfb6681c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdfb667d020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdfb6680110"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb66805e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fdfb667bb40" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb667bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb6676110"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb66795b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdfb66774a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdfb6677020"/>
        <function-ref name="getdt" scoped="" ref="0x7fdfb6676a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fdfb6676590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb6679a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdfb667a750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdfb6677ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdfb667ac20"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb6679130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7fdfb58620a0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7fdfb58620a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb5862cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7fdfb5860300" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7fdfb5860300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb585f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fdfb5880830" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb5880830"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb587e4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fdfb5883ac0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fdfb5883ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fdfb58815e0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fdfb5882750"/>
        <function-ref name="read" scoped="" ref="0x7fdfb5881110"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb58800d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7fdfb663fc90" loc="23:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb663fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fdfb663e0a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fdfb663e230"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fdfb663e3c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fdfb663e550"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fdfb663e6e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fdfb663e870"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fdfb663ea00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fdfb66405e0" loc="22:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb66405e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb663f240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fdfb66441d0" loc="20:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fdfb66441d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fdfb6643c40"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fdfb6644dc0"/>
        <function-ref name="read" scoped="" ref="0x7fdfb6643770"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb6641730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fdfb663c280" loc="24:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb663c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb663c600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb663c790"/>
        <function-ref name="request" scoped="" ref="0x7fdfb663c920"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb663cab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb663cc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7fdfb6606900" loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7fdfb6606900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb6606c80"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb6606e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7fdfb6613190" loc="119:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x7fdfb6613190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb6613510"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb66136a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7fdfb660e740" loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7fdfb660e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb660eac0"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb660ec50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fdfb662f730" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fdfb662f730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb662b020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb662d020"/>
        <function-ref name="startAt" scoped="" ref="0x7fdfb662d9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb662d4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fdfb662b4e0"/>
        <function-ref name="start" scoped="" ref="0x7fdfb662e5b0"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb662eac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb6638980" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb6638980"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fdfb74d6800"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fdfb74d6800"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb6638d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fdfb6631300" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb6631300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb662f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7fdfb6633a70" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fdfb6633a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fdfb6633df0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fdfb6632020"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fdfb66321b0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fdfb6632340"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fdfb66324d0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fdfb6632660"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fdfb66327f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fdfb66376c0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fdfb66376c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fdfb6635220"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fdfb6636390"/>
        <function-ref name="read" scoped="" ref="0x7fdfb6636d00"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb6635cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fdfb65cad80" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fdfb65cad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb65c7670"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb65c85d0"/>
        <function-ref name="startAt" scoped="" ref="0x7fdfb65c7020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb65c8a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fdfb65c7b30"/>
        <function-ref name="start" scoped="" ref="0x7fdfb65c9bc0"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb65c8110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb65ca530" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb65ca530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb65ca8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fdfb57fbca0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fdfb57fbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7041230"/>
            <typename><typedef-ref name="T32khz" ref="0x7fdfb70415a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb57f74e0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb57f84e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fdfb57f8e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb57f89a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fdfb57f79a0"/>
        <function-ref name="start" scoped="" ref="0x7fdfb57f9ae0"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb57f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb57fb450" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb57fb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb57fb7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fdfb57e1440" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb57e1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb57e17c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb57e1950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb57e1ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb57e1c70"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb57e1e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fdfb57e4880" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb57e4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb57e4c00"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb57e4d90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb57e3020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb57e31b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb57e3340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb57e34d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb57e3660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb57e37f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb57e3980"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb57e3b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb57e3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fdfb57e2020" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb57e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb57e23a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb57e2530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb57e26c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb57e2850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb57e29e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb57e2b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb57e2d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb57e1020"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb57e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fdfb57d70c0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fdfb57d70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fdfb57d7440"/>
        <function-ref name="setEvent" scoped="" ref="0x7fdfb57d75d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fdfb57d7760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fdfb57d78f0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb57d7a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fdfb57da710" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fdfb57da710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb57daa90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fdfb57dac20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb57dadb0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb57d9020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb57d91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb57d9340"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb57d94d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb57d9660"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb57d97f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fdfb57d9980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fdfb57d9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fdfb57de5b0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fdfb57de5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7041230"/>
            <typename><typedef-ref name="T32khz" ref="0x7fdfb70415a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb57dcdf0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb57dddf0"/>
        <function-ref name="startAt" scoped="" ref="0x7fdfb57dc7a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb57dc2e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fdfb57da2e0"/>
        <function-ref name="start" scoped="" ref="0x7fdfb57dd420"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb57dd930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb57dfca0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb57dfca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb57de0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fdfb57d9da0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fdfb57d9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fdfb57d8180"/>
        <function-ref name="getControl" scoped="" ref="0x7fdfb57d8310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fdfb57d84a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fdfb57d8630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fdfb57d87c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fdfb57d8950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fdfb57d8ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fdfb57d8c70"/>
        <function-ref name="setControl" scoped="" ref="0x7fdfb57d8e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fdfb57f4020" loc="61:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fdfb57f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb57f1870"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb57f3840"/>
        <function-ref name="startAt" scoped="" ref="0x7fdfb57f1220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb57f3d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fdfb57f1d30"/>
        <function-ref name="start" scoped="" ref="0x7fdfb57f4e30"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb57f3380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fdfb57ee780" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fdfb57ee780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7041230"/>
            <typename><typedef-ref name="T32khz" ref="0x7fdfb70415a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb57ea020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb57eb020"/>
        <function-ref name="startAt" scoped="" ref="0x7fdfb57eb9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb57eb4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fdfb57ea4e0"/>
        <function-ref name="start" scoped="" ref="0x7fdfb57ed5d0"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb57edae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fdfb57f03d0" loc="68:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fdfb57f03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdfb57ef240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb57efbc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb57ef700"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb57ee0d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fdfb6596480" loc="26:/home/jyxk/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x7fdfb6596480"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fdfb6593020"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fdfb65940d0"/>
        <function-ref name="read" scoped="" ref="0x7fdfb6594a60"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb6593af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fdfb65c25a0" loc="24:/home/jyxk/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fdfb65c25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fdfb65970d0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fdfb6599200"/>
        <function-ref name="read" scoped="" ref="0x7fdfb6599b90"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb6597ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fdfb6591210" loc="27:/home/jyxk/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb6591210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb65915b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb6591740"/>
        <function-ref name="request" scoped="" ref="0x7fdfb65918d0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb6591a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb6591bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7fdfb5808020" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fdfb5808020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fdfb58083a0"/>
        <function-ref name="configure" scoped="" ref="0x7fdfb5808530"/>
        <function-ref name="dataReady" scoped="" ref="0x7fdfb58086c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7fdfb5809020" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb5809020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fdfb58093a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fdfb5809530"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fdfb58096c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fdfb5809850"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fdfb58099e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fdfb5809b70"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fdfb5809d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7fdfb5808910" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fdfb5808910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fdfb5808c90"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fdfb5808e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fdfb5807280" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb5807280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb5806020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb580b360" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb580b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb580b6e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb580b870"/>
        <function-ref name="request" scoped="" ref="0x7fdfb580ba00"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb580bb90"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb580bd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7fdfb5797dc0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7fdfb5797dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb5796ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7fdfb5794120" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7fdfb5794120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb5794d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7fdfb6579560" loc="35:/home/jyxk/tinyos-main/tos/chips/msp430/sensors/Msp430InternalVoltageP.nc">
      <component-ref qname="Msp430InternalVoltageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb6579560"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb65781f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fdfb587ce70" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7fdfb587ce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fdfb587bad0"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb587a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fdfb587a780" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb587a780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb58783f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb587c140" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb587c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb587c4c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb587c650"/>
        <function-ref name="request" scoped="" ref="0x7fdfb587c7e0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb587c970"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb587cb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7fdfb5788020" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fdfb5788020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fdfb57883a0"/>
        <function-ref name="configure" scoped="" ref="0x7fdfb5788530"/>
        <function-ref name="dataReady" scoped="" ref="0x7fdfb57886c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7fdfb5789020" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb5789020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fdfb57893a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fdfb5789530"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fdfb57896c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fdfb5789850"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fdfb57899e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fdfb5789b70"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fdfb5789d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7fdfb5788910" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fdfb5788910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fdfb5788c90"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fdfb5788e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fdfb5787280" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb5787280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb5786020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb578a280" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb578a280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb578a600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb578a790"/>
        <function-ref name="request" scoped="" ref="0x7fdfb578a920"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb578aab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb578ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7fdfb5779a40" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7fdfb5779a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb57786b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7fdfb5778cc0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7fdfb5778cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb5776980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7fdfb6268900" loc="49:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SenseAppC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7fdfb6268900"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fdfb6268c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7fdfb6269240" loc="48:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SenseAppC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7fdfb6269240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fdfb6269e30"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb6268300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7fdfb626aaa0" loc="47:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SenseAppC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fdfb626aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fdfb626ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7fdfb626b310" loc="46:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SenseAppC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7fdfb626b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fdfb626a020"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb626a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7fdfb5766c50" loc="54:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0x7fdfb5766c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fdfb5765020"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fdfb57651b0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fdfb5765340"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fdfb57654d0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fdfb5765660"/>
        <function-ref name="reset" scoped="" ref="0x7fdfb57657f0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fdfb5765980"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fdfb5765b10"/>
        <function-ref name="resetDone" scoped="" ref="0x7fdfb5765ca0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fdfb5765e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7fdfb576ce80" loc="48:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7fdfb576ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fdfb576b220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7fdfb576b610" loc="49:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7fdfb576b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fdfb5769390"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb5769810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7fdfb576d060" loc="46:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fdfb576d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fdfb576d3e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7fdfb5769e10" loc="51:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0x7fdfb5769e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb57681c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb5768350"/>
        <function-ref name="request" scoped="" ref="0x7fdfb57684e0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5768670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb5768800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7fdfb57677a0" loc="53:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0x7fdfb57677a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fdfb5767b20"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fdfb5767cb0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fdfb5767e40"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fdfb5766020"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fdfb57661b0"/>
        <function-ref name="reset" scoped="" ref="0x7fdfb5766340"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fdfb57664d0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fdfb5766660"/>
        <function-ref name="resetDone" scoped="" ref="0x7fdfb57667f0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fdfb5766980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7fdfb5768ad0" loc="52:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0x7fdfb5768ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb5768e50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb5767020"/>
        <function-ref name="request" scoped="" ref="0x7fdfb57671b0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5767340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb57674d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7fdfb576d7d0" loc="47:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SenseAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7fdfb576d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fdfb576c400"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb576c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7fdfb6500a30" loc="45:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7fdfb6500a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fdfb6500db0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fdfb64ff020"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fdfb64ff1b0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fdfb64ff340"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fdfb64ff4d0"/>
        <function-ref name="reset" scoped="" ref="0x7fdfb64ff660"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fdfb64ff7f0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fdfb64ff980"/>
        <function-ref name="resetDone" scoped="" ref="0x7fdfb64ffb10"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fdfb64ffca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb6501680" loc="44:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb6501680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb6501a00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb6501b90"/>
        <function-ref name="request" scoped="" ref="0x7fdfb6501d20"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb6500020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb65001b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7fdfb647fde0" loc="58:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7fdfb647fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb647e180"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb647e310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fdfb647e4a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fdfb647e630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7fdfb6477c60" loc="102:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0x7fdfb6477c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb6475020"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb64751b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7fdfb6477480" loc="103:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0x7fdfb6477480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb6477800"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb6477990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7fdfb6480c50" loc="57:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0x7fdfb6480c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb647f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb647f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb647f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb647f4d0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb647f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb647f7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb647f980"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb647fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7fdfb6482580" loc="54:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7fdfb6482580"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fdfb6482920"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fdfb6482ab0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fdfb6482c40"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fdfb6482dd0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fdfb6481020"/>
        <function-ref name="reset" scoped="" ref="0x7fdfb64811b0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fdfb6481340"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fdfb64814d0"/>
        <function-ref name="resetDone" scoped="" ref="0x7fdfb6481660"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fdfb64817f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7fdfb6481ac0" loc="56:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7fdfb6481ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6481e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6480020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb64801b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6480340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb64804d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6480660"/>
        <function-ref name="set" scoped="" ref="0x7fdfb64807f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6480980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fdfb6479d50" loc="62:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fdfb6479d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fdfb6478100"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fdfb6478290"/>
        <function-ref name="led1On" scoped="" ref="0x7fdfb6478420"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fdfb64785b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fdfb6478740"/>
        <function-ref name="get" scoped="" ref="0x7fdfb64788d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fdfb6478a60"/>
        <function-ref name="led2On" scoped="" ref="0x7fdfb64771b0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6478d80"/>
        <function-ref name="led2Off" scoped="" ref="0x7fdfb6478bf0"/>
        <function-ref name="led0On" scoped="" ref="0x7fdfb6477020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fdfb647e9e0" loc="60:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb647e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb6479020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb647b510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdfb647a300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdfb647be10"/>
        <function-ref name="getdt" scoped="" ref="0x7fdfb6479920"/>
        <function-ref name="gett0" scoped="" ref="0x7fdfb64794a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb647b990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdfb647d670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdfb647a910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdfb647db40"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb647b090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7fdfb646c020" loc="47:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7fdfb646c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb646c3a0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb646c530"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fdfb646c6c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fdfb646c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7fdfb646ecd0" loc="46:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7fdfb646ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb646d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb646d230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb646d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb646d550"/>
        <function-ref name="get" scoped="" ref="0x7fdfb646d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb646d870"/>
        <function-ref name="set" scoped="" ref="0x7fdfb646da00"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb646db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7fdfb646f9c0" loc="45:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7fdfb646f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb646fd40"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb646e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb646e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb646e340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb646e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb646e660"/>
        <function-ref name="set" scoped="" ref="0x7fdfb646e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb646e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb6472b20" loc="44:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb6472b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb646f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb646f1b0"/>
        <function-ref name="request" scoped="" ref="0x7fdfb646f340"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb646f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb646f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fdfb646ade0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fdfb646ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6469180"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6469310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb64694a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6469630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb64697c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb6469950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6469ae0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6469c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6469e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6468020"/>
        <function-ref name="set" scoped="" ref="0x7fdfb64681b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6468340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb64684d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb6468760"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb64688f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fdfb646bb70" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fdfb646bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb646a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb646a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb646a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb646a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb646a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb646a7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb646a980"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb646ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fdfb6465930" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fdfb6465930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6465cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6465e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb6464020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb64641b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6464340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb64644d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6464660"/>
        <function-ref name="get" scoped="" ref="0x7fdfb64647f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb6464980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb6464b10"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6464ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb6464e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb6463020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb64632b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6463440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fdfb6466690" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fdfb6466690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6466a10"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6466ba0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6466d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6465020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb64651b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6465340"/>
        <function-ref name="set" scoped="" ref="0x7fdfb64654d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6465660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fdfb645f480" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fdfb645f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb645f800"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb645f990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb645fb20"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb645fcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb645fe40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb645e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb645e1b0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb645e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb645e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb645e660"/>
        <function-ref name="set" scoped="" ref="0x7fdfb645e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb645e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb645eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb645eda0"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb645d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fdfb64601b0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fdfb64601b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6460530"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb64606c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb6460850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb64609e0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6460b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6460d00"/>
        <function-ref name="set" scoped="" ref="0x7fdfb645f020"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb645f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fdfb645ba90" loc="43:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fdfb645ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fdfb645be10"/>
        <function-ref name="stopDone" scoped="" ref="0x7fdfb6458020"/>
        <function-ref name="start" scoped="" ref="0x7fdfb64581b0"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb6458340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fdfb644fba0" loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7fdfb644fba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb644e020"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb644e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7fdfb6450020" loc="47:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7fdfb6450020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb64503a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6450530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb64506c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6450850"/>
        <function-ref name="get" scoped="" ref="0x7fdfb64509e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6450b70"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6450d00"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb644f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0x7fdfb6453a80" loc="45:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0x7fdfb6453a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb6453e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6452020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb64521b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6452340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb64524d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6452660"/>
        <function-ref name="set" scoped="" ref="0x7fdfb64527f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6452980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7fdfb6452ce0" loc="46:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7fdfb6452ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb64510a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb6451230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb64513c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb6451550"/>
        <function-ref name="get" scoped="" ref="0x7fdfb64516e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb6451870"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6451a00"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb6451b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fdfb6458770" loc="44:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb6458770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb6455c40"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb64561e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdfb6455020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdfb6456ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fdfb6453590"/>
        <function-ref name="gett0" scoped="" ref="0x7fdfb6453110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb6456660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdfb6457390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdfb6455630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdfb6457860"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb6457d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fdfb6444c10" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb6444c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb643f110"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb64426a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdfb64414a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdfb6441020"/>
        <function-ref name="getdt" scoped="" ref="0x7fdfb643fa10"/>
        <function-ref name="gett0" scoped="" ref="0x7fdfb643f590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb6442b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdfb6443860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdfb6441ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdfb6443d30"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb6442220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fdfb6433bc0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fdfb6433bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6432020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb64321b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb6432340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb64324d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb6432660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb64327f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fdfb6429bc0" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fdfb6429bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6428020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb64281b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb6428340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb64284d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb6428660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb64287f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fdfb6430bc0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fdfb6430bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb642f020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb642f1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb642f340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb642f4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb642f660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb642f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fdfb642ebc0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fdfb642ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb642d020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb642d1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb642d340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb642d4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb642d660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb642d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fdfb6439bc0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fdfb6439bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6434020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb64341b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb6434340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb64344d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb6434660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb64347f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fdfb642bbc0" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fdfb642bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb642a0a0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb642a230"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb642a3c0"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb642a550"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb642a6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb642a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fdfb6432bc0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fdfb6432bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6431020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb64311b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb6431340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb64314d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb6431660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb64317f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fdfb6428bc0" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fdfb6428bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6427020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb64271b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb6427340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb64274d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb6427660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb64277f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fdfb6435bf0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fdfb6435bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb643a020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb643a1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb643a340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb643a4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb643a660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb643a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fdfb642dbc0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fdfb642dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb642c020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb642c1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb642c340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb642c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb642c660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb642c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fdfb6434bc0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fdfb6434bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6433020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb64331b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb6433340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb64334d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb6433660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb64337f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fdfb642ac40" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fdfb642ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6429020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb64291b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb6429340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb64294d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb6429660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb64297f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fdfb6431bc0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fdfb6431bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6430020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb64301b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb6430340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb64304d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb6430660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb64307f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fdfb642fbc0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fdfb642fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb642e020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb642e1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb642e340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb642e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb642e660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb642e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fdfb643abc0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fdfb643abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6439020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb64391b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb6439340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb64394d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb6439660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb64397f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fdfb642cbc0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fdfb642cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb642b020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb642b1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb642b340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb642b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb642b660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb642b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fdfb641fa30" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fdfb641fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb641fdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb641e020"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb641e1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb641e340"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb641e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb641e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fdfb6415bc0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fdfb6415bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6414020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb64141b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb6414340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb64144d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb6414660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb64147f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fdfb641ca30" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fdfb641ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb641cdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb641b020"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb641b1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb641b340"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb641b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb641b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fdfb641aa30" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fdfb641aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb641adb0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6419020"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb64191b0"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb6419340"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb64194d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb6419660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fdfb6421a30" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fdfb6421a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6421db0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6420020"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb64201b0"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb6420340"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb64204d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb6420660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fdfb6417a30" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fdfb6417a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6416020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb64161b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb6416340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb64164d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb6416660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb64167f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fdfb641ea30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fdfb641ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb641edb0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb641d020"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb641d1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb641d340"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb641d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb641d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fdfb6414bc0" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fdfb6414bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6413020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb64131b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb6413340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb64134d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb6413660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb64137f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fdfb64259d0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fdfb64259d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6425d50"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6422020"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb64221b0"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb6422340"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb64224d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb6422660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fdfb6419a30" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fdfb6419a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6419db0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6418020"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb64181b0"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb6418340"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb64184d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb6418660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fdfb6420a30" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fdfb6420a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6420db0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb641f020"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb641f1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb641f340"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb641f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb641f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fdfb6416bc0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fdfb6416bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6415020"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb64151b0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb6415340"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb64154d0"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb6415660"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb64157f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fdfb641da30" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fdfb641da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb641ddb0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb641c020"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb641c1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb641c340"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb641c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb641c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fdfb641ba30" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fdfb641ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb641bdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb641a020"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb641a1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb641a340"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb641a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb641a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fdfb6422a30" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fdfb6422a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6422db0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6421020"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb64211b0"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb6421340"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb64214d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb6421660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fdfb6418a30" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fdfb6418a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6418db0"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6417020"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb64171b0"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb6417340"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb64174d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb6417660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fdfb6340610" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fdfb6340610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb6340990"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb6340b20"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb6340cb0"/>
        <function-ref name="edge" scoped="" ref="0x7fdfb6340e40"/>
        <function-ref name="enable" scoped="" ref="0x7fdfb6333020"/>
        <function-ref name="getValue" scoped="" ref="0x7fdfb63331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fdfb6341a30" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fdfb6341a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb6341db0"/>
        <function-ref name="disable" scoped="" ref="0x7fdfb6340020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fdfb63401b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fdfb6340340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fdfb62be020" loc="92:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb62be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fdfb62be3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fdfb62be550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fdfb62bdcd0" loc="96:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb62bdcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fdfb62bb0a0"/>
        <function-ref name="configure" scoped="" ref="0x7fdfb62bb230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fdfb62be7a0" loc="93:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb62be7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb62beb20"/>
        <function-ref name="requested" scoped="" ref="0x7fdfb62becb0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb62bee40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb62bd020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fdfb62bd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb62bf210" loc="91:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb62bf210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb62bf5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb62bf740"/>
        <function-ref name="request" scoped="" ref="0x7fdfb62bf8d0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb62bfa60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb62bfbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fdfb62bd400" loc="94:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb62bd400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fdfb62bd780"/>
        <function-ref name="userId" scoped="" ref="0x7fdfb62bd910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb56d41b0" loc="44:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb56d41b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb56d4530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fdfb56d47c0" loc="45:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fdfb56d47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fdfb56d4b40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fdfb56d4cd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fdfb56d4e60"/>
        <function-ref name="dequeue" scoped="" ref="0x7fdfb56d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fdfb56d0850" loc="55:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb56d0850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fdfb56d0bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fdfb56d0d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fdfb56ce590" loc="60:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb56ce590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fdfb56ce930"/>
        <function-ref name="configure" scoped="" ref="0x7fdfb56ceac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fdfb56ced50" loc="61:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fdfb56ced50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fdfb56cd100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fdfb56cd290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fdfb56cd420"/>
        <function-ref name="dequeue" scoped="" ref="0x7fdfb56cd5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fdfb56cf020" loc="56:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb56cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb56cf3a0"/>
        <function-ref name="requested" scoped="" ref="0x7fdfb56cf530"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb56cf6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb56cf850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fdfb56cf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fdfb56cd800" loc="62:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fdfb56cd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fdfb56cdb80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fdfb56cdd10"/>
        <function-ref name="led1On" scoped="" ref="0x7fdfb56cc020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fdfb56cc1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fdfb56cc340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb56cc4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fdfb56cc660"/>
        <function-ref name="led0On" scoped="" ref="0x7fdfb56ccca0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb56cc980"/>
        <function-ref name="led2On" scoped="" ref="0x7fdfb56cc7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fdfb56ccb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb56d1970" loc="54:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb56d1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb56d1d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb56d0020"/>
        <function-ref name="request" scoped="" ref="0x7fdfb56d01b0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb56d0340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb56d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fdfb56cfc30" loc="57:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb56cfc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fdfb56ce020"/>
        <function-ref name="userId" scoped="" ref="0x7fdfb56ce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fdfb56cb020" loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fdfb56cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb56cb3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb56cb530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fdfb62b8280" loc="69:/home/jyxk/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fdfb62b8280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fdfb62b8600"/>
        <function-ref name="stopDone" scoped="" ref="0x7fdfb62b8790"/>
        <function-ref name="start" scoped="" ref="0x7fdfb62b8920"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb62b8ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fdfb62b8d00" loc="71:/home/jyxk/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fdfb62b8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fdfb62890a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fdfb62892f0" loc="72:/home/jyxk/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb62892f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb6289670"/>
        <function-ref name="requested" scoped="" ref="0x7fdfb6289800"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb6289990"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb6289b20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fdfb6289cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fdfb6288020" loc="73:/home/jyxk/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb6288020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fdfb62883a0"/>
        <function-ref name="userId" scoped="" ref="0x7fdfb6288530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fdfb569a0f0" loc="61:/home/jyxk/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fdfb569a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fdfb569a470"/>
        <function-ref name="stopDone" scoped="" ref="0x7fdfb569a600"/>
        <function-ref name="start" scoped="" ref="0x7fdfb569a790"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb569a920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fdfb569ab70" loc="63:/home/jyxk/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fdfb569ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fdfb5699020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fdfb5698680" loc="78:/home/jyxk/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7fdfb5698680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb5698a00"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb5698b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fdfb5699270" loc="64:/home/jyxk/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb5699270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb56995f0"/>
        <function-ref name="requested" scoped="" ref="0x7fdfb5699780"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5699910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb5699aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fdfb5699c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fdfb5698e60" loc="73:/home/jyxk/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0x7fdfb5698e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb5696210"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb56963a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fdfb569b970" loc="60:/home/jyxk/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fdfb569b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fdfb569bcf0"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb569be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fdfb5699e80" loc="65:/home/jyxk/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb5699e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fdfb5698220"/>
        <function-ref name="userId" scoped="" ref="0x7fdfb56983b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fdfb627c1e0" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fdfb627c1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7042640"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdfb7042db0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdfb6278630"/>
        <function-ref name="fired" scoped="" ref="0x7fdfb627bc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdfb62799d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdfb6279550"/>
        <function-ref name="getdt" scoped="" ref="0x7fdfb6277020"/>
        <function-ref name="gett0" scoped="" ref="0x7fdfb6278ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdfb62790d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdfb627cdd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdfb6278020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdfb627b2e0"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb627b7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fdfb6264bc0" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fdfb6264bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fdfb624e7e0"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb624ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fdfb6245370" loc="43:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fdfb6245370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fdfb6244e60"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fdfb6244020"/>
        <function-ref name="read" scoped="" ref="0x7fdfb6244990"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb6242940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7fdfb6264490" loc="41:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7fdfb6264490"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fdfb6264810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fdfb5681bd0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fdfb5681bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fdfb5680860"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb5680ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fdfb567e4a0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb567e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb567d110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7fdfb5671720" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fdfb5671720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fdfb5671aa0"/>
        <function-ref name="configure" scoped="" ref="0x7fdfb5671c30"/>
        <function-ref name="dataReady" scoped="" ref="0x7fdfb5671dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7fdfb5672730" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb5672730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fdfb5672ab0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fdfb5672c40"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fdfb5672dd0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fdfb5671020"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fdfb56711b0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fdfb5671340"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fdfb56714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7fdfb5670060" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fdfb5670060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fdfb56703e0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fdfb5670570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fdfb56709a0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb56709a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb566f600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb5673af0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb5673af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb5673e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb5672030"/>
        <function-ref name="request" scoped="" ref="0x7fdfb56721c0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5672350"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb56724e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7fdfb5663dc0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7fdfb5663dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb5662ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7fdfb5661120" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7fdfb5661120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb5661d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fdfb56785c0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb56785c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb5677240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fdfb567c840" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fdfb567c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fdfb567a340"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fdfb567b480"/>
        <function-ref name="read" scoped="" ref="0x7fdfb567bdf0"/>
        <function-ref name="readDone" scoped="" ref="0x7fdfb567adf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7fdfb5655020" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fdfb5655020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fdfb56553a0"/>
        <function-ref name="configure" scoped="" ref="0x7fdfb5655530"/>
        <function-ref name="dataReady" scoped="" ref="0x7fdfb56556c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7fdfb5656020" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fdfb5656020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fdfb56563a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fdfb5656530"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fdfb56566c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fdfb5656850"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fdfb56569e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fdfb5656b70"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fdfb5656d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7fdfb5655910" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fdfb5655910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fdfb5655c90"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fdfb5655e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fdfb5653280" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb5653280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb5652020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb5657280" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb5657280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb5657600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb5657790"/>
        <function-ref name="request" scoped="" ref="0x7fdfb5657920"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5657ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb5657c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7fdfb5645060" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7fdfb5645060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb5645c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7fdfb5644300" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SenseAppC.HamamatsuS1087ParC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7fdfb5644300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb5643020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7fdfb624dac0" loc="44:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <component-ref qname="HamamatsuS1087ParP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fdfb624dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fdfb624c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7fdfb624d170" loc="43:/home/jyxk/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <component-ref qname="HamamatsuS1087ParP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7fdfb624d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fdfb624d4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fdfb623e250" loc="46:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fdfb623e250"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fdfb623e5d0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fdfb623e760"/>
        <function-ref name="start" scoped="" ref="0x7fdfb623e8f0"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb623ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fdfb623d280" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fdfb623d280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fdfb6fd8d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fdfb623d600"/>
        <function-ref name="getPayload" scoped="" ref="0x7fdfb623d790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fdfb623d920"/>
        <function-ref name="cancel" scoped="" ref="0x7fdfb623dab0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fdfb623dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fdfb623b630" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fdfb623b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb623b9b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fdfb623bb40"/>
        <function-ref name="getPayload" scoped="" ref="0x7fdfb623bcd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fdfb623be60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fdfb623a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fdfb623b020" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fdfb623b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fdfb6fd8d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fdfb623b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fdfb622ce40" loc="53:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fdfb622ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fdfb62341e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fdfb6234370"/>
        <function-ref name="led1On" scoped="" ref="0x7fdfb6234500"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fdfb6234690"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fdfb6234820"/>
        <function-ref name="get" scoped="" ref="0x7fdfb62349b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fdfb6234b40"/>
        <function-ref name="led2Off" scoped="" ref="0x7fdfb62321b0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6234cd0"/>
        <function-ref name="led0On" scoped="" ref="0x7fdfb6234e60"/>
        <function-ref name="led2On" scoped="" ref="0x7fdfb6232020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fdfb622c4c0" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fdfb622c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fdfb622c840"/>
        <function-ref name="noAck" scoped="" ref="0x7fdfb622c9d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fdfb622cb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fdfb623a2d0" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fdfb623a2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fdfb623a650"/>
        <function-ref name="source" scoped="" ref="0x7fdfb623a7e0"/>
        <function-ref name="address" scoped="" ref="0x7fdfb623a970"/>
        <function-ref name="destination" scoped="" ref="0x7fdfb623ab00"/>
        <function-ref name="setSource" scoped="" ref="0x7fdfb623ac90"/>
        <function-ref name="setDestination" scoped="" ref="0x7fdfb623ae20"/>
        <function-ref name="type" scoped="" ref="0x7fdfb6237020"/>
        <function-ref name="setType" scoped="" ref="0x7fdfb62371b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fdfb6237340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fdfb62374d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fdfb6237660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fdfb61cb9f0" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fdfb61cb9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fdfb61cbd70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fdfb61ca020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fdfb61ca1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fdfb61ca340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fdfb61ca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fdfb61ca760" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fdfb61ca760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fdfb61caae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fdfb622b7d0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fdfb622b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fdfb6fd8d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fdfb622bb70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fdfb622bd00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fdfb61ce020"/>
        <function-ref name="cancel" scoped="" ref="0x7fdfb61ce1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fdfb61ce340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fdfb61cc400" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fdfb61cc400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fdfb61cc780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fdfb61cc910"/>
        <function-ref name="getPayload" scoped="" ref="0x7fdfb61ccaa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fdfb61ccc30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fdfb61ccdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fdfb61ce6c0" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fdfb61ce6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fdfb6fd8d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fdfb61cea60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fdfb61cb060" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fdfb61cb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fdfb61cb3e0"/>
        <function-ref name="noAck" scoped="" ref="0x7fdfb61cb570"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fdfb61cb700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fdfb61cecb0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fdfb61cecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fdfb61cd0a0"/>
        <function-ref name="source" scoped="" ref="0x7fdfb61cd230"/>
        <function-ref name="address" scoped="" ref="0x7fdfb61cd3c0"/>
        <function-ref name="destination" scoped="" ref="0x7fdfb61cd550"/>
        <function-ref name="setSource" scoped="" ref="0x7fdfb61cd6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fdfb61cd870"/>
        <function-ref name="type" scoped="" ref="0x7fdfb61cda00"/>
        <function-ref name="setType" scoped="" ref="0x7fdfb61cdb90"/>
        <function-ref name="isForMe" scoped="" ref="0x7fdfb61cdd20"/>
        <function-ref name="setGroup" scoped="" ref="0x7fdfb61cc020"/>
        <function-ref name="localGroup" scoped="" ref="0x7fdfb61cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fdfb61c52f0" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fdfb61c52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fdfb61c5670"/>
        <function-ref name="stopDone" scoped="" ref="0x7fdfb61c5800"/>
        <function-ref name="start" scoped="" ref="0x7fdfb61c5990"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb61c5b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fdfb61c4e10" loc="52:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fdfb61c4e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fdfb6fd68e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fdfb61c21c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fdfb61c2350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fdfb61c24e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fdfb61c2670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fdfb61c2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb61c8bc0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb61c8bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb61c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fdfb61c4320" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fdfb61c4320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fdfb6fd68e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fdfb61c46a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fdfb61c1940" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fdfb61c1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fdfb61c1cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fdfb61c1e50"/>
        <function-ref name="led1On" scoped="" ref="0x7fdfb61c0020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fdfb61c01b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fdfb61c0340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb61c04d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fdfb61c0660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fdfb61c0ca0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb61c07f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fdfb61c0980"/>
        <function-ref name="led2On" scoped="" ref="0x7fdfb61c0b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7fdfb61c1020" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fdfb61c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fdfb6fd68e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fdfb61c13a0"/>
        <function-ref name="offset" scoped="" ref="0x7fdfb61c1530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fdfb61c16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fdfb61b4450" loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fdfb61b4450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fdfb61b47d0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fdfb61b4960"/>
        <function-ref name="start" scoped="" ref="0x7fdfb61b4af0"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb61b4c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7fdfb614e6e0" loc="332:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7fdfb614e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb614ea60"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb614ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fdfb61a3540" loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7fdfb61a3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fdfb61a38c0"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb61a3a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7fdfb61854f0" loc="191:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7fdfb61854f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb6185870"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb6185a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb61b5d60" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb61b5d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb61b4180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7fdfb619e180" loc="75:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7fdfb619e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7fdfb619e500"/>
        <function-ref name="flush" scoped="" ref="0x7fdfb619e690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7fdfb6152c70" loc="322:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7fdfb6152c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb6150020"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb61501b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7fdfb61a4e30" loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fdfb61a4e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fdfb61ac1e0"/>
        <function-ref name="resetSend" scoped="" ref="0x7fdfb61ac370"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fdfb61ac500"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fdfb61ac690"/>
        <function-ref name="putData" scoped="" ref="0x7fdfb61ac820"/>
        <function-ref name="putDone" scoped="" ref="0x7fdfb61ac9b0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fdfb61acb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fdfb61acdc0" loc="73:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fdfb61acdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fdfb61a9180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fdfb61a9310"/>
        <function-ref name="led1On" scoped="" ref="0x7fdfb61a94a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fdfb61a9630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fdfb61a97c0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb61a9950"/>
        <function-ref name="led1Off" scoped="" ref="0x7fdfb61a9ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fdfb61a31b0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb61a9c70"/>
        <function-ref name="led0On" scoped="" ref="0x7fdfb61a9e00"/>
        <function-ref name="led2On" scoped="" ref="0x7fdfb61a3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7fdfb614ba00" loc="341:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fdfb614ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb614bd80"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb6149020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7fdfb61ad4a0" loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fdfb61ad4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fdfb61ad820"/>
        <function-ref name="nextByte" scoped="" ref="0x7fdfb61ad9b0"/>
        <function-ref name="startSend" scoped="" ref="0x7fdfb61adb40"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fdfb61adcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7fdfb61aaad0" loc="68:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fdfb61aaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fdfb61aae50"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fdfb61b1020"/>
        <function-ref name="endPacket" scoped="" ref="0x7fdfb61b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7fdfb607f020" loc="275:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7fdfb607f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb607f3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb607f530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fdfb6085de0" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fdfb6085de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fdfb6fd68e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fdfb60841c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fdfb6084350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fdfb60844e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fdfb6084670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fdfb6084800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7fdfb607f800" loc="158:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7fdfb607f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb607fb80"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb607fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fdfb60856c0" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fdfb60856c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fdfb6fd68e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fdfb6085a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7fdfb6084c20" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7fdfb6084c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fdfb6fd68e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fdfb6083020"/>
        <function-ref name="offset" scoped="" ref="0x7fdfb60831b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fdfb6083340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fdfb6082920" loc="57:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fdfb6082920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fdfb6082ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fdfb6082e30"/>
        <function-ref name="led1On" scoped="" ref="0x7fdfb6080020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fdfb60801b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fdfb6080340"/>
        <function-ref name="get" scoped="" ref="0x7fdfb60804d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fdfb6080660"/>
        <function-ref name="led2On" scoped="" ref="0x7fdfb6080ca0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6080980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fdfb60807f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fdfb6080b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7fdfb6083e80" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fdfb6083e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fdfb6082220"/>
        <function-ref name="nextByte" scoped="" ref="0x7fdfb60823b0"/>
        <function-ref name="startSend" scoped="" ref="0x7fdfb6082540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fdfb60826d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7fdfb6083590" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fdfb6083590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fdfb6083910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fdfb6083aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7fdfb6083c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7fdfb6070d20" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fdfb6070d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fdfb60780e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fdfb6078270"/>
        <function-ref name="receive" scoped="" ref="0x7fdfb6078400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fdfb6078590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fdfb6078720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fdfb60788b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fdfb6078a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7fdfb607de10" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fdfb607de10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fdfb607a1c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7fdfb607a350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fdfb607a4e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fdfb607a670"/>
        <function-ref name="putData" scoped="" ref="0x7fdfb607a800"/>
        <function-ref name="putDone" scoped="" ref="0x7fdfb607a990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fdfb607ab20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fdfb6078cc0" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fdfb6078cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fdfb60770a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fdfb6077230"/>
        <function-ref name="led1On" scoped="" ref="0x7fdfb60773c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fdfb6077550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fdfb60776e0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb6077870"/>
        <function-ref name="led1Off" scoped="" ref="0x7fdfb6077a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fdfb606d1b0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb6077b90"/>
        <function-ref name="led0On" scoped="" ref="0x7fdfb6077d20"/>
        <function-ref name="led2On" scoped="" ref="0x7fdfb606d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fdfb6051020" loc="6:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fdfb6051020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fdfb60513a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fdfb6051530"/>
        <function-ref name="receive" scoped="" ref="0x7fdfb60516c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fdfb6051850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fdfb6053890" loc="5:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fdfb6053890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fdfb6053c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fdfb6053da0"/>
        <function-ref name="receive" scoped="" ref="0x7fdfb6052020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fdfb60521b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fdfb6052340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fdfb60524d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fdfb6052660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fdfb6053080" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fdfb6053080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fdfb6053400"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb6053590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fdfb5e40c70" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb5e40c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fdfb5e3f020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fdfb5e3f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fdfb5e3e440" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fdfb5e3e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fdfb5e3e7c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fdfb5e3e950"/>
        <function-ref name="receive" scoped="" ref="0x7fdfb5e3eae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fdfb5e3ec70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fdfb5e3d020" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fdfb5e3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fdfb5e3d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fdfb5e3f440" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fdfb5e3f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fdfb5e3f7c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fdfb5e3f950"/>
        <function-ref name="receive" scoped="" ref="0x7fdfb5e3fae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fdfb5e3fc70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fdfb5e3fe00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fdfb5e3e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fdfb5e3e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb5e40020" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb5e40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb5e403a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb5e40530"/>
        <function-ref name="request" scoped="" ref="0x7fdfb5e406c0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5e40850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb5e409e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fdfb5ff08a0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb5ff08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fdfb5ff0c20"/>
        <function-ref name="configure" scoped="" ref="0x7fdfb5ff0db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fdfb5feed00" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fdfb5feed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fdfb5fec0a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fdfb5fec230"/>
        <function-ref name="receive" scoped="" ref="0x7fdfb5fec3c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fdfb5fec550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fdfb5fea1d0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fdfb5fea1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fdfb5fea550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fdfb5fef670" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fdfb5fef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fdfb5fef9f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fdfb5fefb80"/>
        <function-ref name="receive" scoped="" ref="0x7fdfb5fefd10"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fdfb5fee020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fdfb5fee1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fdfb5fee340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fdfb5fee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fdfb5fece50" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fdfb5fece50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb5feb210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb5feb3a0"/>
        <function-ref name="request" scoped="" ref="0x7fdfb5feb530"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5feb6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb5feb850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb5ff14d0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb5ff14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb5ff1850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb5ff19e0"/>
        <function-ref name="request" scoped="" ref="0x7fdfb5ff1b70"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5ff1d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb5ff0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fdfb5fdc710" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fdfb5fdc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fdfb5fdca90"/>
        <function-ref name="txDone" scoped="" ref="0x7fdfb5fdcc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fdfb5f58e70" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb5f58e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fdfb5f57240"/>
        <function-ref name="configure" scoped="" ref="0x7fdfb5f573d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fdfb5f55890" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fdfb5f55890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fdfb5f55c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fdfb5f55dc0"/>
        <function-ref name="receive" scoped="" ref="0x7fdfb5f54020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fdfb5f541b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fdfb5f533e0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fdfb5f533e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fdfb5f53780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fdfb5f53a50" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fdfb5f53a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fdfb5f53dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fdfb5f52020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fdfb5f521b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fdfb5f52340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fdfb5f524d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fdfb5f52660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fdfb5f527f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fdfb5f52980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fdfb5f52b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fdfb5f52ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fdfb5f52e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fdfb5f51020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fdfb5f511b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fdfb5f51440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fdfb5f515d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fdfb5f51760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fdfb5f518f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fdfb5f51a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fdfb5f51c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fdfb5f51da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fdfb5f50020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fdfb5f501b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fdfb5f50340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fdfb5f504d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb5f50660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fdfb5f509f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fdfb5f50b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fdfb5f50d10"/>
        <function-ref name="tx" scoped="" ref="0x7fdfb5f4f020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fdfb5f4f1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fdfb5f4f340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fdfb5f4f4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fdfb5f4f660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fdfb5f4f7f0"/>
        <function-ref name="rx" scoped="" ref="0x7fdfb5f4f980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fdfb5f4fb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fdfb5f4fca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fdfb5f4fe30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fdfb5f4e020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fdfb5f4e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fdfb5f57790" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fdfb5f57790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fdfb5f57b30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fdfb5f57cc0"/>
        <function-ref name="receive" scoped="" ref="0x7fdfb5f57e50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fdfb5f55020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fdfb5f551b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fdfb5f55340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fdfb5f554d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fdfb5f4d020" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fdfb5f4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7041230"/>
            <typename><typedef-ref name="T32khz" ref="0x7fdfb70415a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdfb5f4de30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb5f4c800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb5f4c340"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb5f4ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fdfb5f545b0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fdfb5f545b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb5f54950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb5f54ae0"/>
        <function-ref name="request" scoped="" ref="0x7fdfb5f54c70"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5f54e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb5f53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb5f580d0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb5f580d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb5f58470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb5f58600"/>
        <function-ref name="request" scoped="" ref="0x7fdfb5f58790"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5f58920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb5f58ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fdfb5f4e5b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fdfb5f4e5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fdfb5f4e950"/>
        <function-ref name="txDone" scoped="" ref="0x7fdfb5f4eae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fdfb5f4a120" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fdfb5f4a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fdfb5f4a4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fdfb5f4a630"/>
        <function-ref name="led1On" scoped="" ref="0x7fdfb5f4a7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fdfb5f4a950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fdfb5f4aae0"/>
        <function-ref name="get" scoped="" ref="0x7fdfb5f4ac70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fdfb5f4ae00"/>
        <function-ref name="led2On" scoped="" ref="0x7fdfb5f494d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb5f491b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fdfb5f49020"/>
        <function-ref name="led0On" scoped="" ref="0x7fdfb5f49340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fdfb5f3c080" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fdfb5f3c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fdfb5f3c400"/>
        <function-ref name="txDone" scoped="" ref="0x7fdfb5f3c590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fdfb5f44b80" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fdfb5f44b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fdfb5f41020"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb5f411b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fdfb5f414d0" loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fdfb5f414d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fdfb5f41850"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fdfb5f419e0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fdfb5f41b70"/>
        <function-ref name="enableUart" scoped="" ref="0x7fdfb5f41d00"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fdfb5f40020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fdfb5f401b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fdfb5f40340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fdfb5f404d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fdfb5f40660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fdfb5f407f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fdfb5f40980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fdfb5f40b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fdfb5f40ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fdfb5f3f020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fdfb5f3f1b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fdfb5f3f340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fdfb5f3f4d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fdfb5f3f660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fdfb5f3f7f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fdfb5f3f980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fdfb5f3fb10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fdfb5f3fca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fdfb5f3fe30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fdfb5f3e020"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb5f3e1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fdfb5f3e540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fdfb5f3e6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fdfb5f3e860"/>
        <function-ref name="tx" scoped="" ref="0x7fdfb5f3e9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fdfb5f3eb80"/>
        <function-ref name="disableUart" scoped="" ref="0x7fdfb5f3ed10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fdfb5f3d020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fdfb5f3d1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fdfb5f3d340"/>
        <function-ref name="rx" scoped="" ref="0x7fdfb5f3d4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fdfb5f3d660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fdfb5f3d7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fdfb5f3d980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fdfb5f3db10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fdfb5f3dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fdfb5f2f1f0" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fdfb5f2f1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb5f2f570"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb5f2f700"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb5f2f890"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb5f2fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb5f2fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb5f2fd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb5f2e020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb5f2e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb5f2e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb5f2e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb5f2e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb5f2e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb5f2e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb5f2ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb5f2eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fdfb5f34910" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fdfb5f34910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fdfb5f34c90"/>
        <function-ref name="txDone" scoped="" ref="0x7fdfb5f34e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fdfb5f2d1f0" loc="81:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fdfb5f2d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb5f2d570"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb5f2d700"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb5f2d890"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb5f2da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb5f2dbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb5f2dd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb5f2c020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb5f2c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb5f2c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb5f2c4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb5f2c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb5f2c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb5f2c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb5f2cc10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb5f2cda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fdfb5f2b1f0" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fdfb5f2b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb5f2b570"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb5f2b700"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb5f2b890"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb5f2ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb5f2bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb5f2bd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb5f2a020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb5f2a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb5f2a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb5f2a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb5f2a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb5f2a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb5f2a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb5f2ac10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb5f2ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fdfb5f39cc0" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fdfb5f39cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fdfb5f380a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fdfb5f38230"/>
        <function-ref name="setUctl" scoped="" ref="0x7fdfb5f383c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fdfb5f38550"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fdfb5f386e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fdfb5f38870"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fdfb5f38a00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fdfb5f38b90"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fdfb5f38d20"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fdfb5f37020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fdfb5f371b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fdfb5f37340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fdfb5f374d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fdfb5f37760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fdfb5f378f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fdfb5f37a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fdfb5f37c10"/>
        <function-ref name="isUart" scoped="" ref="0x7fdfb5f37da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fdfb5f36020"/>
        <function-ref name="isSpi" scoped="" ref="0x7fdfb5f361b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fdfb5f36340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fdfb5f364d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fdfb5f36660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fdfb5f367f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb5f36980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fdfb5f36d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fdfb5f35020"/>
        <function-ref name="setUbr" scoped="" ref="0x7fdfb5f351b0"/>
        <function-ref name="tx" scoped="" ref="0x7fdfb5f35340"/>
        <function-ref name="getUctl" scoped="" ref="0x7fdfb5f354d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fdfb5f35660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fdfb5f357f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fdfb5f35980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fdfb5f35b10"/>
        <function-ref name="rx" scoped="" ref="0x7fdfb5f35ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fdfb5f35e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fdfb5f34020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fdfb5f341b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fdfb5f34340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fdfb5f344d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fdfb5f39410" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fdfb5f39410"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fdfb5f39790"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb5f39920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fdfb5f311f0" loc="79:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fdfb5f311f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb5f31570"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb5f31700"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb5f31890"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb5f31a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb5f31bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb5f31d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb5f30020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb5f301b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb5f30340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb5f304d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb5f30660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb5f307f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb5f30980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb5f30c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb5f30da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fdfb5f33210" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fdfb5f33210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdfb5f33590"/>
        <function-ref name="isInput" scoped="" ref="0x7fdfb5f33720"/>
        <function-ref name="setResistor" scoped="" ref="0x7fdfb5f338b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdfb5f33a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdfb5f33bd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fdfb5f33d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdfb5f32020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb5f321b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fdfb5f32340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fdfb5f324d0"/>
        <function-ref name="set" scoped="" ref="0x7fdfb5f32660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fdfb5f327f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fdfb5f32980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fdfb5f32c10"/>
        <function-ref name="clr" scoped="" ref="0x7fdfb5f32da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fdfb5ead110" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fdfb5ead110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb7041230"/>
            <typename><typedef-ref name="T32khz" ref="0x7fdfb70415a0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdfb5eab020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdfb5eab9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdfb5eab4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fdfb5eabe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fdfb55c8970" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb55c8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fdfb55c8cf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fdfb55c8e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fdfb55c2a50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb55c2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fdfb55c2dd0"/>
        <function-ref name="configure" scoped="" ref="0x7fdfb55c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fdfb55c22b0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fdfb55c22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fdfb55c2630"/>
        <function-ref name="txDone" scoped="" ref="0x7fdfb55c27c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb55c9cc0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb55c9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb55c80a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb55c8230"/>
        <function-ref name="request" scoped="" ref="0x7fdfb55c83c0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb55c8550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb55c86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fdfb55c78d0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fdfb55c78d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fdfb55c7c50"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fdfb55c7de0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fdfb55c6020"/>
        <function-ref name="enableUart" scoped="" ref="0x7fdfb55c61b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fdfb55c6340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fdfb55c64d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fdfb55c6660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fdfb55c67f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fdfb55c6980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fdfb55c6b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fdfb55c6ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fdfb55c6e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fdfb55c5020"/>
        <function-ref name="getUbr" scoped="" ref="0x7fdfb55c52b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fdfb55c5440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fdfb55c55d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fdfb55c5760"/>
        <function-ref name="isUart" scoped="" ref="0x7fdfb55c58f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fdfb55c5a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7fdfb55c5c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fdfb55c5da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fdfb55c4020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fdfb55c41b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fdfb55c4340"/>
        <function-ref name="getMode" scoped="" ref="0x7fdfb55c44d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fdfb55c4860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fdfb55c49f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fdfb55c4b80"/>
        <function-ref name="tx" scoped="" ref="0x7fdfb55c4d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7fdfb55c3020"/>
        <function-ref name="disableUart" scoped="" ref="0x7fdfb55c31b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fdfb55c3340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fdfb55c34d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fdfb55c3660"/>
        <function-ref name="rx" scoped="" ref="0x7fdfb55c37f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fdfb55c3980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fdfb55c3b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fdfb55c3ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fdfb55c3e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fdfb55c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fdfb55c7130" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb55c7130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fdfb55c74b0"/>
        <function-ref name="userId" scoped="" ref="0x7fdfb55c7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fdfb5e91510" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb5e91510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fdfb5e91890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fdfb5e91a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fdfb5e90af0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb5e90af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fdfb5e90e70"/>
        <function-ref name="configure" scoped="" ref="0x7fdfb5e8f030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fdfb5e94510" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fdfb5e94510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fdfb5e94890"/>
        <function-ref name="txDone" scoped="" ref="0x7fdfb5e94a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb5e93280" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb5e93280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb5e93600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb5e93790"/>
        <function-ref name="request" scoped="" ref="0x7fdfb5e93920"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5e93ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb5e93c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fdfb5e91d20" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb5e91d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fdfb5e900e0"/>
        <function-ref name="userId" scoped="" ref="0x7fdfb5e90270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fdfb5e78a90" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb5e78a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fdfb5e78e10"/>
        <function-ref name="userId" scoped="" ref="0x7fdfb5e77020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fdfb5e8eb60" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fdfb5e8eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fdfb5e8d020"/>
        <function-ref name="txDone" scoped="" ref="0x7fdfb5e8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fdfb5e78480" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fdfb5e78480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb5e78800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fdfb5e8d5b0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fdfb5e8d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fdfb5e8d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fdfb5e8dc20" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fdfb5e8dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fdfb5e78020"/>
        <function-ref name="txDone" scoped="" ref="0x7fdfb5e781b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fdfb5e74530" loc="92:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb5e74530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fdfb5e748d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fdfb5e74a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fdfb5e71250" loc="96:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb5e71250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fdfb5e715f0"/>
        <function-ref name="configure" scoped="" ref="0x7fdfb5e71780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fdfb5e74cb0" loc="93:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb5e74cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb5e730a0"/>
        <function-ref name="requested" scoped="" ref="0x7fdfb5e73230"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5e733c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb5e73550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fdfb5e736e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb5e75780" loc="91:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb5e75780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb5e75b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb5e75cb0"/>
        <function-ref name="request" scoped="" ref="0x7fdfb5e75e40"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5e74020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb5e741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fdfb5e73930" loc="94:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb5e73930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fdfb5e73cb0"/>
        <function-ref name="userId" scoped="" ref="0x7fdfb5e73e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdfb5559ca0" loc="44:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fdfb5559ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdfb55580a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fdfb5558330" loc="45:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fdfb5558330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fdfb55586b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fdfb5558840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fdfb55589d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fdfb5558b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fdfb55543a0" loc="55:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fdfb55543a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fdfb5554740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fdfb55548d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fdfb5552210" loc="60:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fdfb5552210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fdfb55525b0"/>
        <function-ref name="configure" scoped="" ref="0x7fdfb5552740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fdfb55529d0" loc="61:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fdfb55529d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fdfb5552d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fdfb5551020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fdfb55511b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fdfb5551340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fdfb5554b20" loc="56:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb5554b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb5553020"/>
        <function-ref name="requested" scoped="" ref="0x7fdfb55531b0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5553340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb55534d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fdfb5553660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fdfb5551590" loc="62:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fdfb5551590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fdfb5551910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fdfb5551aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7fdfb5551c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fdfb5551dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fdfb5550020"/>
        <function-ref name="get" scoped="" ref="0x7fdfb55501b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fdfb5550340"/>
        <function-ref name="led0On" scoped="" ref="0x7fdfb5550980"/>
        <function-ref name="set" scoped="" ref="0x7fdfb5550660"/>
        <function-ref name="led2On" scoped="" ref="0x7fdfb55504d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fdfb55507f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fdfb5555540" loc="54:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb5555540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb55558e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb5555a70"/>
        <function-ref name="request" scoped="" ref="0x7fdfb5555c00"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5555d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb5554020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fdfb55538b0" loc="57:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb55538b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fdfb5553c30"/>
        <function-ref name="userId" scoped="" ref="0x7fdfb5553dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fdfb5550c50" loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fdfb5550c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdfb554f020"/>
        <function-ref name="runTask" scoped="" ref="0x7fdfb554f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fdfb5e6d780" loc="72:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fdfb5e6d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fdfb5e6db00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fdfb5e6dd50" loc="73:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb5e6dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb5e58100"/>
        <function-ref name="requested" scoped="" ref="0x7fdfb5e58290"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5e58420"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb5e585b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fdfb5e58740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fdfb5e6d020" loc="70:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fdfb5e6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fdfb5e6d3a0"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb5e6d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fdfb5e58990" loc="74:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb5e58990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fdfb5e58d10"/>
        <function-ref name="userId" scoped="" ref="0x7fdfb5e57020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fdfb551fb00" loc="62:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fdfb551fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fdfb551fe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fdfb551e0f0" loc="63:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fdfb551e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb551e470"/>
        <function-ref name="requested" scoped="" ref="0x7fdfb551e600"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb551e790"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb551e920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fdfb551eab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fdfb551f3a0" loc="60:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fdfb551f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fdfb551f720"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb551f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fdfb551ed00" loc="64:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fdfb551ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fdfb551d0a0"/>
        <function-ref name="userId" scoped="" ref="0x7fdfb551d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7fdfb5e39920" loc="3:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fdfb5e39920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fdfb5e39ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fdfb5e37020" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fdfb5e37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fdfb5e373a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fdfb5e37530"/>
        <function-ref name="request" scoped="" ref="0x7fdfb5e376c0"/>
        <function-ref name="granted" scoped="" ref="0x7fdfb5e37850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fdfb5e379e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fdfb5e390c0" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fdfb5e390c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fdfb5e39440"/>
        <function-ref name="stop" scoped="" ref="0x7fdfb5e395d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7fdfb5e268d0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7fdfb5e268d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fdfb5e26c50"/>
        <function-ref name="offset" scoped="" ref="0x7fdfb5e26de0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fdfb5e23020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Read" loc="49:/home/jyxk/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fdfb701fa90" loc="49:/home/jyxk/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fdfb701fa90"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fdfb701c390" loc="55:/home/jyxk/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/jyxk/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fdfb701a120" loc="63:/home/jyxk/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fdfb701fa90"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fdfb701cb10" loc="63:/home/jyxk/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fdfb701ce30" loc="63:/home/jyxk/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fdfb701fa90"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fdfb7038650" loc="60:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7fdfb6fc5bb0" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fdfb6fc5930" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fdfb6fc3c90" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fdfb6fc3a10" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fdfb6fbe020" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fdfb6fc09d0" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fdfb6fc0d00" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fdfb6fc00e0" loc="106:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fdfb6fc4130" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fdfb6fc1b50" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fdfb6fc1e80" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fdfb6faabf0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fdfb6fd7560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fdfb6faa2a0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fdfb6fd7560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fdfb6faa620" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fdfb6faa950" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fdfb6fa3620" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fdfb6fa3020" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fdfb6fa3350" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fdfb6fa46d0" loc="123:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fdfb6fa82a0" loc="96:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fdfb6fa8020" loc="96:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fdfb6fa67f0" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fdfb6fa6210" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fdfb6fa6560" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fdfb7034bf0" loc="61:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fdfb70333e0" loc="67:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fdfb7033bc0" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fdfb7031b40" loc="83:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fdfb702f2b0" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fdfb702fac0" loc="117:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fdfb7031390" loc="77:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fdfb702e670" loc="134:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fdfb702e3f0" loc="134:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fdfb7034460" loc="56:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fdfb7030350" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fdfb7030ae0" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fdfb6fa0c80" loc="113:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fdfb6fa0a00" loc="113:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fdfb6f9d2a0" loc="138:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fdfb6f9d020" loc="138:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fdfb6fa0020" loc="104:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fdfb6f9e520" loc="130:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fdfb6fb09f0" loc="177:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fdfb6fd7180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fdfb6fb0770" loc="177:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fdfb6fba600" loc="88:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fdfb6fd7560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fdfb6fba380" loc="88:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fdfb70159f0" loc="68:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fdfb6fd7560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fdfb6fbd520" loc="78:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fdfb6fd7560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fdfb6fbd2a0" loc="78:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fdfb6fb8020" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fdfb6fd7560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fdfb6fb7950" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fdfb6fb7ca0" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fdfb6fd7560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fdfb6fb9a30" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fdfb6fd7560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fdfb6fb9450" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fdfb6fb97a0" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fdfb6fd7560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fdfb6fb44a0" loc="147:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fdfb6fd8d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fdfb6fb4220" loc="147:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fdfb6fb2850" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fdfb6fd8d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fdfb6fb22a0" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fdfb6fb25c0" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fdfb6fd8d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fdfb6fb52a0" loc="136:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fdfb6fb5020" loc="136:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fdfb6fb1020" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fdfb6fd7180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fdfb6faf8c0" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fdfb6fafc10" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fdfb6fd7180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fdfb6fb1e40" loc="195:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fdfb6fd7180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fdfb7037b20" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fdfb7037b20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fdfb7024980" loc="136:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fdfb70281f0" loc="83:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fdfb7025020" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fdfb70279a0" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fdfb7027ce0" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fdfb70271f0" loc="98:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fdfb7023a10" loc="151:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fdfb7023190" loc="144:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fdfb70289d0" loc="92:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fdfb702a710" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fdfb702a490" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fdfb7024020" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fdfb70259c0" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fdfb7025d00" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fdfb70292a0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fdfb7029020" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fdfb7029aa0" loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fdfb6f79420" loc="62:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fdfb6f4c420" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fdfb6f4e700" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fdfb6f4dce0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fdfb6f4e020" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fdfb6f4ee70" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fdfb6f4f1f0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fdfb6f4f8d0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fdfb6f4d5c0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fdfb7155020" loc="62:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fdfb741add0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fdfb6efa020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fdfb6efbcc0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fdfb6efe390" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdfb6f44ec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fdfb6f43940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fdfb6efa890" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fdfb6ef97b0" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fdfb6efb560" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fdfb6ef9020" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fdfb6efeb30" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fdfb6efc350" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fdfb6efcda0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdfb6f44ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fdfb6f43940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fdfb6efcb20" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdfb6f44ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fdfb6f43940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fdfb6eec0e0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fdfb6eea730" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fdfb6eea4b0" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fdfb6ee92e0" loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fdfb6ee9060" loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fdfb6eebca0" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fdfb6eeb3e0" loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fdfb6eeca90" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fdfb6eec810" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fdfb6ef33e0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fdfb6ef3d60" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fdfb6ef3ae0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fdfb6ef2790" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fdfb6ef2510" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fdfb6ef12a0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fdfb6ef1020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fdfb6ef1990" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fdfb6f04810" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fdfb6f012a0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fdfb6f01020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fdfb6f02020" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fdfb6f09ab0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fdfb6f02760" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fdfb6f069b0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fdfb6f04120" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fdfb6f06270" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fdfb6f050e0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fdfb6f059f0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fdfb6f05770" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fdfb6f01cb0" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fdfb6f01a30" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fdfb6ec5a00" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fdfb7078a80" loc="85:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fdfb70771f0" loc="86:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fdfb70782b0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fdfb7291830" loc="52:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fdfb74d3020" loc="57:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fdfb74d2020" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fdfb74d3790" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fdfb74c7350" loc="67:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fdfb74c7ba0" loc="75:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fdfb6d9ae30" loc="44:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fdfb6d985c0" loc="45:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fdfb6d9a020" loc="42:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fdfb6d97480" loc="47:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fdfb6d9a720" loc="43:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fdfb6d98ce0" loc="46:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fdfb6d9b120" loc="40:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fdfb6d9b7f0" loc="41:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fdfb6d6d020" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fdfb6d6d770" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fdfb6d682e0" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fdfb6d68060" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fdfb6d70770" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fdfb6d6c780" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fdfb6d68bd0" loc="117:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fdfb6d6c020" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fdfb6d6f820" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fdfb6d69020" loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fdfb6d6f020" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fdfb6d738c0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fdfb6d6b020" loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fdfb6d697c0" loc="101:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fdfb6d6b7e0" loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fdfb6d70020" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fdfb6b1b350" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fdfb6b1b350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fdfb6b1bc70" loc="61:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fdfb6b18c80" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fdfb6b18c80"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fdfb6b15020" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdfb6b15020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fdfb6b11c50" loc="109:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdfb6b15020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fdfb6b14ba0" loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fdfb6b112b0" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdfb6b15020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdfb6b15020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fdfb6b12bd0" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdfb6b15020"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fdfb6b11020" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdfb6b15020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fdfb6b123b0" loc="88:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fdfb6b10480" loc="116:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdfb6b15020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fdfb6b15b80" loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdfb6b15020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fdfb6b15900" loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdfb6b15020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fdfb6b143e0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fdfb6aa3410" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fdfb6aa3410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fdfb6aa3650" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdfb6aa3650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fdfb6aa2020" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdfb6aa3650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fdfb6aa1120" loc="76:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fdfb6aa28a0" loc="71:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fdfb6aa1880" loc="82:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/jyxk/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fdfb69660b0" loc="52:/home/jyxk/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fdfb69660b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fdfb69669b0" loc="58:/home/jyxk/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fdfb6965740" loc="66:/home/jyxk/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/jyxk/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fdfb69660b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fdfb6965190" loc="66:/home/jyxk/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fdfb69654b0" loc="66:/home/jyxk/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fdfb69660b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fdfb6978a20" loc="57:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fdfb6978a20"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7fdfb6972d50" loc="89:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fdfb6978a20"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fdfb69723d0" loc="89:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fdfb6972750" loc="90:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fdfb6978a20"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7fdfb6972ab0" loc="90:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7fdfb6975940" loc="68:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fdfb6978a20"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fdfb6975350" loc="68:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fdfb6978a20"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7fdfb69756b0" loc="68:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fdfb6973b80" loc="78:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7fdfb6973900" loc="78:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fdfb6970430" loc="102:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fdfb6971db0" loc="102:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x7fdfb69701a0" loc="102:/home/jyxk/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fdfb7b33920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fdfb696ac40" loc="120:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fdfb696bc20" loc="97:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fdfb696b2b0" loc="88:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fdfb696a470" loc="102:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fdfb69698b0" loc="128:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:/home/jyxk/tinyos-main/tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7fdfb69464c0" loc="45:/home/jyxk/tinyos-main/tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7fdfb69464c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7fdfb6943020" loc="58:/home/jyxk/tinyos-main/tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:/home/jyxk/tinyos-main/tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7fdfb69464c0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fdfb69294b0" loc="189:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7fdfb6932450" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fdfb69321d0" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7fdfb6930940" loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fdfb6930340" loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7fdfb69306b0" loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7fdfb692a4c0" loc="177:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fdfb692b260" loc="177:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7fdfb692bb00" loc="177:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fdfb692be80" loc="177:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fdfb692a210" loc="177:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7fdfb6926dd0" loc="227:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7fdfb6926730" loc="227:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fdfb6926ac0" loc="227:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7fdfb692ed30" loc="138:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fdfb692fa30" loc="138:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7fdfb692e380" loc="138:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fdfb692e710" loc="138:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fdfb692ea80" loc="138:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7fdfb6928120" loc="206:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fdfb6929e70" loc="206:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fdfb68d7e20" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fdfb68d7160" loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fdfb695ec20"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7fdfb695d180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fdfb68d9af0" loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fdfb695e020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fdfb6960610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7fdfb68d8020" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fdfb695ec20"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7fdfb695d180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7fdfb68d8390" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7fdfb68d8730" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fdfb68d8ae0" loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fdfb68d8e50" loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fdfb68d6dc0" loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7fdfb68d67a0" loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fdfb68d6b30" loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7fdfb68d4780" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7fdfb68d2020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fdfb68cadb0" loc="95:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fdfb68c76a0" loc="105:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7fdfb68b8560" loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb694d5f0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7fdfb694b090"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7fdfb68b56c0" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fdfb695ec20"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7fdfb695d180"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fdfb68b5440" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7fdfb68b3d90" loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7fdfb68b0020" loc="118:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7fdfb68b17d0" loc="112:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7fdfb68b1550" loc="112:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7fdfb68b8d80" loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb694a710"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7fdfb6949020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7fdfb68b6b70" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fdfb695ec20"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7fdfb695d180"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fdfb68b6520" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7fdfb68b68e0" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fdfb695ec20"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7fdfb695d180"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7fdfb68af0e0" loc="128:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7fdfb68b92a0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb694d5f0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7fdfb694b090"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7fdfb68b9020" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb694d5f0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7fdfb694b090"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7fdfb68b42a0" loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fdfb68b4020" loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7fdfb68b4d20" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fdfb68b4aa0" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7fdfb68b35d0" loc="101:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7fdfb68b07e0" loc="123:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7fdfb68af880" loc="133:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7fdfb68b9d00" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb694a710"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7fdfb6949020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7fdfb68b9a80" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fdfb694a710"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7fdfb6949020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fdfb68bedb0" loc="90:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fdfb68bb6b0" loc="98:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fdfb67a2b30" loc="53:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fdfb679f4e0" loc="61:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fdfb679c550" loc="65:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fdfb67a0d00" loc="59:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fdfb6792580" loc="79:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fdfb679b5e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fdfb6792300" loc="79:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fdfb679b5e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fdfb67945a0" loc="53:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fdfb6793110" loc="62:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fdfb679b5e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fdfb6794e20" loc="62:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fdfb679b5e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fdfb6793a20" loc="70:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fdfb679b5e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/home/jyxk/tinyos-main/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7fdfb654b960" loc="41:/home/jyxk/tinyos-main/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7fdfb6537040" loc="84:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fdfb6538a40" loc="84:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fdfb6538d80" loc="84:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7fdfb6537880" loc="92:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7fdfb6538270" loc="76:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7fdfb653bbc0" loc="61:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7fdfb65352a0" loc="109:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fdfb6535020" loc="109:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fdfb653e980" loc="47:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7fdfb6535d40" loc="116:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fdfb6535ac0" loc="116:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7fdfb65366d0" loc="100:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fdfb6536110" loc="100:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fdfb6536440" loc="100:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7fdfb653b390" loc="54:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fdfb653b110" loc="54:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7fdfb65399e0" loc="69:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fdfb6539410" loc="69:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fdfb6539750" loc="69:/home/jyxk/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/jyxk/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fdfb64f0270" loc="68:/home/jyxk/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fdfb64f2a20" loc="61:/home/jyxk/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fdfb64f22b0" loc="54:/home/jyxk/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fdfb64f59c0" loc="53:/home/jyxk/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fdfb6438d40" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fdfb6435840" loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fdfb64385b0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fdfb6435020" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fdfb6437d30" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fdfb643ddc0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fdfb6437570" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fdfb6328070" loc="56:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fdfb6327190" loc="73:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fdfb63297c0" loc="46:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fdfb63288e0" loc="65:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fdfb6327ac0" loc="81:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fdfb62b3120" loc="62:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fdfb62b0cb0" loc="95:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fdfb62ad4e0" loc="105:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fdfb6238300" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
              <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fdfb623c950" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fdfb623cca0" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fdfb6238020" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fdfb6231770" loc="59:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fdfb62314f0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fdfb622f940" loc="71:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fdfb622f6c0" loc="71:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fdfb622eab0" loc="85:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fdfb622e830" loc="85:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fdfb6223b00" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fdfb6223540" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fdfb6223870" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fdfb621e620" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fdfb621e020" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fdfb621e350" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fdfb621d660" loc="112:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fdfb62202a0" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fdfb6220020" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fdfb621f750" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fdfb621f170" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fdfb621f4c0" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7fdfb61bd630" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fdfb61bd020" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7fdfb61bd3a0" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7fdfb61bf670" loc="15:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7fdfb61be620" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fdfb61be020" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fdfb6fc9ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fdfb6fc5180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7fdfb61be390" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7fdfb61a0e30" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7fdfb61a06c0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7fdfb61a8120" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7fdfb61a7560" loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7fdfb61a42a0" loc="94:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fdfb61a4020" loc="94:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7fdfb61a7de0" loc="79:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7fdfb61a8c90" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fdfb61a8a10" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7fdfb61a4b00" loc="100:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7fdfb61a56e0" loc="85:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7fdfb61b0990" loc="71:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7fdfb61af350" loc="81:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7fdfb61b0020" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7fdfb61b3c30" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7fdfb61ad020" loc="91:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fdfb61afc50" loc="91:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7fdfb61b2c60" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7fdfb61aba60" loc="69:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fdfb61ab7e0" loc="69:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7fdfb61aa5c0" loc="80:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fdfb61aa340" loc="80:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fdfb6079de0" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fdfb6079810" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fdfb6079b50" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7fdfb6073ac0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fdfb6073840" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fdfb6071930" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fdfb6071360" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fdfb60716a0" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7fdfb6072740" loc="65:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7fdfb60702c0" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fdfb606e920" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fdfb606ec60" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fdfb6070020" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7fdfb6073070" loc="72:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fdfb6075720" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fdfb6076db0" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fdfb6075130" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fdfb6075480" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fdfb604f5b0" loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fdfb604f330" loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7fdfb604fdf0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fdfb604dcf0" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdfb74cecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fdfb604d700" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7fdfb604da60" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7fdfb604bb50" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fdfb5ff4230" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fdfb6015450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fdfb6015870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fdfb5fded70" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fdfb5fdeaf0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fdfb5fde350" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fdfb5fb8af0" loc="213:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fdfb5fc3790" loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fdfb5fd02a0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fdfb60463b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fdfb6046bf0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fdfb5fd0020" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fdfb60463b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fdfb6046bf0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fdfb5fc57b0" loc="123:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fdfb5fcd780" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fdfb6041360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fdfb6041ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fdfb5fcd500" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fdfb6041360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fdfb6041ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fdfb5fbde70" loc="180:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fdfb5fb9480" loc="197:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fdfb5fced20" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fdfb6043290"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fdfb6043a20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fdfb5fcc020" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fdfb6041360"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fdfb6041ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fdfb5fc9d50" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fdfb5fc9ad0" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fdfb5fc93b0" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fdfb5fbd740" loc="179:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fdfb5fce530" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fdfb6043290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fdfb6043a20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fdfb5fce2b0" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fdfb6043290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fdfb6043a20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fdfb5fcb1f0" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fdfb5fbb5d0" loc="181:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fdfb5fcbbd0" loc="90:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fdfb5fcb950" loc="90:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fdfb5fc7730" loc="113:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fdfb5fc5020" loc="118:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fdfb5fbe840" loc="177:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fdfb5fc0790" loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fdfb5fc47e0" loc="133:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fdfb5fbd020" loc="178:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fdfb5fc2020" loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fdfb5fbbcf0" loc="182:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fdfb5fc8570" loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fdfb6050330"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fdfb6048a50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fdfb5fba4c0" loc="187:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fdfb5fb8350" loc="207:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fdfb5fcc9c0" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fdfb5fcc740" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fdfb7b33520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fdfb5fb64d0" loc="224:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fdfb5fb6250" loc="224:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fdfb5fd0a80" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fdfb60463b0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fdfb6046bf0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fdfb5fc4020" loc="128:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fdfb5fc2770" loc="153:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fdfb5fbe020" loc="174:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fdfb6015450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fdfb6015870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fdfb5fbfcf0" loc="174:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fdfb6015450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fdfb6015870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fdfb5fbf2a0" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fdfb6029420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fdfb6029840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fdfb5fbf020" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fdfb6029420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fdfb6029840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fdfb5fb6d90" loc="231:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdfb7b33160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fdfb5fbacb0" loc="192:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fdfb5fc8d80" loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdfb74d7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fdfb5fb9be0" loc="202:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fdfb5fc0020" loc="158:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fdfb5fc3020" loc="138:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fdfb5e8bd50" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
