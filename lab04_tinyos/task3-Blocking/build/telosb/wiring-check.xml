<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="65:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f15aa84a150"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f15aaaa2df0"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f15aaaa2df0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f15aa8e0590"/></to>
    </wire>
    <wire loc="67:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7f15aa865020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15aa41e370"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15aa41e370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f15aa5bf610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7f15aa857670"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15aa418c90"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15aa418c90"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f15aa5bf610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x7f15aa852be0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15aa4116d0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15aa4116d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f15aa5bf610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f15aa840a80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f15aa8c8460"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f15aa8c8460"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f15aa833dc0"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f15aaa9d320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15a9e6fb20"/></to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f15aaa9d320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15a97adca0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f15aaa9d320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15aa2fabc0"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f15aaa9d320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15a9e99d70"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f15aaa9d320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15aa5b7400"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f15aa8e0c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f15aaf323a0"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f15aaf323a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f15aaadd140"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f15aa8d36c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15aaa9f300"/></to>
    </wire>
    <wire loc="48:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f15aaa9f300"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15aaa99510"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f15aa8d3dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f15aaa9d320"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f15aaa99c20"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f15aaa9a910"/></to>
    </wire>
    <wire loc="46:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f15aaa9a910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15aaa7a850"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f15aaa98380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15aaa9b6d0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f15aaa98a60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15aa808920"/></to>
    </wire>
    <wire loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f15aaa7a850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15aaa617e0"/></to>
    </wire>
    <wire loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f15aaa71de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f15aaa60020"/></to>
    </wire>
    <wire loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f15aabb54c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f15aaa5f360"/></to>
    </wire>
    <wire loc="113:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f15aaa1c5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f15aa9586d0"/></to>
    </wire>
    <wire loc="126:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f15aaa0a020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f15aa951b30"/></to>
    </wire>
    <wire loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f15aaa13700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f15aa95e160"/></to>
    </wire>
    <wire loc="149:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f15aa9f7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f15aa937cb0"/></to>
    </wire>
    <wire loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f15aaa1aaa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f15aa95f480"/></to>
    </wire>
    <wire loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f15aa9fd020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f15aa937020"/></to>
    </wire>
    <wire loc="170:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f15aa9f4a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f15aa920cb0"/></to>
    </wire>
    <wire loc="154:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f15aaa055a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f15aa931220"/></to>
    </wire>
    <wire loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f15aaa1db10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f15aa9af9d0"/></to>
    </wire>
    <wire loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f15aa9f9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f15aa9462f0"/></to>
    </wire>
    <wire loc="134:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f15aa9ff3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f15aa947610"/></to>
    </wire>
    <wire loc="133:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f15aaa095a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f15aa948220"/></to>
    </wire>
    <wire loc="115:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f15aaa12700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f15aa9567a0"/></to>
    </wire>
    <wire loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f15aa9f6a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f15aa92f2f0"/></to>
    </wire>
    <wire loc="140:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f15aaa08be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f15aa9416d0"/></to>
    </wire>
    <wire loc="114:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f15aaa19890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f15aa957ac0"/></to>
    </wire>
    <wire loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f15aaa2d060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15aa9bd540"/></to>
    </wire>
    <wire loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f15aa9fdda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f15aa930610"/></to>
    </wire>
    <wire loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f15aaa230c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f15aa960020"/></to>
    </wire>
    <wire loc="161:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f15aaa03a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f15aa92a6d0"/></to>
    </wire>
    <wire loc="101:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f15aaa0d6d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f15aa966a90"/></to>
    </wire>
    <wire loc="142:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f15aa9f8a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f15aa93f7a0"/></to>
    </wire>
    <wire loc="100:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f15aaa15cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f15aa967de0"/></to>
    </wire>
    <wire loc="141:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f15aa9fe1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f15aa940ac0"/></to>
    </wire>
    <wire loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f15aa9f5a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f15aa9277a0"/></to>
    </wire>
    <wire loc="147:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f15aaa060c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f15aa939b30"/></to>
    </wire>
    <wire loc="120:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f15aaa0c6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15aa9b53e0"/></to>
    </wire>
    <wire loc="162:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f15aa9fcb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f15aa928ac0"/></to>
    </wire>
    <wire loc="128:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f15aa9faa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f15aa94fcb0"/></to>
    </wire>
    <wire loc="169:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f15aa9fba20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f15aa920020"/></to>
    </wire>
    <wire loc="127:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f15aaa00570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f15aa94f020"/></to>
    </wire>
    <wire loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f15aaa01020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f15aa922b30"/></to>
    </wire>
    <wire loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f15aa9bb450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f15aa9bcd80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f15aa9bbaa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f15aa91baa0"/></to>
    </wire>
    <wire loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f15aa9ba120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f15aa917260"/></to>
    </wire>
    <wire loc="102:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15aa965930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15aa9bd540"/></to>
    </wire>
    <wire loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f15aa963020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f15aa9bcd80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15aa95d020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15aa9bd540"/></to>
    </wire>
    <wire loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f15aa95c7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f15aa9bcd80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15aa955610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15aa9bd540"/></to>
    </wire>
    <wire loc="117:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f15aa954c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f15aa9bcd80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f15aa9b32f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f15aa9b4bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f15aa9b3940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f15aa9179f0"/></to>
    </wire>
    <wire loc="123:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f15aa9b2020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f15aa916240"/></to>
    </wire>
    <wire loc="129:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15aa94eb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15aa9b53e0"/></to>
    </wire>
    <wire loc="130:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f15aa94c2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f15aa9b4bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15aa945160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15aa9b53e0"/></to>
    </wire>
    <wire loc="137:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f15aa9447a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f15aa9b4bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15aa93e610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15aa9b53e0"/></to>
    </wire>
    <wire loc="144:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f15aa93dc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f15aa9b4bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15aa936b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15aa9b53e0"/></to>
    </wire>
    <wire loc="151:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f15aa9342f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f15aa9b4bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15aa92e160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15aa9b53e0"/></to>
    </wire>
    <wire loc="158:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f15aa92d7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f15aa9b4bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15aa926610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15aa9b53e0"/></to>
    </wire>
    <wire loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f15aa925c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f15aa9b4bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15aa91fb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15aa9b53e0"/></to>
    </wire>
    <wire loc="172:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f15aa91d2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f15aa9b4bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f15aafa14f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f15aaadb040"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f15aaad7490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f15aaec93b0"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f15aa808920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15aa8337c0"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f15aa8283a0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f15aa80b060"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f15aa80b060"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f15aa5f1020"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f15aa82e660"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f15aa80a380"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f15aa80a380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f15aa5ddb90"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f15aa82d980"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f15aa8096a0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f15aa8096a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f15aa5d8710"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f15aa5e02f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f15aa7b19a0"/></to>
    </wire>
    <wire loc="486:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f15aa7b19a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa68ed10"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f15aa5dcde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f15aa7af9a0"/></to>
    </wire>
    <wire loc="487:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f15aa7af9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa689740"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f15aa5d7930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f15aa7ad9a0"/></to>
    </wire>
    <wire loc="488:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f15aa7ad9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa683100"/></to>
    </wire>
    <wire loc="442:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f15aa7f3810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa727740"/></to>
    </wire>
    <wire loc="455:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f15aa7de810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6f7100"/></to>
    </wire>
    <wire loc="531:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f15aa795ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6e8100"/></to>
    </wire>
    <wire loc="551:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f15aa770cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa65d740"/></to>
    </wire>
    <wire loc="532:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f15aa793cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6e4d10"/></to>
    </wire>
    <wire loc="460:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f15aa7da810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6ed740"/></to>
    </wire>
    <wire loc="473:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f15aa7c69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6bd460"/></to>
    </wire>
    <wire loc="497:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f15aa7a19a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa667100"/></to>
    </wire>
    <wire loc="535:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f15aa78ccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6da100"/></to>
    </wire>
    <wire loc="545:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f15aa77ccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa67a740"/></to>
    </wire>
    <wire loc="557:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f15aa768cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa658100"/></to>
    </wire>
    <wire loc="445:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f15aa7ec810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa718740"/></to>
    </wire>
    <wire loc="536:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f15aa78acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6d6d10"/></to>
    </wire>
    <wire loc="450:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f15aa7e8810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa70fd10"/></to>
    </wire>
    <wire loc="463:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f15aa7d4810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6df740"/></to>
    </wire>
    <wire loc="476:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f15aa7bf9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6af100"/></to>
    </wire>
    <wire loc="489:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f15aa7ab9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa67fd10"/></to>
    </wire>
    <wire loc="500:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f15aa79b9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa658100"/></to>
    </wire>
    <wire loc="440:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f15aa7f7810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa730100"/></to>
    </wire>
    <wire loc="453:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f15aa7e2810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa701d80"/></to>
    </wire>
    <wire loc="466:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f15aa7ce810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6d1740"/></to>
    </wire>
    <wire loc="530:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f15aa797cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6e8100"/></to>
    </wire>
    <wire loc="548:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f15aa776cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa66c740"/></to>
    </wire>
    <wire loc="555:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f15aa76acb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa658100"/></to>
    </wire>
    <wire loc="541:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f15aa782cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa692100"/></to>
    </wire>
    <wire loc="471:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f15aa7ca810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6c7e60"/></to>
    </wire>
    <wire loc="484:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f15aa7b59a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa697740"/></to>
    </wire>
    <wire loc="495:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f15aa7a59a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa671d10"/></to>
    </wire>
    <wire loc="549:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f15aa774cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa667100"/></to>
    </wire>
    <wire loc="538:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f15aa788cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6a0100"/></to>
    </wire>
    <wire loc="443:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f15aa7f1810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa722100"/></to>
    </wire>
    <wire loc="456:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f15aa7dc810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6f2d10"/></to>
    </wire>
    <wire loc="493:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f15aa7a99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa67a740"/></to>
    </wire>
    <wire loc="461:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f15aa7d8810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6e8100"/></to>
    </wire>
    <wire loc="474:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f15aa7c49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6b9e00"/></to>
    </wire>
    <wire loc="498:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f15aa79f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa663d10"/></to>
    </wire>
    <wire loc="540:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f15aa784cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa697740"/></to>
    </wire>
    <wire loc="438:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f15aa7f9900"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa760d10"/></to>
    </wire>
    <wire loc="451:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f15aa7e6810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa70a740"/></to>
    </wire>
    <wire loc="464:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f15aa7d2810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6da100"/></to>
    </wire>
    <wire loc="477:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f15aa7bd9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6aad10"/></to>
    </wire>
    <wire loc="542:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f15aa780cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6d1740"/></to>
    </wire>
    <wire loc="546:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f15aa77acb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa675100"/></to>
    </wire>
    <wire loc="552:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f15aa76ecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa658100"/></to>
    </wire>
    <wire loc="482:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f15aa7b99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6a0100"/></to>
    </wire>
    <wire loc="543:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f15aa77ecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6cb100"/></to>
    </wire>
    <wire loc="441:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f15aa7f5810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa72cd10"/></to>
    </wire>
    <wire loc="454:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f15aa7e0810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6fc740"/></to>
    </wire>
    <wire loc="467:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f15aa7cc810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6cb100"/></to>
    </wire>
    <wire loc="539:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f15aa786cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa69cd10"/></to>
    </wire>
    <wire loc="550:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f15aa772cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa663d10"/></to>
    </wire>
    <wire loc="472:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f15aa7c89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6c29f0"/></to>
    </wire>
    <wire loc="485:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f15aa7b39a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa692100"/></to>
    </wire>
    <wire loc="496:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f15aa7a39a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa66c740"/></to>
    </wire>
    <wire loc="444:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f15aa7ee810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa71ed10"/></to>
    </wire>
    <wire loc="494:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f15aa7a79a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa675100"/></to>
    </wire>
    <wire loc="449:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f15aa7ea810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa713100"/></to>
    </wire>
    <wire loc="462:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f15aa7d6810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6e4d10"/></to>
    </wire>
    <wire loc="475:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f15aa7c29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6b4740"/></to>
    </wire>
    <wire loc="499:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f15aa79d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa65d740"/></to>
    </wire>
    <wire loc="439:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f15aa803810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa735740"/></to>
    </wire>
    <wire loc="452:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f15aa7e4810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa705100"/></to>
    </wire>
    <wire loc="465:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f15aa7d0810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6d6d10"/></to>
    </wire>
    <wire loc="478:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f15aa7bb9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6a5740"/></to>
    </wire>
    <wire loc="534:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f15aa78eca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6df740"/></to>
    </wire>
    <wire loc="547:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f15aa778cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa671d10"/></to>
    </wire>
    <wire loc="533:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f15aa790cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6df740"/></to>
    </wire>
    <wire loc="483:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f15aa7b79a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa69cd10"/></to>
    </wire>
    <wire loc="554:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f15aa76ccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa65d740"/></to>
    </wire>
    <wire loc="558:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f15aa766cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa67fd10"/></to>
    </wire>
    <wire loc="529:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f15aa7999f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15aa6ed740"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f15aa5bf610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f15aa5b61d0"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f15aa5b61d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15aa43f150"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f15aa5b7400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15aa4ba020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f15aa5ada80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f15aa430790"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f15aa4ba020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15a9992c40"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f15aa439640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15aa48e2f0"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f15aa489850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f15aa4ba870"/></to>
    </wire>
    <wire loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f15aa4ba870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f15a998b890"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f15aa42fa60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f15aa533900"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f15aa533900"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f15aa516cf0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f15a9992c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15a9975660"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f15a99840a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f15a99914f0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f15a99914f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f15a9974020"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f15a9987c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f15aa533900"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f15a9970190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f15a997a340"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f15a997a340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f15aa58d8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15a996f770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15a9979a80"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15a9979a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15aa58b560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f15a996ea80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f15a9978da0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f15a9978da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f15aa588020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f15aa58d8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f15aaa0c6c0"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15aa58b560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f15aaa0a020"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f15aa588020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f15aaa00570"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f15aa58d8b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f15aaa0c6c0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15aa58b560"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f15aaa08be0"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f15aa588020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f15aa9fe1f0"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f15aa58d8b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f15aaa0c6c0"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15aa58b560"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f15aaa060c0"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f15aa588020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f15aa9fd020"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f15aa58d8b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f15aaa0c6c0"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15aa58b560"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f15aaa055a0"/></to>
    </wire>
    <wire loc="76:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f15aa588020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f15aa9fdda0"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f15aa58d8b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f15aaa0c6c0"/></to>
    </wire>
    <wire loc="79:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15aa58b560"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f15aaa03a50"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f15aa588020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f15aa9fcb80"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f15aa58d8b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f15aaa0c6c0"/></to>
    </wire>
    <wire loc="83:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15aa58b560"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f15aaa01020"/></to>
    </wire>
    <wire loc="84:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f15aa588020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f15aa9fba20"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f15aa4f80f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f15aa531990"/></to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f15aa531990"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f15aa52ab80"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f15aa51cc50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f15aaa0c6c0"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f15aa4859c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f15aafa14f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f15aa433a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f15aafa14f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f15a9e95020"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f15a9ebc930"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f15a9e90100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f15a9ec4020"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f15a9ec4020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f15a98d7750"/></to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f15a9e90d50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f15a9ec4c30"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f15a9ec4c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f15aa35f7e0"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f15a9e727e0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f15a9e935f0"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f15aa35f7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f15aa2fe400"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f15a9ec38b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f15aa35b470"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f15aa35b470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f15aa300cb0"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f15a9ec1020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f15aa359b20"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f15aa359b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f15aa2fd060"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f15a98d5460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15aa3bbcf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f15a98d40e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f15aa35b470"/></to>
    </wire>
    <wire loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f15aa3bbcf0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15aa36f580"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f15aa36e400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f15aa3643f0"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f15aa3643f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f15aa3547d0"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f15aa36d060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f15aa35b470"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f15aa36c720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f15aa35f7e0"/></to>
    </wire>
    <wire loc="169:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f15aa36b480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f15aafa14f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f15aa36bc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f15aafa14f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f15aa3603b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f15aa2f72f0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f15aa2f72f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f15aa2e6450"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f15aa35f1d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f15aa3006c0"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f15aa2fabc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15aa2e8d60"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f15aa2f3940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f15aa358620"/></to>
    </wire>
    <wire loc="69:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f15aa2fd9f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15aa2f6e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f15aa2fc760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f15aa2f6320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f15aa2f3020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f15a9edb8d0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f15aa2f6e10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15aa1b5830"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f15aa2f6320"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f15aa1b5110"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f15aa1b4760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f15aa2f3020"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f15aa2dedc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f15aa2f3940"/></to>
    </wire>
    <wire loc="71:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f15aa1b1590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f15aa2f3940"/></to>
    </wire>
    <wire loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f15aa1a8cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f15aa2f3940"/></to>
    </wire>
    <wire loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f15aa1b30e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f15aa2dcad0"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f15aa1b39d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f15aa2e04a0"/></to>
    </wire>
    <wire loc="77:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f15aa2d6e30"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f15aa1adb70"/></to>
    </wire>
    <wire loc="78:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f15aa2d2e00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f15aa182080"/></to>
    </wire>
    <wire loc="17:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f15aa182080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f15a9eee0c0"/></to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f15aa19ed20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f15aa182890"/></to>
    </wire>
    <wire loc="13:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f15aa182890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f15a9ef4440"/></to>
    </wire>
    <wire loc="332:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f15aa27fe40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f15aafa14f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f15aa2b6d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f15aafa14f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f15aa281400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f15aafa14f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f15aa27a0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f15aafa14f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f15aa1b0c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f15aafa14f0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f15aa1af480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f15aafa14f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f15aa180020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f15a9ef3440"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f15a9ef3440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f15aa115210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f15a9ef4440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f15aa119b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f15a9ef2020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f15a9eee920"/></to>
    </wire>
    <wire loc="19:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15a9eed020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15a9ef5020"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15a9ef5020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15aa11b320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f15a9ef5c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f15a9817020"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f15a9817020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f15a9fbdd50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f15aa113600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f15a9ef2020"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15a9811440"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15aa117dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f15aa114370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15a9819340"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15a9819340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15a9fbea60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f15aa10ebe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f15a9812c10"/></to>
    </wire>
    <wire loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f15a9812c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f15a9fc1ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15aa117dd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15aa089e70"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f15aa115210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f15aa087890"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f15aa119b50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f15aa088790"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15aa11b320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15aa0890d0"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f15aa0853e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f15aa113600"/></to>
    </wire>
    <wire loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f15aa0865b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f15aa114370"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f15aa0805b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f15aa10ebe0"/></to>
    </wire>
    <wire loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f15aa085a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f15aa072550"/></to>
    </wire>
    <wire loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f15aa072550"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f15aa068cc0"/></to>
    </wire>
    <wire loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f15aa07f020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f15a9fd9110"/></to>
    </wire>
    <wire loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f15a9fd9110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f15aa531990"/></to>
    </wire>
    <wire loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f15aa07c120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f15aa8c8460"/></to>
    </wire>
    <wire loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f15aa06c080"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f15aa063910"/></to>
    </wire>
    <wire loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f15aa070ca0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f15aa068410"/></to>
    </wire>
    <wire loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f15aa062210"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f15aa786cc0"/></to>
    </wire>
    <wire loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f15aa05f1f0"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f15aa784cc0"/></to>
    </wire>
    <wire loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f15aa05d1f0"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f15aa782cc0"/></to>
    </wire>
    <wire loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f15aa05b1f0"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f15aa77ecc0"/></to>
    </wire>
    <wire loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f15aa0591f0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f15aa780cc0"/></to>
    </wire>
    <wire loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f15a9816020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f15aa072550"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15a98177c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15a9fbc590"/></to>
    </wire>
    <wire loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15a9fbc590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15a9f29060"/></to>
    </wire>
    <wire loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15a9fba370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15a9811440"/></to>
    </wire>
    <wire loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f15a9fbdd50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f15a9f2bbf0"/></to>
    </wire>
    <wire loc="106:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f15a9f2bbf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f15a97a93a0"/></to>
    </wire>
    <wire loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f15a9fc1ce0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f15a9fb75c0"/></to>
    </wire>
    <wire loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15a9fbea60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15a9f2ce60"/></to>
    </wire>
    <wire loc="105:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15a9f2ce60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15a97aa540"/></to>
    </wire>
    <wire loc="108:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15a9f29060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15a97a88b0"/></to>
    </wire>
    <wire loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f15a9fa6690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f15aa06c080"/></to>
    </wire>
    <wire loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15a9f29930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15a9fba370"/></to>
    </wire>
    <wire loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15a9fa44b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15a9f29060"/></to>
    </wire>
    <wire loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15a9f0e9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15a9f2a400"/></to>
    </wire>
    <wire loc="107:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15a9f2a400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15a97a9b20"/></to>
    </wire>
    <wire loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f15a9f24b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f15aa070ca0"/></to>
    </wire>
    <wire loc="109:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15a97a7210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15a9f29930"/></to>
    </wire>
    <wire loc="111:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f15a97a79d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f15a97ac330"/></to>
    </wire>
    <wire loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f15a97a4c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f15aafa14f0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f15a97743a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f15a9f24b20"/></to>
    </wire>
    <wire loc="82:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f15a9774b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f15a9f0e400"/></to>
    </wire>
    <wire loc="84:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15a97730f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15a9f0e9d0"/></to>
    </wire>
    <wire loc="85:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15a9773d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15a9f0d720"/></to>
    </wire>
    <wire loc="114:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f15a9e891d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f15aafa14f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f15a9e6b300"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f15a9e727e0"/></to>
    </wire>
    <wire loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f15a9e630f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f15aaaa2df0"/></to>
    </wire>
    <wire loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f15a9e63810"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f15aa3603b0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/jyxk/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/jyxk/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/jyxk/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BlinkC" loc="51:BlinkC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/jyxk/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aa8c7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f15aa8c79f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aa8c7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f15aa8c79f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aa8c7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f15aa8c79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aa8c7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f15aa8c79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f15aa87b550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BigQueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f15aa9ef890" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f15aa9efc30" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f15aa9ee020" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f15aa9ee3a0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f15aa9ee720" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f15aa9eea90" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f15aa9eee20" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f15aa9ec200" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f15aa9ec5d0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f15aa9b1e80" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f15aa9ad270" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/jyxk/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f15aa75f1d0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f15aa75f580" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f15aa75f930" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f15aa75fce0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f15aa75e0d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f15aa56bcc0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f15aa56bcc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f15aa52ba40" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f15aa52ba40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f15aa515570" loc="55:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f15aa515570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f15aa515d40" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f15aa515d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f15aa514160" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f15aa514160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f15aa514940" loc="58:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f15aa514940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f15aa514d10" loc="59:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f15aa513540" loc="60:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f15aa513540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f15aa4f46e0" loc="52:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f15aa4f46e0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f15aa4f1020" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f15aa4f1020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f15aa4f1410" loc="54:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f15aa4f1410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f15aa4f1bf0" loc="55:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f15aa4f1bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f15aa4f0020" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f15aa4b5cd0" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15aa4b5cd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f15aa47f230" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15aa47f230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f15aa47f560" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f15aa431de0" loc="46:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15aa431de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f15aa4088c0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f15aa87b550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f15aa3d70d0" loc="43:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f15aa87b550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f15aa3b40d0" loc="45:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/jyxk/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f15a9f9f020" loc="89:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f15a9f920d0" loc="42:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f15a9f77800" loc="52:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BigQueueC" loc="42:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc" abstract="">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f15a9ebe500" loc="42:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f15a9ebe500"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f15a9ebe890" loc="42:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f15aaa9d320" loc="58:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f15aaa9d320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aaa9d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f15aaaa2df0" loc="57:/home/jyxk/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f15aaaa2df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f15aaaa11c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15aaa9f300" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15aaa9f300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aaa9f680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f15aaa98380" loc="6:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f15aaa98380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aaa98700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15aaa99510" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15aaa99510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aaa99890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f15aaa99c20" loc="5:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f15aaa99c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aaa98020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f15aaa98a60" loc="7:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f15aaa98a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aaa98de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15aaa9b6d0" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15aaa9b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aaa9ba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f15aaa9a910" loc="39:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f15aaa9a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aaa9ac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f15aaa71de0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f15aaa71de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f15aaa76c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f15aaa76310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f15aaa764a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f15aaa76630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f15aaa76180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f15aaa767c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f15aaa76950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f15aaa76ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15aaa7a850" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15aaa7a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aaa7abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f15aaa60020" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f15aaa60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f15aaa5f020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f15aaa60530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f15aaa606c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f15aaa60850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f15aaa603a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f15aaa609e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f15aaa60b70"/>
        <function-ref name="initClocks" scoped="" ref="0x7f15aaa60d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f15aaa5f360" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f15aaa5f360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f15aaa5f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15aaa617e0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15aaa617e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aaa61b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f15aaa1c5a0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f15aaa1c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aaa1c920"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aaa1cab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aaa1cc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aaa1cdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aaa1b020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aaa1b1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aaa1b340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aaa1b4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aaa1b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f15aaa0a020" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f15aaa0a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aaa0a3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aaa0a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aaa0a6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aaa0a850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aaa0a9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aaa0ab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aaa0ad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aaa09020"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aaa091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f15aaa13700" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f15aaa13700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aaa13a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aaa13c10"/>
        <function-ref name="captured" scoped="" ref="0x7f15aaa13da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aaa12020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aaa121b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aaa12340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f15aa9f7a20" loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f15aa9f7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa9f7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aa9f6020"/>
        <function-ref name="captured" scoped="" ref="0x7f15aa9f61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa9f6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa9f64d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aa9f6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f15aaa1aaa0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f15aaa1aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aaa1ae20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aaa19020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aaa191b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aaa19340"/>
        <function-ref name="fired" scoped="" ref="0x7f15aaa194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f15aa9fd020" loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f15aa9fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa9fd3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aa9fd530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aa9fd6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aa9fd850"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa9fd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f15aa9f4a20" loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f15aa9f4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa9f4da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aa9f3020"/>
        <function-ref name="captured" scoped="" ref="0x7f15aa9f31b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa9f3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa9f34d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aa9f3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f15aaa055a0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f15aaa055a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aaa05920"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aaa05ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aaa05c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aaa05dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aaa03020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aaa031b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aaa03340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aaa034d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aaa03660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f15aaa1db10" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f15aaa1db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aaa24020"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aaa241b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aaa24340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aaa244d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aaa24660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aaa247f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aaa24980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aaa24b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aaa24ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f15aa9f9a20" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f15aa9f9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa9f9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aa9f8020"/>
        <function-ref name="captured" scoped="" ref="0x7f15aa9f81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa9f8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa9f84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aa9f8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f15aa9ff3e0" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f15aa9ff3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa9ff760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aa9ff8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aa9ffa80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aa9ffc10"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa9ffda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f15aaa095a0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f15aaa095a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aaa09a20"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aaa09bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aaa09d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aaa08020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aaa081b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aaa08340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aaa084d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aaa08660"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aaa087f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f15aaa12700" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f15aaa12700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aaa12a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aaa12c10"/>
        <function-ref name="captured" scoped="" ref="0x7f15aaa12da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aaa0c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aaa0c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aaa0c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f15aa9f6a20" loc="69:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f15aa9f6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa9f6da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aa9f5020"/>
        <function-ref name="captured" scoped="" ref="0x7f15aa9f51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa9f5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa9f54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aa9f5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f15aaa08be0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f15aaa08be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aaa07020"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aaa071b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aaa07340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aaa074d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aaa07660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aaa077f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aaa07980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aaa07b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aaa07ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f15aaa19890" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f15aaa19890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aaa19c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aaa19da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aaa14020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aaa141b0"/>
        <function-ref name="fired" scoped="" ref="0x7f15aaa14340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f15aaa2d060" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f15aaa2d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aaa2d3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15aaa2d570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aaa2d700"/>
        <function-ref name="get" scoped="" ref="0x7f15aaa2d890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aaa2da20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aaa2dbb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aaa2dd40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aaa2c020"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aaa2c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f15aaa2c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15aaa2c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f15aa9fdda0" loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f15aa9fdda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa9fc180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aa9fc310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aa9fc4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aa9fc630"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa9fc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f15aaa230c0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f15aaa230c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aaa23440"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aaa235d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aaa23760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aaa238f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aaa23a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aaa23c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aaa23da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aaa1c020"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aaa1c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f15aaa03a50" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f15aaa03a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aaa03dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aaa02020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aaa021b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aaa02340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aaa024d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aaa02660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aaa027f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aaa02980"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aaa02b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f15aaa0d6d0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f15aaa0d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aaa0da50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aaa0dbe0"/>
        <function-ref name="captured" scoped="" ref="0x7f15aaa0dd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aaa13020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aaa131b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aaa13340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f15aa9f8a20" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f15aa9f8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa9f8da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aa9f7020"/>
        <function-ref name="captured" scoped="" ref="0x7f15aa9f71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa9f7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa9f74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aa9f7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f15aaa15cf0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f15aaa15cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aaa1a0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aaa1a230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aaa1a3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aaa1a550"/>
        <function-ref name="fired" scoped="" ref="0x7f15aaa1a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f15aa9fe1f0" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f15aa9fe1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa9fe570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aa9fe700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aa9fe890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aa9fea20"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa9febb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f15aa9f5a20" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f15aa9f5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa9f5da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aa9f4020"/>
        <function-ref name="captured" scoped="" ref="0x7f15aa9f41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa9f4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa9f44d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aa9f4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f15aaa060c0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f15aaa060c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aaa06440"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aaa065d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aaa06760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aaa068f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aaa06a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aaa06c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aaa06da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aaa05020"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aaa051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f15aaa0c6c0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f15aaa0c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aaa0ca40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15aaa0cbd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aaa0cd60"/>
        <function-ref name="get" scoped="" ref="0x7f15aaa0b020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aaa0b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aaa0b340"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aaa0b4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aaa0b660"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aaa0b7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f15aaa0b980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15aaa0bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f15aa9fcb80" loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f15aa9fcb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa9fb020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aa9fb1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aa9fb340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aa9fb4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa9fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f15aa9faa20" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f15aa9faa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa9fada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aa9f9020"/>
        <function-ref name="captured" scoped="" ref="0x7f15aa9f91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa9f9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa9f94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aa9f9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f15aa9fba20" loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f15aa9fba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa9fa020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aa9fa1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aa9fa340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aa9fa4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa9fa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f15aaa00570" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f15aaa00570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aaa008f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aaa00a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aaa00c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aaa00da0"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa9ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f15aaa01020" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f15aaa01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aaa013a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aaa01530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aaa016c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aaa01850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aaa019e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aaa01b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aaa01d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aaa00020"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aaa001b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f15aa9bbaa0" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f15aa9bbaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa9bbe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f15aa9bb450" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f15aa9bb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa9bb7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f15aa9ba120" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f15aa9ba120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa9ba4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f15aa9bcd80" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f15aa9bcd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa9bb180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15aa9bd540" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15aa9bd540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aa9bd8c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15aa9bda50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa9bdbe0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa9bdd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa9bc020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa9bc1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aa9bc340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa9bc4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa9bc660"/>
        <function-ref name="setMode" scoped="" ref="0x7f15aa9bc7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15aa9bc980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f15aa9b3940" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f15aa9b3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa9b3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f15aa9b32f0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f15aa9b32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa9b3670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f15aa9b2020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f15aa9b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa9b23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f15aa9b4bf0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f15aa9b4bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa9b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15aa9b53e0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15aa9b53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aa9b5760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15aa9b58f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa9b5a80"/>
        <function-ref name="get" scoped="" ref="0x7f15aa9b5c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa9b5da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa9b4020"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aa9b41b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa9b4340"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa9b44d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f15aa9b4660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15aa9b47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f15aa966a90" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f15aa966a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa966e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aa965020"/>
        <function-ref name="captured" scoped="" ref="0x7f15aa9651b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa965340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa9654d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aa965660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f15aa9af9d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f15aa9af9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aa9afd50"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aa967020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa9671b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aa967340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aa9674d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa967660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aa9677f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aa967980"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aa967b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f15aa963020" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f15aa963020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa9633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f15aa967de0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f15aa967de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa966180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aa966310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aa9664a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aa966630"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa9667c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f15aa965930" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15aa965930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aa965cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15aa965e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa964020"/>
        <function-ref name="get" scoped="" ref="0x7f15aa9641b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa964340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa9644d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aa964660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa9647f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa964980"/>
        <function-ref name="setMode" scoped="" ref="0x7f15aa964b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15aa964ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f15aa95e160" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f15aa95e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa95e4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aa95e670"/>
        <function-ref name="captured" scoped="" ref="0x7f15aa95e800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa95e990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa95eb20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aa95ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f15aa960020" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f15aa960020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aa9603a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aa960530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa9606c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aa960850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aa9609e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa960b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aa960d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aa95f020"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aa95f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f15aa95c7a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f15aa95c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa95cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f15aa95f480" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f15aa95f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa95f800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aa95f990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aa95fb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aa95fcb0"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa95fe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f15aa95d020" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15aa95d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aa95d3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15aa95d530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa95d6c0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa95d850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa95d9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa95db70"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aa95dd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa95c020"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa95c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f15aa95c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15aa95c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f15aa9567a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f15aa9567a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa956b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aa956cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f15aa956e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa955020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa9551b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aa955340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f15aa9586d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f15aa9586d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aa958a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aa958be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa958d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aa957020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aa9571b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa957340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aa9574d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aa957660"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aa9577f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f15aa954c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f15aa954c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa953020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f15aa957ac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f15aa957ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa957e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aa956020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aa9561b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aa956340"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa9564d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f15aa955610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15aa955610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aa955990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15aa955b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa955cb0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa955e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa954020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa9541b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aa954340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa9544d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa954660"/>
        <function-ref name="setMode" scoped="" ref="0x7f15aa9547f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15aa954980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f15aa94fcb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f15aa94fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa94e0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aa94e230"/>
        <function-ref name="captured" scoped="" ref="0x7f15aa94e3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa94e550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa94e6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aa94e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f15aa951b30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f15aa951b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aa950020"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aa9501b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa950340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aa9504d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aa950660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa9507f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aa950980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aa950b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aa950ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f15aa94c2f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f15aa94c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa94c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f15aa94f020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f15aa94f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa94f3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aa94f530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aa94f6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aa94f850"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa94f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f15aa94eb40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15aa94eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aa94d020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15aa94d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa94d340"/>
        <function-ref name="get" scoped="" ref="0x7f15aa94d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa94d660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa94d7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aa94d980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa94db10"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa94dca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f15aa94de30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15aa94c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f15aa9462f0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f15aa9462f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa946670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aa946800"/>
        <function-ref name="captured" scoped="" ref="0x7f15aa946990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa946b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa946cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aa946e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f15aa948220" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f15aa948220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aa9485a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aa948730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa9488c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aa948a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aa948be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa948d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aa947020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aa9471b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aa947340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f15aa9447a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f15aa9447a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa944b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f15aa947610" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f15aa947610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa947990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aa947b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aa947cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aa947e40"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa946020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f15aa945160" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15aa945160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aa9454e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15aa945670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa945800"/>
        <function-ref name="get" scoped="" ref="0x7f15aa945990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa945b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa945cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aa945e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa944020"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa9441b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f15aa944340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15aa9444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f15aa93f7a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f15aa93f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa93fb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aa93fcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f15aa93fe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa93e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa93e1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aa93e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f15aa9416d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f15aa9416d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aa941a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aa941be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa941d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aa940020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aa9401b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa940340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aa9404d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aa940660"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aa9407f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f15aa93dc50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f15aa93dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa93c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f15aa940ac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f15aa940ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa940e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aa93f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aa93f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aa93f340"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa93f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f15aa93e610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15aa93e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aa93e990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15aa93eb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa93ecb0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa93ee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa93d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa93d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aa93d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa93d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa93d660"/>
        <function-ref name="setMode" scoped="" ref="0x7f15aa93d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15aa93d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f15aa937cb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f15aa937cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa9360a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aa936230"/>
        <function-ref name="captured" scoped="" ref="0x7f15aa9363c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa936550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa9366e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aa936870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f15aa939b30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f15aa939b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aa938020"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aa9381b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa938340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aa9384d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aa938660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa9387f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aa938980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aa938b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aa938ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f15aa9342f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f15aa9342f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa934670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f15aa937020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f15aa937020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa9373a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aa937530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aa9376c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aa937850"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa9379e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f15aa936b40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15aa936b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aa935020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15aa9351b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa935340"/>
        <function-ref name="get" scoped="" ref="0x7f15aa9354d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa935660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa9357f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aa935980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa935b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa935ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f15aa935e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15aa934020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f15aa92f2f0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f15aa92f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa92f670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aa92f800"/>
        <function-ref name="captured" scoped="" ref="0x7f15aa92f990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa92fb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa92fcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aa92fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f15aa931220" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f15aa931220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aa9315a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aa931730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa9318c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aa931a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aa931be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa931d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aa930020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aa9301b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aa930340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f15aa92d7a0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f15aa92d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa92db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f15aa930610" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f15aa930610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa930990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aa930b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aa930cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aa930e40"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa92f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f15aa92e160" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15aa92e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aa92e4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15aa92e670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa92e800"/>
        <function-ref name="get" scoped="" ref="0x7f15aa92e990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa92eb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa92ecb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aa92ee40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa92d020"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa92d1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f15aa92d340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15aa92d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f15aa9277a0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f15aa9277a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa927b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aa927cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f15aa927e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa926020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa9261b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aa926340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f15aa92a6d0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f15aa92a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aa92aa50"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aa92abe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa92ad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aa928020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aa9281b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa928340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aa9284d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aa928660"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aa9287f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f15aa925c50" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f15aa925c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa924020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f15aa928ac0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f15aa928ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa928e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aa927020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aa9271b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aa927340"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa9274d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f15aa926610" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15aa926610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aa926990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15aa926b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa926cb0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa926e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa925020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa9251b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aa925340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa9254d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa925660"/>
        <function-ref name="setMode" scoped="" ref="0x7f15aa9257f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15aa925980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f15aa920cb0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f15aa920cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa91f0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15aa91f230"/>
        <function-ref name="captured" scoped="" ref="0x7f15aa91f3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa91f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa91f6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15aa91f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f15aa922b30" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f15aa922b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aa921020"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aa9211b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa921340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aa9214d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aa921660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa9217f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aa921980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aa921b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aa921ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f15aa91d2f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f15aa91d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa91d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f15aa920020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f15aa920020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa9203a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aa920530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aa9206c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aa920850"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa9209e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f15aa91fb40" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15aa91fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aa91e020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15aa91e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa91e340"/>
        <function-ref name="get" scoped="" ref="0x7f15aa91e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa91e660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa91e7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aa91e980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa91eb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa91eca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f15aa91ee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15aa91d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f15aa916240" loc="7:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f15aa916240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa9165c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f15aa91baa0" loc="4:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f15aa91baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa91be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f15aa917260" loc="5:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f15aa917260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa9175e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f15aa9179f0" loc="6:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f15aa9179f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15aa917d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f15aabb54c0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f15aabb54c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f15aabb5840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f15aaec93b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f15aaec93b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f15aaec9730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f15aaec98c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f15aaec9a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f15aacf1be0" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f15aacf1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f15aae2d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f15aaa78b50" loc="39:/home/jyxk/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f15aaa78b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f15aa8dfb10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f15aa8df1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f15aa8df340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f15aa8df4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f15aa8df020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f15aa8df660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f15aa8df7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f15aa8df980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f15aa8d3dc0" loc="60:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f15aa8d3dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aa8d2180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f15aa8e0590" loc="57:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f15aa8e0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f15aa8e0910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f15aa8d36c0" loc="59:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f15aa8d36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aa8d3a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f15aa8e0c00" loc="58:/home/jyxk/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f15aa8e0c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aa8d3020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f15aa8d31b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f15aa8d3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f15aafa14f0" loc="48:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f15aafa14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15aafa1870"/>
        <function-ref name="runTask" scoped="" ref="0x7f15aafa1a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f15aaf323a0" loc="47:/home/jyxk/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f15aaf323a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aaf32720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f15aaf328b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f15aaf32a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f15aaadb040" loc="56:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f15aaadb040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15aaadb3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f15aaadb550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f15aaad7490" loc="57:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f15aaad7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f15aaad7810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f15aaad79a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f15aaad7b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f15aaadd140" loc="55:/home/jyxk/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f15aaadd140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aaadd4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f15aaadd650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f15aaadd7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x7f15aa865020" loc="53:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer0" scoped="" ref="0x7f15aa865020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15aa858630"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa864a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15aa859920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15aa8594a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f15aa857020"/>
        <function-ref name="gett0" scoped="" ref="0x7f15aa858ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15aa859020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15aa865c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15aa858020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15aa864110"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa8645e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f15aa84a150" loc="57:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f15aa84a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f15aa84a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7f15aa857670" loc="54:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x7f15aa857670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15aa853c40"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa8541e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15aa853020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15aa854ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f15aa852590"/>
        <function-ref name="gett0" scoped="" ref="0x7f15aa852110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15aa854660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15aa856390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15aa853630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15aa856860"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa856d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15aa840a80" loc="56:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f15aa840a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15aa840e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15aa84b020"/>
        <function-ref name="led1On" scoped="" ref="0x7f15aa84b1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15aa84b340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15aa84b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa84b660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15aa84b7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15aa84be30"/>
        <function-ref name="set" scoped="" ref="0x7f15aa84b980"/>
        <function-ref name="led0On" scoped="" ref="0x7f15aa84bb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f15aa84bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x7f15aa852be0" loc="55:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer2" scoped="" ref="0x7f15aa852be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15aa84d110"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa84f6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15aa84e4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15aa84e020"/>
        <function-ref name="getdt" scoped="" ref="0x7f15aa84da10"/>
        <function-ref name="gett0" scoped="" ref="0x7f15aa84d590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15aa84fb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15aa851860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15aa84eab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15aa851d30"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa84f220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f15aa8c8460" loc="46:/home/jyxk/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f15aa8c8460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15aa8c87e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15aa8c8970"/>
        <function-ref name="led1On" scoped="" ref="0x7f15aa8c8b00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15aa8c8c90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15aa8c8e20"/>
        <function-ref name="get" scoped="" ref="0x7f15aa834020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15aa8341b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15aa8347f0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa834340"/>
        <function-ref name="led0On" scoped="" ref="0x7f15aa8344d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f15aa834660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f15aa8283a0" loc="50:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f15aa8283a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa828720"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa8288b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa828a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa828bd0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa828d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa82e020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa82e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa82e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15aa8337c0" loc="46:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15aa8337c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aa833b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f15aa82e660" loc="51:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f15aa82e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa82e9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa82eb70"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa82ed00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa82d020"/>
        <function-ref name="get" scoped="" ref="0x7f15aa82d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa82d340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa82d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa82d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f15aa833dc0" loc="47:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f15aa833dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15aa830180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15aa830310"/>
        <function-ref name="led1On" scoped="" ref="0x7f15aa8304a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15aa830630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15aa8307c0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa830950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15aa830ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15aa82f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa830c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f15aa830e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f15aa82f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f15aa82d980" loc="52:/home/jyxk/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f15aa82d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa82dd00"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa826020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa8261b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa826340"/>
        <function-ref name="get" scoped="" ref="0x7f15aa8264d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa826660"/>
        <function-ref name="set" scoped="" ref="0x7f15aa8267f0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa826980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f15aa80b060" loc="41:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f15aa80b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa80b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa80b570"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa80b700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa80b890"/>
        <function-ref name="get" scoped="" ref="0x7f15aa80ba20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa80bbb0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa80bd40"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa80a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f15aa80a380" loc="42:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f15aa80a380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa80a700"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa80a890"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa80aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa80abb0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa80ad40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa809020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa8091b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa809340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f15aa808920" loc="44:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15aa808920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aa808ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f15aa8096a0" loc="43:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f15aa8096a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa809a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa809bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa809d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa808020"/>
        <function-ref name="get" scoped="" ref="0x7f15aa8081b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa808340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa8084d0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa808660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f15aa7f3810" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f15aa7f3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7f3b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7f3d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7f2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7f21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7f2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7f24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7f2660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7f27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7f2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7f2b10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7f2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7f2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7f1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7f12b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7f1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f15aa7de810" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f15aa7de810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7deb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7ded20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7dd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7dd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7dd340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7dd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7dd660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7dd7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7dd980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7ddb10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7ddca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7dde30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7dc020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7dc2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7dc440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f15aa795ca0" loc="145:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f15aa795ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7940a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa794230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7943c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa794550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7946e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa794870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa794a00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa794b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa794d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa793020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7931b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa793340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7934d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa793760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7938f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f15aa770cb0" loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f15aa770cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa76f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa76f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa76f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa76f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa76f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa76f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa76fa00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa76fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa76fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa76e020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa76e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa76e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa76e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa76e760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa76e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f15aa793cc0" loc="146:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f15aa793cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7910a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa791230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7913c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa791550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7916e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa791870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa791a00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa791b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa791d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa790020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7901b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa790340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7904d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa790760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7908f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f15aa7da810" loc="71:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f15aa7da810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7dab90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7dad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7d9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7d91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7d9340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7d94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7d9660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7d97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7d9980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7d9b10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7d9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7d9e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7d8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7d82b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7d8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f15aa7c69a0" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f15aa7c69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7c6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7c5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7c51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7c5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7c54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7c5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7c57f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7c5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7c5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7c5ca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7c5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7c4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7c41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7c4440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7c45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f15aa7b19a0" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f15aa7b19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7b1d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7b0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7b01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7b0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7b04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7b0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7b07f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7b0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7b0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7b0ca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7b0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7af020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7af1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7af440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7af5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f15aa7a19a0" loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f15aa7a19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7a1d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7a0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7a01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7a0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7a04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7a0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7a07f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7a0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7a0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7a0ca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7a0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa79f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa79f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa79f440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa79f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f15aa78ccc0" loc="149:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f15aa78ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa78b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa78b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa78b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa78b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa78b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa78b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa78ba00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa78bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa78bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa78a020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa78a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa78a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa78a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa78a760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa78a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f15aa77ccb0" loc="159:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f15aa77ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa77b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa77b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa77b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa77b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa77b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa77b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa77ba00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa77bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa77bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa77a020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa77a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa77a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa77a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa77a760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa77a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f15aa768cc0" loc="171:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f15aa768cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7670a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa767230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7673c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa767550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7676e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa767870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa767a00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa767b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa767d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa766020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7661b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa766340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7664d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa766760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7668f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f15aa7ec810" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f15aa7ec810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7ecb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7ecd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7eb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7eb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7eb340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7eb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7eb660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7eb7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7eb980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7ebb10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7ebca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7ebe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7ea020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7ea2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7ea440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f15aa78acc0" loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f15aa78acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7890a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa789230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7893c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa789550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7896e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa789870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa789a00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa789b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa789d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa788020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7881b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa788340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7884d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa788760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7888f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f15aa7e8810" loc="61:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f15aa7e8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7e8b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7e8d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7e7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7e71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7e7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7e74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7e7660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7e77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7e7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7e7b10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7e7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7e7e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7e6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7e62b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7e6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f15aa7d4810" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f15aa7d4810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7d4b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7d4d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7d3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7d31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7d3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7d34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7d3660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7d37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7d3980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7d3b10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7d3ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7d3e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7d2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7d22b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7d2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f15aa7bf9a0" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f15aa7bf9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7bfd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7be020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7be1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7be340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7be4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7be660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7be7f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7be980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7beb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7beca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7bee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7bd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7bd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7bd440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7bd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f15aa7ab9a0" loc="100:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f15aa7ab9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7abd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7aa020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7aa1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7aa340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7aa4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7aa660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7aa7f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7aa980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7aab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7aaca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7aae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7a9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7a91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7a9440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7a95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f15aa79b9a0" loc="111:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f15aa79b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa79bd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa79a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa79a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa79a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa79a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa79a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa79a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa79a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa79ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa79aca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa79ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa799020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7991b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa799440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7995d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f15aa7f7810" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f15aa7f7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7f7b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7f7d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7f6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7f61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7f6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7f64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7f6660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7f67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7f6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7f6b10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7f6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7f6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7f5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7f52b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7f5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f15aa7e2810" loc="64:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f15aa7e2810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7e2c90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7e2e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7e1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7e11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7e1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7e14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7e1660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7e17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7e1980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7e1b10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7e1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7e1e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7e0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7e02b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7e0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f15aa7ce810" loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f15aa7ce810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7ceb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7ced20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7cd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7cd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7cd340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7cd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7cd660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7cd7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7cd980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7cdb10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7cdca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7cde30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7cc020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7cc2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7cc440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f15aa797cc0" loc="144:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f15aa797cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7960a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa796230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7963c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa796550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7966e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa796870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa796a00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa796b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa796d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa795020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7951b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa795340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7954d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa795760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7958f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f15aa776cb0" loc="162:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f15aa776cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7750a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa775230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7753c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa775550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7756e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa775870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa775a00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa775b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa775d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa774020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7741b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa774340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7744d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa774760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7748f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f15aa76acb0" loc="169:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f15aa76acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7690a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa769230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7693c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa769550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7696e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa769870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa769a00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa769b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa769d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa768020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7681b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa768340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7684d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa768760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7688f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f15aa782cc0" loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f15aa782cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7810a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa781230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7813c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa781550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7816e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa781870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa781a00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa781b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa781d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa780020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7801b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa780340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7804d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa780760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7808f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f15aa7ca810" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f15aa7ca810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7cad90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7c9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7c91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7c9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7c94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7c9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7c97f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7c9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7c9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7c9ca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7c9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7c8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7c81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7c8440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7c85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f15aa7b59a0" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f15aa7b59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7b5d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7b4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7b41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7b4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7b44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7b4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7b47f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7b4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7b4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7b4ca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7b4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7b3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7b31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7b3440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7b35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f15aa7a59a0" loc="106:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f15aa7a59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7a5d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7a4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7a41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7a4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7a44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7a4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7a47f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7a4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7a4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7a4ca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7a4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7a3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7a31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7a3440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7a35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f15aa774cb0" loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f15aa774cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7730a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa773230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7733c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa773550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7736e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa773870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa773a00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa773b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa773d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa772020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7721b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa772340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7724d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa772760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7728f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f15aa788cb0" loc="152:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f15aa788cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7870a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa787230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7873c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa787550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7876e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa787870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa787a00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa787b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa787d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa786020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7861b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa786340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7864d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa786760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7868f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f15aa7f1810" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f15aa7f1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7f1b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7f1d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7ef020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7ef1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7ef340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7ef4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7ef660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7ef7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7ef980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7efb10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7efca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7efe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7ee020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7ee2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7ee440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f15aa7dc810" loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f15aa7dc810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7dcb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7dcd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7db020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7db1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7db340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7db4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7db660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7db7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7db980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7dbb10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7dbca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7dbe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7da020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7da2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7da440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f15aa7a99a0" loc="104:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f15aa7a99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7a9d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7a8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7a81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7a8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7a84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7a8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7a87f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7a8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7a8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7a8ca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7a8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7a7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7a71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7a7440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7a75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f15aa7d8810" loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f15aa7d8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7d8b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7d8d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7d7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7d71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7d7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7d74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7d7660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7d77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7d7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7d7b10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7d7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7d7e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7d6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7d62b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7d6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f15aa7c49a0" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f15aa7c49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7c4d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7c3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7c31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7c3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7c34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7c3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7c37f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7c3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7c3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7c3ca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7c3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7c2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7c21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7c2440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7c25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f15aa7af9a0" loc="98:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f15aa7af9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7afd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7ae020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7ae1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7ae340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7ae4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7ae660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7ae7f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7ae980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7aeb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7aeca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7aee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7ad020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7ad1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7ad440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7ad5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f15aa79f9a0" loc="109:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f15aa79f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa79fd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa79e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa79e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa79e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa79e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa79e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa79e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa79e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa79eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa79eca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa79ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa79d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa79d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa79d440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa79d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f15aa784cc0" loc="154:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f15aa784cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7830a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa783230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7833c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa783550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7836e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa783870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa783a00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa783b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa783d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa782020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7821b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa782340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7824d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa782760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7828f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f15aa7f9900" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f15aa7f9900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7f9c80"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7f9e10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa804020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa8041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa804340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa8044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa804660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa8047f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa804980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa804b10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa804ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa804e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa803020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa8032b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa803440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f15aa7e6810" loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f15aa7e6810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7e6b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7e6d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7e5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7e51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7e5340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7e54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7e5660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7e57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7e5980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7e5b10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7e5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7e5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7e4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7e42b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7e4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f15aa7d2810" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f15aa7d2810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7d2b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7d2d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7d1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7d11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7d1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7d14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7d1660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7d17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7d1980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7d1b10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7d1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7d1e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7d0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7d02b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7d0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f15aa7bd9a0" loc="88:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f15aa7bd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7bdd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7bc020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7bc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7bc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7bc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7bc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7bc7f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7bc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7bcb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7bcca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7bce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7bb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7bb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7bb440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7bb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f15aa780cc0" loc="156:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f15aa780cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa77f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa77f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa77f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa77f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa77f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa77f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa77fa00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa77fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa77fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa77e020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa77e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa77e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa77e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa77e760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa77e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f15aa77acb0" loc="160:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f15aa77acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7790a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa779230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7793c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa779550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7796e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa779870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa779a00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa779b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa779d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa778020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7781b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa778340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7784d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa778760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7788f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f15aa76ecb0" loc="166:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f15aa76ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa76d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa76d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa76d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa76d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa76d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa76d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa76da00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa76db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa76dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa76c020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa76c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa76c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa76c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa76c760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa76c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f15aa7b99a0" loc="93:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f15aa7b99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7b9d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7b8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7b81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7b8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7b84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7b8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7b87f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7b8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7b8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7b8ca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7b8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7b7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7b71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7b7440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7b75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f15aa77ecc0" loc="157:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f15aa77ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa77d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa77d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa77d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa77d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa77d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa77d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa77da00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa77db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa77dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa77c020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa77c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa77c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa77c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa77c760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa77c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f15aa7f5810" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f15aa7f5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7f5b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7f5d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7f4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7f41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7f4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7f44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7f4660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7f47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7f4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7f4b10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7f4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7f4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7f3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7f32b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7f3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f15aa7e0810" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f15aa7e0810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7e0b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7e0d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7df020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7df1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7df340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7df4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7df660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7df7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7df980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7dfb10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7dfca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7dfe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7de020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7de2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7de440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f15aa7cc810" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f15aa7cc810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7ccb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7ccd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7cb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7cb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7cb340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7cb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7cb660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7cb7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7cb980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7cbb10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7cbca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7cbe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7ca020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7ca2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7ca440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f15aa786cc0" loc="153:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f15aa786cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7850a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa785230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7853c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa785550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7856e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa785870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa785a00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa785b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa785d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa784020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7841b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa784340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7844d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa784760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7848f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f15aa772cb0" loc="164:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f15aa772cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7710a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa771230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7713c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa771550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7716e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa771870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa771a00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa771b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa771d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa770020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7701b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa770340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7704d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa770760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7708f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f15aa7c89a0" loc="83:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f15aa7c89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7c8d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7c7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7c71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7c7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7c74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7c7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7c77f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7c7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7c7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7c7ca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7c7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7c6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7c61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7c6440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7c65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f15aa7b39a0" loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f15aa7b39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7b3d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7b2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7b21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7b2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7b24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7b2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7b27f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7b2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7b2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7b2ca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7b2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7b1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7b11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7b1440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7b15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f15aa7a39a0" loc="107:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f15aa7a39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7a3d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7a2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7a21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7a2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7a24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7a2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7a27f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7a2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7a2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7a2ca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7a2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7a1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7a11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7a1440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7a15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f15aa7ee810" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f15aa7ee810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7eeb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7eed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7ed020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7ed1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7ed340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7ed4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7ed660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7ed7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7ed980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7edb10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7edca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7ede30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7ec020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7ec2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7ec440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f15aa7a79a0" loc="105:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f15aa7a79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7a7d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7a6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7a61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7a6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7a64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7a6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7a67f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7a6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7a6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7a6ca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7a6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7a5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7a51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7a5440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7a55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f15aa7ea810" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f15aa7ea810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7eab90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7ead20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7e9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7e91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7e9340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7e94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7e9660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7e97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7e9980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7e9b10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7e9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7e9e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7e8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7e82b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7e8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f15aa7d6810" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f15aa7d6810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7d6b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7d6d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7d5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7d51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7d5340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7d54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7d5660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7d57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7d5980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7d5b10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7d5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7d5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7d4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7d42b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7d4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f15aa7c29a0" loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f15aa7c29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7c2d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7c0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7c01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7c0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7c04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7c0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7c07f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7c0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7c0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7c0ca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7c0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7bf020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7bf1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7bf440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7bf5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f15aa7ad9a0" loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f15aa7ad9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7add20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7ac020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7ac1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7ac340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7ac4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7ac660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7ac7f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7ac980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7acb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7acca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7ace30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7ab020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7ab1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7ab440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7ab5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f15aa79d9a0" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f15aa79d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa79dd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa79c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa79c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa79c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa79c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa79c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa79c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa79c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa79cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa79cca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa79ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa79b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa79b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa79b440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa79b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f15aa803810" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f15aa803810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa803b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa803d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7f8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7f81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7f8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7f84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7f8660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7f87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7f8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7f8b10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7f8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7f8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7f7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7f72b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7f7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f15aa7e4810" loc="63:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f15aa7e4810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7e4b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7e4d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7e3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7e31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7e3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7e34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7e3660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7e37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7e3980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7e3b10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7e3ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7e3e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7e2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7e22b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7e2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f15aa7d0810" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f15aa7d0810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7d0b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7d0d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7cf020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7cf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7cf340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7cf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7cf660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7cf7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7cf980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7cfb10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7cfca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7cfe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7ce020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7ce2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7ce440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f15aa7bb9a0" loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f15aa7bb9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7bbd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7ba020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7ba1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7ba340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7ba4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7ba660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7ba7f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7ba980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7bab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7baca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7bae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7b9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7b91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7b9440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7b95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f15aa78eca0" loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f15aa78eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa78d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa78d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa78d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa78d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa78d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa78d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa78da00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa78db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa78dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa78c020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa78c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa78c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa78c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa78c760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa78c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f15aa778cb0" loc="161:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f15aa778cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7770a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa777230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7773c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa777550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7776e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa777870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa777a00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa777b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa777d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa776020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7761b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa776340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7764d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa776760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7768f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f15aa790cc0" loc="147:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f15aa790cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa78f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa78f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa78f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa78f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa78f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa78f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa78fa00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa78fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa78fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa78e020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa78e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa78e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa78e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa78e760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa78e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f15aa7b79a0" loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f15aa7b79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7b7d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa7b6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7b61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa7b6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7b64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7b6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7b67f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa7b6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7b6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa7b6ca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7b6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa7b5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7b51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa7b5440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7b55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f15aa76ccb0" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f15aa76ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa76b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa76b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa76b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa76b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa76b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa76b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa76ba00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa76bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa76bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa76a020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa76a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa76a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa76a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa76a760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa76a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f15aa766cc0" loc="172:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f15aa766cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7650a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa765230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7653c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa765550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7656e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa765870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa765a00"/>
        <function-ref name="get" scoped="" ref="0x7f15aa765b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa765d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa764020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7641b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa764340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7644d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa764760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7648f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f15aa7999f0" loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f15aa7999f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7981c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa798350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7984e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa798670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa798800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa798990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa798b20"/>
        <function-ref name="get" scoped="" ref="0x7f15aa798cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa798e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa797020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7971b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa797340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7974d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa797760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7978f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa760d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa760d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa7390e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa739270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa739400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa739590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa739720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa7398b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa739a40"/>
        <function-ref name="get" scoped="" ref="0x7f15aa739bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa739d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa738020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7381b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa738340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7384d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa738760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7388f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa735740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa735740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa735ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa735c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa735de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa734020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7341b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa734340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7344d0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa734660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7347f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa734980"/>
        <function-ref name="set" scoped="" ref="0x7f15aa734b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa734ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa734e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa733120"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7332b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa730100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa730100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa730480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa730610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7307a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa730930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa730ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa730c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa730de0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa72f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa72f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa72f340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa72f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa72f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa72f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa72fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa72fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa72cd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa72cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa72b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa72b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa72b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa72b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa72b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa72b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa72ba40"/>
        <function-ref name="get" scoped="" ref="0x7f15aa72bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa72bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa72a020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa72a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa72a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa72a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa72a760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa72a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa727740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa727740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa727ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa727c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa727de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa726020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7261b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa726340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7264d0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa726660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7267f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa726980"/>
        <function-ref name="set" scoped="" ref="0x7f15aa726b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa726ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa726e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa725120"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7252b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa722100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa722100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa722480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa722610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7227a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa722930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa722ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa722c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa722de0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa721020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7211b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa721340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7214d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa721660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7217f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa721a80"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa721c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa71ed10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa71ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa71d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa71d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa71d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa71d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa71d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa71d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa71da40"/>
        <function-ref name="get" scoped="" ref="0x7f15aa71dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa71dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa71c020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa71c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa71c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa71c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa71c760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa71c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa718740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa718740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa718ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa718c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa718de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa717020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7171b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa717340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7174d0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa717660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7177f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa717980"/>
        <function-ref name="set" scoped="" ref="0x7f15aa717b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa717ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa717e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa716120"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7162b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa713100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa713100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa713480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa713610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7137a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa713930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa713ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa713c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa713de0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa712020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7121b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa712340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7124d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa712660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7127f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa712a80"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa712c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa70fd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa70fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa70e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa70e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa70e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa70e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa70e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa70e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa70ea40"/>
        <function-ref name="get" scoped="" ref="0x7f15aa70ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa70ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa70d020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa70d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa70d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa70d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa70d760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa70d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa70a740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa70a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa70aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa70ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa70ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa709020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7091b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa709340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa7094d0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa709660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7097f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa709980"/>
        <function-ref name="set" scoped="" ref="0x7f15aa709b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa709ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa709e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa708120"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa7082b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa705100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa705100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa705480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa705610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7057a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa705930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa705ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa705c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa705de0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa704020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa7041b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa704340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa7044d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa704660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa7047f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa704a80"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa704c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa701d80" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa701d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa700180"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa700310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa7004a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa700630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa7007c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa700950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa700ae0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa700c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa700e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6ff020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6ff1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6ff340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6ff4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6ff760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6ff8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6fc740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6fc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6fcac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6fcc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6fcde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6fb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6fb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6fb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6fb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6fb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6fb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6fb980"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6fbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6fbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6fbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6fa120"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6fa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6f7100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6f7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6f7480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6f7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6f77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6f7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6f7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6f7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6f7de0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6f5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6f51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6f5340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6f54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6f5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6f57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6f5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6f5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6f2d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6f2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6f10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6f1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6f1400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6f1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6f1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6f18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6f1a40"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6f1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6f1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6f0020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6f01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6f0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6f04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6f0760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6f08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6ed740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6ed740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6edac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6edc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6edde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6ec020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6ec1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6ec340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6ec4d0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6ec660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6ec7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6ec980"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6ecb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6ecca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6ece30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6eb120"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6eb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6e8100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6e8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6e8480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6e8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6e87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6e8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6e8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6e8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6e8de0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6e7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6e71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6e7340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6e74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6e7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6e77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6e7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6e7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6e4d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6e4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6e30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6e3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6e3400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6e3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6e3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6e38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6e3a40"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6e3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6e3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6e2020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6e21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6e2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6e24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6e2760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6e28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6df740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6df740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6dfac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6dfc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6dfde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6de020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6de1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6de340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6de4d0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6de660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6de7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6de980"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6deb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6deca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6dee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6dd120"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6dd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6da100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6da100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6da480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6da610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6da7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6da930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6daac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6dac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6dade0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6d9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6d91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6d9340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6d94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6d9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6d97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6d9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6d9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6d6d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6d6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6d50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6d5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6d5400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6d5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6d5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6d58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6d5a40"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6d5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6d5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6d4020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6d41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6d4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6d44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6d4760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6d48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6d1740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6d1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6d1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6d1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6d1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6cf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6cf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6cf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6cf4d0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6cf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6cf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6cf980"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6cfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6cfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6cfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6ce120"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6ce2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6cb100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6cb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6cb480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6cb610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6cb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6cb930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6cbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6cbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6cbde0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6ca020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6ca1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6ca340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6ca4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6ca660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6ca7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6caa80"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6cac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6c7e60" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6c7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6c6210"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6c63a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6c6530"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6c66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6c6850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6c69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6c6b70"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6c6d00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6c5020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6c51b0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6c5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6c54d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6c5660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6c58f0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6c5a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6c29f0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6c29f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6c2d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6c1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6c11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6c1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6c14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6c1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6c17f0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6c1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6c1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6c1ca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6c1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6c0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6c01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6c0440"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6c05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6bd460" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6bd460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6bd7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6bd970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6bdb00"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6bdc90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6bde20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6bc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6bc1b0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6bc340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6bc4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6bc660"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6bc7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6bc980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6bcb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6bcda0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6b9e00" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6b9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6b81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6b8350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6b84e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6b8670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6b8800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6b8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6b8b20"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6b8cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6b8e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6b7020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6b71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6b7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6b74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6b7760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6b78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6b4740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6b4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6b4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6b4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6b4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6b3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6b31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6b3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6b34d0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6b3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6b37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6b3980"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6b3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6b3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6b3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6b2120"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6b22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6af100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6af100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6af480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6af610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6af7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6af930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6afac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6afc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6afde0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6ae020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6ae1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6ae340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6ae4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6ae660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6ae7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6aea80"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6aec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6aad10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6aad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6a90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6a9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6a9400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6a9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6a9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6a98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6a9a40"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6a9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6a9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6a8020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6a81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6a8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6a84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6a8760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6a88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6a5740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6a5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6a5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6a5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6a5de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6a4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6a41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6a4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6a44d0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa6a4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6a47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa6a4980"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6a4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa6a4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6a4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa6a3120"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6a32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa6a0100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa6a0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6a0480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa6a0610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6a07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa6a0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6a0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6a0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6a0de0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa69f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa69f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa69f340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa69f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa69f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa69f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa69fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa69fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa69cd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa69cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa69b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa69b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa69b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa69b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa69b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa69b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa69ba40"/>
        <function-ref name="get" scoped="" ref="0x7f15aa69bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa69bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa69a020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa69a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa69a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa69a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa69a760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa69a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa697740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa697740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa697ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa697c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa697de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa696020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6961b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa696340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6964d0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa696660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6967f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa696980"/>
        <function-ref name="set" scoped="" ref="0x7f15aa696b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa696ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa696e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa695120"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6952b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa692100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa692100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa692480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa692610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6927a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa692930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa692ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa692c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa692de0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa691020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6911b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa691340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6914d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa691660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6917f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa691a80"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa691c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa68ed10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa68ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa68d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa68d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa68d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa68d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa68d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa68d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa68da40"/>
        <function-ref name="get" scoped="" ref="0x7f15aa68dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa68dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa68c020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa68c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa68c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa68c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa68c760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa68c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa689740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa689740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa689ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa689c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa689de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa687020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6871b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa687340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6874d0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa687660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6877f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa687980"/>
        <function-ref name="set" scoped="" ref="0x7f15aa687b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa687ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa687e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa686120"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6862b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa683100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa683100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa683480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa683610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6837a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa683930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa683ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa683c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa683de0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa682020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6821b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa682340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6824d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa682660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6827f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa682a80"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa682c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa67fd10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa67fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa67e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa67e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa67e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa67e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa67e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa67e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa67ea40"/>
        <function-ref name="get" scoped="" ref="0x7f15aa67ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa67ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa67d020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa67d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa67d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa67d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa67d760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa67d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa67a740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa67a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa67aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa67ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa67ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa679020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa6791b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa679340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa6794d0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa679660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6797f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa679980"/>
        <function-ref name="set" scoped="" ref="0x7f15aa679b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa679ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa679e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa678120"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6782b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa675100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa675100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa675480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa675610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6757a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa675930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa675ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa675c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa675de0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa674020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6741b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa674340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6744d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa674660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6747f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa674a80"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa674c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa671d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa671d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6700e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa670270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa670400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa670590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa670720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6708b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa670a40"/>
        <function-ref name="get" scoped="" ref="0x7f15aa670bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa670d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa66f020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa66f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa66f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa66f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa66f760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa66f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa66c740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa66c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa66cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa66cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa66cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa66b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa66b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa66b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa66b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa66b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa66b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa66b980"/>
        <function-ref name="set" scoped="" ref="0x7f15aa66bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa66bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa66be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa66a120"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa66a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa667100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa667100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa667480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa667610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6677a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa667930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa667ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa667c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa667de0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa666020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6661b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa666340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6664d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa666660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6667f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa666a80"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa666c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa663d10" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa663d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa6610e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa661270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa661400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa661590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa661720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa6618b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa661a40"/>
        <function-ref name="get" scoped="" ref="0x7f15aa661bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa661d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa660020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6601b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa660340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6604d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa660760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa6608f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa65d740" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa65d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa65dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa65dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa65dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa65c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa65c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa65c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa65c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa65c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa65c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa65c980"/>
        <function-ref name="set" scoped="" ref="0x7f15aa65cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa65cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa65ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa65b120"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa65b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15aa658100" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15aa658100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa658480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa658610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa6587a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa658930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa658ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa658c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa658de0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa657020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa6571b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa657340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa6574d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa657660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa6577f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa657a80"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa657c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f15aa5e02f0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f15aa5e02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa5e0670"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa5e0800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa5e0990"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa5e0b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa5e0cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa5e0e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa5df020"/>
        <function-ref name="get" scoped="" ref="0x7f15aa5df1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa5df340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa5df4d0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa5df660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa5df7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa5df980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa5dfc10"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa5dfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f15aa5f1020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f15aa5f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa5f13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa5f1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa5f16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa5f1850"/>
        <function-ref name="get" scoped="" ref="0x7f15aa5f19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa5f1b70"/>
        <function-ref name="set" scoped="" ref="0x7f15aa5f1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa5e0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f15aa5dcde0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f15aa5dcde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa5db180"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa5db310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa5db4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa5db630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa5db7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa5db950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa5dbae0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa5dbc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa5dbe00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa5da020"/>
        <function-ref name="set" scoped="" ref="0x7f15aa5da1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa5da340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa5da4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa5da760"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa5da8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f15aa5ddb90" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f15aa5ddb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa5dc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa5dc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa5dc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa5dc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa5dc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa5dc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa5dc980"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa5dcb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f15aa5d7930" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f15aa5d7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa5d7cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa5d7e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa5d6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa5d61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa5d6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa5d64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa5d6660"/>
        <function-ref name="get" scoped="" ref="0x7f15aa5d67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa5d6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa5d6b10"/>
        <function-ref name="set" scoped="" ref="0x7f15aa5d6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa5d6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa5d5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa5d52b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa5d5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f15aa5d8710" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f15aa5d8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa5d8a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa5d8c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa5d8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa5d7020"/>
        <function-ref name="get" scoped="" ref="0x7f15aa5d71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa5d7340"/>
        <function-ref name="set" scoped="" ref="0x7f15aa5d74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa5d7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15aa41e370" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15aa41e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15aa41a870"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa41de40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15aa41bc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15aa41b780"/>
        <function-ref name="getdt" scoped="" ref="0x7f15aa4191e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f15aa41acf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15aa41b300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15aa41d020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15aa41a260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15aa41d4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa41d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f15aa5bf610" loc="49:/home/jyxk/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f15aa5bf610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15aa5bcc40"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa5bd1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15aa5bc020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15aa5bdae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f15aa5ba590"/>
        <function-ref name="gett0" scoped="" ref="0x7f15aa5ba110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15aa5bd660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15aa5be390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15aa5bc630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15aa5be860"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa5bed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f15aa5b61d0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f15aa5b61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15aa5b2630"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa5b4c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15aa5b39d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15aa5b3550"/>
        <function-ref name="getdt" scoped="" ref="0x7f15aa5b1020"/>
        <function-ref name="gett0" scoped="" ref="0x7f15aa5b2ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15aa5b30d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15aa5b6dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15aa5b2020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15aa5b42e0"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa5b47b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f15aa5ada80" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f15aa5ada80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15aa5af6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15aa5b7400" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15aa5b7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aa5b7780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f15aa4ba870" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f15aa4ba870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15aa4b6090"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa4b8090"/>
        <function-ref name="startAt" scoped="" ref="0x7f15aa4b8a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15aa4b8550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15aa4b6550"/>
        <function-ref name="start" scoped="" ref="0x7f15aa4b96a0"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa4b9bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15aa4ba020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15aa4ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aa4ba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f15a99914f0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f15a99914f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aa8c7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f15aa8c79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15a998edb0"/>
        <function-ref name="fired" scoped="" ref="0x7f15a9990da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f15a998e760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15a998e2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15a998d2a0"/>
        <function-ref name="start" scoped="" ref="0x7f15a99903d0"/>
        <function-ref name="stop" scoped="" ref="0x7f15a99908e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15a9992c40" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15a9992c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15a9991020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f15a9978da0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f15a9978da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15a9977180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15a9977310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15a99774a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15a9977630"/>
        <function-ref name="fired" scoped="" ref="0x7f15a99777c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f15a997a340" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f15a997a340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15a997a6c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15a997a850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15a997a9e0"/>
        <function-ref name="get" scoped="" ref="0x7f15a997ab70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15a997ad00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15a9979020"/>
        <function-ref name="getMode" scoped="" ref="0x7f15a99791b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15a9979340"/>
        <function-ref name="overflow" scoped="" ref="0x7f15a99794d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f15a9979660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15a99797f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f15a9979a80" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15a9979a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15a9979e00"/>
        <function-ref name="getControl" scoped="" ref="0x7f15a9978020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15a99781b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15a9978340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15a99784d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15a9978660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15a99787f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15a9978980"/>
        <function-ref name="setControl" scoped="" ref="0x7f15a9978b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f15aa588020" loc="52:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f15aa588020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15aa5883a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15aa588530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15aa5886c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15aa588850"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa5889e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f15aa58d8b0" loc="50:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f15aa58d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aa58dc30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15aa58ddc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa58c020"/>
        <function-ref name="get" scoped="" ref="0x7f15aa58c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa58c340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa58c4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aa58c660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa58c7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa58c980"/>
        <function-ref name="setMode" scoped="" ref="0x7f15aa58cb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15aa58cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f15aa58b560" loc="51:/home/jyxk/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15aa58b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15aa58b8e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f15aa58ba70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa58bc00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15aa58bd90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15aa58a020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa58a1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15aa58a340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15aa58a4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f15aa58a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f15a996ea80" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f15a996ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15a996ee00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15a996d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15a996d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15a996d340"/>
        <function-ref name="fired" scoped="" ref="0x7f15a996d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f15a9970190" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f15a9970190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15a9970510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15a99706a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15a9970830"/>
        <function-ref name="get" scoped="" ref="0x7f15a99709c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15a9970b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15a9970ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15a9970e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15a996f030"/>
        <function-ref name="overflow" scoped="" ref="0x7f15a996f1c0"/>
        <function-ref name="setMode" scoped="" ref="0x7f15a996f350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15a996f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f15a9974020" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f15a9974020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aa8c7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f15aa8c79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15a9972870"/>
        <function-ref name="fired" scoped="" ref="0x7f15a9973840"/>
        <function-ref name="startAt" scoped="" ref="0x7f15a9972220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15a9973d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15a9972d30"/>
        <function-ref name="start" scoped="" ref="0x7f15a9974e30"/>
        <function-ref name="stop" scoped="" ref="0x7f15a9973380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15a9975660" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15a9975660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15a99759e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f15a996f770" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15a996f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15a996faf0"/>
        <function-ref name="getControl" scoped="" ref="0x7f15a996fc80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15a996fe10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15a996e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15a996e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15a996e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15a996e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15a996e660"/>
        <function-ref name="setControl" scoped="" ref="0x7f15a996e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f15aa533900" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f15aa533900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15aa536780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa532150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa536c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa532610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f15aa531990" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f15aa531990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aa8c7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f15aa8c79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15aa52e7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa52d170"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa52ec80"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa52d630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f15aa51cc50" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f15aa51cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aa51a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15aa51a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15aa51a340"/>
        <function-ref name="get" scoped="" ref="0x7f15aa51a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15aa51a660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa51a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aa51a980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa51ab10"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa51aca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f15aa51ae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15aa519020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f15aa52ab80" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f15aa52ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aa8c7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f15aa8c79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15aa5299b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa51c360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa529e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa51c820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f15aa4f80f0" loc="63:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f15aa4f80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aa8c7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f15aa8c79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15aa4f7020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa4f79a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa4f74e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa4f7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f15aa516cf0" loc="62:/home/jyxk/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f15aa516cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15aa4fbb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa4fa550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa4fa090"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa4faa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f15a998b890" loc="61:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f15a998b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15a99870d0"/>
        <function-ref name="fired" scoped="" ref="0x7f15a99890d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f15a9989a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15a9989590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15a9987590"/>
        <function-ref name="start" scoped="" ref="0x7f15a998a6e0"/>
        <function-ref name="stop" scoped="" ref="0x7f15a998abf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f15a99840a0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f15a99840a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aa8c7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f15aa8c79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15a9982b30"/>
        <function-ref name="fired" scoped="" ref="0x7f15a99839f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f15a99824e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15a9982020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15a9980020"/>
        <function-ref name="start" scoped="" ref="0x7f15a9983020"/>
        <function-ref name="stop" scoped="" ref="0x7f15a9983530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f15a9987c00" loc="68:/home/jyxk/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f15a9987c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15a9986a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15a99854e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15a9985020"/>
        <function-ref name="overflow" scoped="" ref="0x7f15a99859a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f15aa4859c0" loc="74:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f15aa4859c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15aa485d40"/>
        <function-ref name="runTask" scoped="" ref="0x7f15aa484020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f15aa489850" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f15aa489850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15aa485090"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa486090"/>
        <function-ref name="startAt" scoped="" ref="0x7f15aa486a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15aa486550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15aa485550"/>
        <function-ref name="start" scoped="" ref="0x7f15aa4876a0"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa487bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15aa48e2f0" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15aa48e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15aa48a870"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa48ce40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15aa48bc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15aa48b780"/>
        <function-ref name="getdt" scoped="" ref="0x7f15aa4891e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f15aa48acf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15aa48b300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15aa48c020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15aa48a260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15aa48c4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa48c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f15aa433a00" loc="71:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f15aa433a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15aa433d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f15aa432020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f15aa439640" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f15aa439640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15aa435c40"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa4361e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15aa435020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15aa436ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f15aa433590"/>
        <function-ref name="gett0" scoped="" ref="0x7f15aa433110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15aa436660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15aa437390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15aa435630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15aa437860"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa437d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15aa43f150" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15aa43f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15aa43a700"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa43dc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15aa43ca50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15aa43c5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f15aa439090"/>
        <function-ref name="gett0" scoped="" ref="0x7f15aa43aba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15aa43c110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15aa43fd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15aa43a0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15aa43d2a0"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa43d790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f15aa430790" loc="48:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f15aa430790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15aa42f3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f15aa42fa60" loc="49:/home/jyxk/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f15aa42fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15aa425890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa424260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa425d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa424720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15aa418c90" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15aa418c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15aa413170"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa416720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15aa414510"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15aa414090"/>
        <function-ref name="getdt" scoped="" ref="0x7f15aa413a70"/>
        <function-ref name="gett0" scoped="" ref="0x7f15aa4135f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15aa416ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15aa4178a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15aa414b20"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15aa417d70"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa4162a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15aa4116d0" loc="45:/home/jyxk/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15aa4116d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aaa7bea0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f15aa8c7240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15aa40dc40"/>
        <function-ref name="fired" scoped="" ref="0x7f15aa40e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15aa40d020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15aa40eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f15aa40c590"/>
        <function-ref name="gett0" scoped="" ref="0x7f15aa40c110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15aa40e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15aa410390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15aa40d630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15aa410860"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa410d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f15a9ec4020" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f15a9ec4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15a9ec43a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15a9ec4530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15a9ec46c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15a9ec4850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15a9ec49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f15a9ec4c30" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f15a9ec4c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15a9ec3020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15a9ec31b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15a9ec3340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15a9ec34d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15a9ec3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f15a9ec38b0" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f15a9ec38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f15a9ec3c30"/>
        <function-ref name="source" scoped="" ref="0x7f15a9ec3dc0"/>
        <function-ref name="address" scoped="" ref="0x7f15a9ec2020"/>
        <function-ref name="destination" scoped="" ref="0x7f15a9ec21b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f15a9ec2340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f15a9ec24d0"/>
        <function-ref name="type" scoped="" ref="0x7f15a9ec2660"/>
        <function-ref name="setType" scoped="" ref="0x7f15a9ec27f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f15a9ec2980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f15a9ec2b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f15a9ec2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f15a9ec1020" loc="52:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f15a9ec1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f15a9ec13a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f15a9ec1530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f15a9ec16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f15a98d7750" loc="44:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f15a98d7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15a98d7ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15a98d7c60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15a98d7df0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15a98d5020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15a98d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f15a98d5460" loc="46:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f15a98d5460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15a98d57e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15a98d5970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15a98d5b00"/>
        <function-ref name="cancel" scoped="" ref="0x7f15a98d5c90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15a98d5e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f15a98d40e0" loc="47:/home/jyxk/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f15a98d40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f15a98d4460"/>
        <function-ref name="source" scoped="" ref="0x7f15a98d45f0"/>
        <function-ref name="address" scoped="" ref="0x7f15a98d4780"/>
        <function-ref name="destination" scoped="" ref="0x7f15a98d4910"/>
        <function-ref name="setSource" scoped="" ref="0x7f15a98d4aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f15a98d4c30"/>
        <function-ref name="type" scoped="" ref="0x7f15a98d4dc0"/>
        <function-ref name="setType" scoped="" ref="0x7f15a98d3020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f15a98d31b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f15a98d3340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f15a98d34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15aa3bbcf0" loc="44:/home/jyxk/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f15aa3bbcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15aa3b80a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15aa3b8230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15aa3b83c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15aa3b8550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15aa3b86e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f15aa36e400" loc="48:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f15aa36e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15aa87b550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15aa36e7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15aa36e930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15aa36eac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15aa36ec50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15aa36ede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15aa36f580" loc="46:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f15aa36f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15aa36f920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15aa36fab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15aa36fc40"/>
        <function-ref name="cancel" scoped="" ref="0x7f15aa36fdd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15aa36e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f15aa36c720" loc="50:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f15aa36c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aa36caa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15aa36cc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15aa36cdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15aa36b020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15aa36b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f15aa36b480" loc="169:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f15aa36b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15aa36b800"/>
        <function-ref name="runTask" scoped="" ref="0x7f15aa36b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f15aa36bc60" loc="126:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f15aa36bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15aa36a020"/>
        <function-ref name="runTask" scoped="" ref="0x7f15aa36a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f15aa36d060" loc="49:/home/jyxk/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f15aa36d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f15aa36d3e0"/>
        <function-ref name="source" scoped="" ref="0x7f15aa36d570"/>
        <function-ref name="address" scoped="" ref="0x7f15aa36d700"/>
        <function-ref name="destination" scoped="" ref="0x7f15aa36d890"/>
        <function-ref name="setSource" scoped="" ref="0x7f15aa36da20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f15aa36dbb0"/>
        <function-ref name="type" scoped="" ref="0x7f15aa36dd40"/>
        <function-ref name="setType" scoped="" ref="0x7f15aa36c020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f15aa36c1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f15aa36c340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f15aa36c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f15aa3603b0" loc="46:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f15aa3603b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15aa360730"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15aa3608c0"/>
        <function-ref name="start" scoped="" ref="0x7f15aa360a50"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa360be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f15aa3643f0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f15aa3643f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15aa87b550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15aa364770"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15aa364900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15aa364a90"/>
        <function-ref name="cancel" scoped="" ref="0x7f15aa364c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15aa364db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f15aa35f7e0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f15aa35f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aa35fb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15aa35fcf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15aa35fe80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15aa35b030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15aa35b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f15aa35f1d0" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f15aa35f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15aa87b550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15aa35f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15aa358620" loc="53:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f15aa358620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15aa3589a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15aa358b30"/>
        <function-ref name="led1On" scoped="" ref="0x7f15aa358cc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15aa358e50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15aa357020"/>
        <function-ref name="get" scoped="" ref="0x7f15aa3571b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15aa357340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15aa357980"/>
        <function-ref name="set" scoped="" ref="0x7f15aa3574d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f15aa357660"/>
        <function-ref name="led2On" scoped="" ref="0x7f15aa3577f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f15aa359b20" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f15aa359b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f15aa358020"/>
        <function-ref name="noAck" scoped="" ref="0x7f15aa3581b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f15aa358340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f15aa35b470" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f15aa35b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f15aa35b7f0"/>
        <function-ref name="source" scoped="" ref="0x7f15aa35b980"/>
        <function-ref name="address" scoped="" ref="0x7f15aa35bb10"/>
        <function-ref name="destination" scoped="" ref="0x7f15aa35bca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f15aa35be30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f15aa359020"/>
        <function-ref name="type" scoped="" ref="0x7f15aa3591b0"/>
        <function-ref name="setType" scoped="" ref="0x7f15aa359340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f15aa3594d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f15aa359660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f15aa3597f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f15aa2fd9f0" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f15aa2fd9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15aa2fdd70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15aa2fc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15aa2fc1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15aa2fc340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15aa2fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f15aa2fc760" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f15aa2fc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15aa2fcae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f15aa3547d0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f15aa3547d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15aa87b550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15aa354b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15aa354d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15aa300020"/>
        <function-ref name="cancel" scoped="" ref="0x7f15aa3001b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15aa300340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f15aa2fe400" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f15aa2fe400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15aa2fe780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15aa2fe910"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15aa2feaa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15aa2fec30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15aa2fedc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f15aa3006c0" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f15aa3006c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f15aa87b550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15aa300a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f15aa2fd060" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f15aa2fd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f15aa2fd3e0"/>
        <function-ref name="noAck" scoped="" ref="0x7f15aa2fd570"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f15aa2fd700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f15aa300cb0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f15aa300cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f15aa2ff0a0"/>
        <function-ref name="source" scoped="" ref="0x7f15aa2ff230"/>
        <function-ref name="address" scoped="" ref="0x7f15aa2ff3c0"/>
        <function-ref name="destination" scoped="" ref="0x7f15aa2ff550"/>
        <function-ref name="setSource" scoped="" ref="0x7f15aa2ff6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f15aa2ff870"/>
        <function-ref name="type" scoped="" ref="0x7f15aa2ffa00"/>
        <function-ref name="setType" scoped="" ref="0x7f15aa2ffb90"/>
        <function-ref name="isForMe" scoped="" ref="0x7f15aa2ffd20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f15aa2fe020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f15aa2fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f15aa2f72f0" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f15aa2f72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15aa2f7670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15aa2f7800"/>
        <function-ref name="start" scoped="" ref="0x7f15aa2f7990"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa2f7b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15aa2f6e10" loc="52:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f15aa2f6e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f15aa8790d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15aa2f41c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15aa2f4350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15aa2f44e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15aa2f4670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15aa2f4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15aa2fabc0" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15aa2fabc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aa2f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f15aa2f6320" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f15aa2f6320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f15aa8790d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15aa2f66a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15aa2f3940" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f15aa2f3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15aa2f3cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15aa2f3e50"/>
        <function-ref name="led1On" scoped="" ref="0x7f15aa2ee020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15aa2ee1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15aa2ee340"/>
        <function-ref name="get" scoped="" ref="0x7f15aa2ee4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15aa2ee660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15aa2eeca0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa2ee7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f15aa2ee980"/>
        <function-ref name="led2On" scoped="" ref="0x7f15aa2eeb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f15aa2f3020" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f15aa2f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f15aa8790d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f15aa2f33a0"/>
        <function-ref name="offset" scoped="" ref="0x7f15aa2f3530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f15aa2f36c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f15aa2e6450" loc="66:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f15aa2e6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15aa2e67d0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15aa2e6960"/>
        <function-ref name="start" scoped="" ref="0x7f15aa2e6af0"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa2e6c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f15aa27fe40" loc="332:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f15aa27fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15aa27e1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f15aa27e370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f15aa2d2e00" loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f15aa2d2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15aa2d41c0"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa2d4350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f15aa2b6d10" loc="191:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f15aa2b6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15aa2b50e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f15aa2b5270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15aa2e8d60" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15aa2e8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15aa2e6180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f15aa2cfa80" loc="75:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f15aa2cfa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f15aa2cfe00"/>
        <function-ref name="flush" scoped="" ref="0x7f15aa2d3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f15aa281400" loc="322:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f15aa281400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15aa281780"/>
        <function-ref name="runTask" scoped="" ref="0x7f15aa281910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f15aa2d6e30" loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f15aa2d6e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f15aa2de1e0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f15aa2de370"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f15aa2de500"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f15aa2de690"/>
        <function-ref name="putData" scoped="" ref="0x7f15aa2de820"/>
        <function-ref name="putDone" scoped="" ref="0x7f15aa2de9b0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f15aa2deb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15aa2dedc0" loc="73:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f15aa2dedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15aa2db180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15aa2db310"/>
        <function-ref name="led1On" scoped="" ref="0x7f15aa2db4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15aa2db630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15aa2db7c0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa2db950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15aa2dbae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15aa2d51b0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa2dbc70"/>
        <function-ref name="led0On" scoped="" ref="0x7f15aa2dbe00"/>
        <function-ref name="led2On" scoped="" ref="0x7f15aa2d5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f15aa27a0c0" loc="341:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f15aa27a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15aa27a440"/>
        <function-ref name="runTask" scoped="" ref="0x7f15aa27a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f15aa2e04a0" loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f15aa2e04a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f15aa2e0820"/>
        <function-ref name="nextByte" scoped="" ref="0x7f15aa2e09b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f15aa2e0b40"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f15aa2e0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f15aa2dcad0" loc="68:/home/jyxk/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f15aa2dcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f15aa2dce50"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f15aa2df020"/>
        <function-ref name="endPacket" scoped="" ref="0x7f15aa2df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f15aa1b0c50" loc="275:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f15aa1b0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15aa1af020"/>
        <function-ref name="runTask" scoped="" ref="0x7f15aa1af1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15aa1b5830" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f15aa1b5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f15aa8790d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15aa1b5bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15aa1b5d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15aa1b4020"/>
        <function-ref name="cancel" scoped="" ref="0x7f15aa1b41b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15aa1b4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f15aa1af480" loc="158:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f15aa1af480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15aa1af800"/>
        <function-ref name="runTask" scoped="" ref="0x7f15aa1af990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f15aa1b5110" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f15aa1b5110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f15aa8790d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15aa1b54b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f15aa1b4760" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f15aa1b4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f15aa8790d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f15aa1b4b00"/>
        <function-ref name="offset" scoped="" ref="0x7f15aa1b4c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f15aa1b4e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15aa1b1590" loc="57:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f15aa1b1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15aa1b1910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15aa1b1aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f15aa1b1c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15aa1b1dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15aa1b0020"/>
        <function-ref name="get" scoped="" ref="0x7f15aa1b01b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15aa1b0340"/>
        <function-ref name="led2On" scoped="" ref="0x7f15aa1b0980"/>
        <function-ref name="set" scoped="" ref="0x7f15aa1b0660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15aa1b04d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f15aa1b07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f15aa1b39d0" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f15aa1b39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f15aa1b3d50"/>
        <function-ref name="nextByte" scoped="" ref="0x7f15aa1b1020"/>
        <function-ref name="startSend" scoped="" ref="0x7f15aa1b11b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f15aa1b1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f15aa1b30e0" loc="55:/home/jyxk/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f15aa1b30e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f15aa1b3460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f15aa1b35f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f15aa1b3780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f15aa19ed20" loc="50:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f15aa19ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15aa1a80e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f15aa1a8270"/>
        <function-ref name="receive" scoped="" ref="0x7f15aa1a8400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f15aa1a8590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f15aa1a8720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f15aa1a88b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15aa1a8a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f15aa1adb70" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f15aa1adb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f15aa1a9020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f15aa1a91b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f15aa1a9340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f15aa1a94d0"/>
        <function-ref name="putData" scoped="" ref="0x7f15aa1a9660"/>
        <function-ref name="putDone" scoped="" ref="0x7f15aa1a97f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f15aa1a9980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15aa1a8cc0" loc="51:/home/jyxk/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f15aa1a8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15aa1a70a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15aa1a7230"/>
        <function-ref name="led1On" scoped="" ref="0x7f15aa1a73c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15aa1a7550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15aa1a76e0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa1a7870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15aa1a7a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15aa19c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa1a7b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f15aa1a7d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f15aa19c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f15aa180020" loc="6:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f15aa180020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15aa1803a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f15aa180530"/>
        <function-ref name="receive" scoped="" ref="0x7f15aa1806c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f15aa180850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f15aa182890" loc="5:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f15aa182890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15aa182c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f15aa182da0"/>
        <function-ref name="receive" scoped="" ref="0x7f15aa181020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f15aa1811b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f15aa181340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f15aa1814d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15aa181660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f15aa182080" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f15aa182080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15aa182400"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa182590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f15a9ef5c70" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f15a9ef5c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f15a9ef4020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15a9ef41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f15a9ef3440" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f15a9ef3440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15a9ef37c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f15a9ef3950"/>
        <function-ref name="receive" scoped="" ref="0x7f15a9ef3ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f15a9ef3c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f15a9ef2020" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f15a9ef2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f15a9ef23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f15a9ef4440" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f15a9ef4440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15a9ef47c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f15a9ef4950"/>
        <function-ref name="receive" scoped="" ref="0x7f15a9ef4ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f15a9ef4c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f15a9ef4e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f15a9ef3020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15a9ef31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15a9ef5020" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f15a9ef5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15a9ef53a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15a9ef5530"/>
        <function-ref name="request" scoped="" ref="0x7f15a9ef56c0"/>
        <function-ref name="granted" scoped="" ref="0x7f15a9ef5850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15a9ef59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f15aa117dd0" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15aa117dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f15aa119180"/>
        <function-ref name="configure" scoped="" ref="0x7f15aa119310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f15aa115210" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f15aa115210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15aa115590"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f15aa115720"/>
        <function-ref name="receive" scoped="" ref="0x7f15aa1158b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f15aa115a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f15aa113600" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f15aa113600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f15aa113980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f15aa119b50" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f15aa119b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15aa116020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f15aa1161b0"/>
        <function-ref name="receive" scoped="" ref="0x7f15aa116340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f15aa1164d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f15aa116660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f15aa1167f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15aa116980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f15aa114370" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f15aa114370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15aa1146f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15aa114880"/>
        <function-ref name="request" scoped="" ref="0x7f15aa114a10"/>
        <function-ref name="granted" scoped="" ref="0x7f15aa114ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15aa114d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15aa11b320" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f15aa11b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15aa11b6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15aa11b830"/>
        <function-ref name="request" scoped="" ref="0x7f15aa11b9c0"/>
        <function-ref name="granted" scoped="" ref="0x7f15aa11bb50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15aa11bce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f15aa10ebe0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f15aa10ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f15aa111020"/>
        <function-ref name="txDone" scoped="" ref="0x7f15aa1111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f15aa089e70" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15aa089e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f15aa088240"/>
        <function-ref name="configure" scoped="" ref="0x7f15aa0883d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f15aa087890" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f15aa087890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15aa087c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f15aa087dc0"/>
        <function-ref name="receive" scoped="" ref="0x7f15aa086020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f15aa0861b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f15aa0853e0" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f15aa0853e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f15aa085780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f15aa085a50" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f15aa085a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f15aa085dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f15aa084020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f15aa0841b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f15aa084340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f15aa0844d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f15aa084660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f15aa0847f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f15aa084980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f15aa084b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f15aa084ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f15aa084e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f15aa083020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f15aa0831b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f15aa083440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f15aa0835d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f15aa083760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f15aa0838f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f15aa083a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f15aa083c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f15aa083da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f15aa082020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f15aa0821b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f15aa082340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f15aa0824d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aa082660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f15aa0829f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f15aa082b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f15aa082d10"/>
        <function-ref name="tx" scoped="" ref="0x7f15aa081020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f15aa0811b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f15aa081340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f15aa0814d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f15aa081660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f15aa0817f0"/>
        <function-ref name="rx" scoped="" ref="0x7f15aa081980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f15aa081b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f15aa081ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f15aa081e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f15aa080020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f15aa0801b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f15aa088790" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f15aa088790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15aa088b30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f15aa088cc0"/>
        <function-ref name="receive" scoped="" ref="0x7f15aa088e50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f15aa087020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f15aa0871b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f15aa087340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15aa0874d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f15aa07f020" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f15aa07f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aa8c7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f15aa8c79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15aa07fe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15aa07d800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15aa07d340"/>
        <function-ref name="overflow" scoped="" ref="0x7f15aa07dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f15aa0865b0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f15aa0865b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15aa086950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15aa086ae0"/>
        <function-ref name="request" scoped="" ref="0x7f15aa086c70"/>
        <function-ref name="granted" scoped="" ref="0x7f15aa086e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15aa085020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15aa0890d0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f15aa0890d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15aa089470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15aa089600"/>
        <function-ref name="request" scoped="" ref="0x7f15aa089790"/>
        <function-ref name="granted" scoped="" ref="0x7f15aa089920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15aa089ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f15aa0805b0" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f15aa0805b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f15aa080950"/>
        <function-ref name="txDone" scoped="" ref="0x7f15aa080ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15aa07c120" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f15aa07c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15aa07c4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15aa07c630"/>
        <function-ref name="led1On" scoped="" ref="0x7f15aa07c7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15aa07c950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15aa07cae0"/>
        <function-ref name="get" scoped="" ref="0x7f15aa07cc70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15aa07ce00"/>
        <function-ref name="led2On" scoped="" ref="0x7f15aa07b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa07b1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15aa07b020"/>
        <function-ref name="led0On" scoped="" ref="0x7f15aa07b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f15aa06c080" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f15aa06c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f15aa06c400"/>
        <function-ref name="txDone" scoped="" ref="0x7f15aa06c590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f15aa070ca0" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f15aa070ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15aa0720a0"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa072230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f15aa072550" loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f15aa072550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f15aa0728d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f15aa072a60"/>
        <function-ref name="setUctl" scoped="" ref="0x7f15aa072bf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f15aa072d80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f15aa071020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f15aa0711b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f15aa071340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f15aa0714d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f15aa071660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f15aa0717f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f15aa071980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f15aa071b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f15aa071ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f15aa06f020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f15aa06f1b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f15aa06f340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f15aa06f4d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f15aa06f660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f15aa06f7f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f15aa06f980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f15aa06fb10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f15aa06fca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f15aa06fe30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f15aa06e020"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aa06e1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f15aa06e540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f15aa06e6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f15aa06e860"/>
        <function-ref name="tx" scoped="" ref="0x7f15aa06e9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f15aa06eb80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f15aa06ed10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f15aa06d020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f15aa06d1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f15aa06d340"/>
        <function-ref name="rx" scoped="" ref="0x7f15aa06d4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f15aa06d660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f15aa06d7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f15aa06d980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f15aa06db10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f15aa06dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f15aa05d1f0" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f15aa05d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa05d570"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa05d700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa05d890"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa05da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa05dbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa05dd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa05c020"/>
        <function-ref name="get" scoped="" ref="0x7f15aa05c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa05c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa05c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa05c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa05c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa05c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa05cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa05cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f15aa063910" loc="76:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f15aa063910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f15aa063c90"/>
        <function-ref name="txDone" scoped="" ref="0x7f15aa063e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f15aa05b1f0" loc="81:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f15aa05b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa05b570"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa05b700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa05b890"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa05ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa05bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa05bd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa05a020"/>
        <function-ref name="get" scoped="" ref="0x7f15aa05a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa05a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa05a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa05a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa05a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa05a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa05ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa05ada0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f15aa0591f0" loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f15aa0591f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa059570"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa059700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa059890"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa059a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa059bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa059d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa058020"/>
        <function-ref name="get" scoped="" ref="0x7f15aa0581b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa058340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa0584d0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa058660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa0587f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa058980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa058c10"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa058da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f15aa068cc0" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f15aa068cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f15aa0670a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f15aa067230"/>
        <function-ref name="setUctl" scoped="" ref="0x7f15aa0673c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f15aa067550"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f15aa0676e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f15aa067870"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f15aa067a00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f15aa067b90"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f15aa067d20"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f15aa066020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f15aa0661b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f15aa066340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f15aa0664d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f15aa066760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f15aa0668f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f15aa066a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f15aa066c10"/>
        <function-ref name="isUart" scoped="" ref="0x7f15aa066da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f15aa065020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f15aa0651b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f15aa065340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f15aa0654d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f15aa065660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f15aa0657f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15aa065980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f15aa065d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f15aa064020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f15aa0641b0"/>
        <function-ref name="tx" scoped="" ref="0x7f15aa064340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f15aa0644d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f15aa064660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f15aa0647f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f15aa064980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f15aa064b10"/>
        <function-ref name="rx" scoped="" ref="0x7f15aa064ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f15aa064e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f15aa063020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f15aa0631b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f15aa063340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f15aa0634d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f15aa068410" loc="74:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f15aa068410"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15aa068790"/>
        <function-ref name="stop" scoped="" ref="0x7f15aa068920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f15aa05f1f0" loc="79:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f15aa05f1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa05f570"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa05f700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa05f890"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa05fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa05fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa05fd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa05e020"/>
        <function-ref name="get" scoped="" ref="0x7f15aa05e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa05e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa05e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa05e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa05e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa05e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa05ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa05eda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f15aa062210" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f15aa062210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15aa062590"/>
        <function-ref name="isInput" scoped="" ref="0x7f15aa062720"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15aa0628b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15aa062a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15aa062bd0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15aa062d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15aa061020"/>
        <function-ref name="get" scoped="" ref="0x7f15aa0611b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15aa061340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15aa0614d0"/>
        <function-ref name="set" scoped="" ref="0x7f15aa061660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15aa0617f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15aa061980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15aa061c10"/>
        <function-ref name="clr" scoped="" ref="0x7f15aa061da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f15a9fd9110" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f15a9fd9110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f15aa8c7680"/>
            <typename><typedef-ref name="T32khz" ref="0x7f15aa8c79f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15a9fd8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15a9fd89a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15a9fd84e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f15a9fd8e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f15a9817020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f15a9817020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f15a98173a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15a9817530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15a9811440" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15a9811440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f15a98117c0"/>
        <function-ref name="configure" scoped="" ref="0x7f15a9811950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f15a9812c10" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f15a9812c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f15a9811020"/>
        <function-ref name="txDone" scoped="" ref="0x7f15a98111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15a9819340" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f15a9819340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15a98196c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15a9819850"/>
        <function-ref name="request" scoped="" ref="0x7f15a98199e0"/>
        <function-ref name="granted" scoped="" ref="0x7f15a9819b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15a9819d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f15a9816020" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f15a9816020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f15a98163a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f15a9816530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f15a98166c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f15a9816850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f15a98169e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f15a9816b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f15a9816d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f15a9815020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f15a98151b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f15a9815340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f15a98154d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f15a9815660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f15a98157f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f15a9815a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f15a9815c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f15a9815da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f15a9814020"/>
        <function-ref name="isUart" scoped="" ref="0x7f15a98141b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f15a9814340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f15a98144d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f15a9814660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f15a98147f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f15a9814980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f15a9814b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f15a9814ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f15a9813220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f15a98133b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f15a9813540"/>
        <function-ref name="tx" scoped="" ref="0x7f15a98136d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f15a9813860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f15a98139f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f15a9813b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f15a9813d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f15a9812020"/>
        <function-ref name="rx" scoped="" ref="0x7f15a98121b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f15a9812340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f15a98124d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f15a9812660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f15a98127f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f15a9812980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f15a98177c0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15a98177c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15a9817b40"/>
        <function-ref name="userId" scoped="" ref="0x7f15a9817cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f15a9fbdd50" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f15a9fbdd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f15a9fbc100"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15a9fbc290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15a9fba370" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15a9fba370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f15a9fba6f0"/>
        <function-ref name="configure" scoped="" ref="0x7f15a9fba880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f15a9fc1ce0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f15a9fc1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f15a9fbe0a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f15a9fbe230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15a9fbea60" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f15a9fbea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15a9fbede0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15a9fbd020"/>
        <function-ref name="request" scoped="" ref="0x7f15a9fbd1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f15a9fbd340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15a9fbd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f15a9fbc590" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15a9fbc590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15a9fbc910"/>
        <function-ref name="userId" scoped="" ref="0x7f15a9fbcaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f15a9fa44b0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15a9fa44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15a9fa4830"/>
        <function-ref name="userId" scoped="" ref="0x7f15a9fa49c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f15a9fb75c0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f15a9fb75c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f15a9fb7960"/>
        <function-ref name="txDone" scoped="" ref="0x7f15a9fb7af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f15a9fa6e70" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f15a9fa6e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15a9fa4220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f15a9fa6020" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f15a9fa6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15a9fa63c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f15a9fa6690" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f15a9fa6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f15a9fa6a10"/>
        <function-ref name="txDone" scoped="" ref="0x7f15a9fa6ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f15a9f2bbf0" loc="92:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f15a9f2bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f15a9f2a020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15a9f2a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15a9f29930" loc="96:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15a9f29930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f15a9f29cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f15a9f29e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f15a9f2a400" loc="93:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15a9f2a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15a9f2a780"/>
        <function-ref name="requested" scoped="" ref="0x7f15a9f2a910"/>
        <function-ref name="granted" scoped="" ref="0x7f15a9f2aaa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15a9f2ac30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15a9f2adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15a9f2ce60" loc="91:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f15a9f2ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15a9f2b230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15a9f2b3c0"/>
        <function-ref name="request" scoped="" ref="0x7f15a9f2b550"/>
        <function-ref name="granted" scoped="" ref="0x7f15a9f2b6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15a9f2b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f15a9f29060" loc="94:/home/jyxk/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15a9f29060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15a9f293e0"/>
        <function-ref name="userId" scoped="" ref="0x7f15a9f29570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15a97adca0" loc="44:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15a97adca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15a97ac0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f15a97ac330" loc="45:/home/jyxk/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f15a97ac330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f15a97ac6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f15a97ac840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f15a97ac9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f15a97acb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f15a97a93a0" loc="55:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f15a97a93a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f15a97a9740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15a97a98d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15a97a7210" loc="60:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15a97a7210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f15a97a75b0"/>
        <function-ref name="configure" scoped="" ref="0x7f15a97a7740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f15a97a79d0" loc="61:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f15a97a79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f15a97a7d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f15a97a5020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f15a97a51b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f15a97a5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f15a97a9b20" loc="56:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15a97a9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15a97a8020"/>
        <function-ref name="requested" scoped="" ref="0x7f15a97a81b0"/>
        <function-ref name="granted" scoped="" ref="0x7f15a97a8340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15a97a84d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15a97a8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15a97a5590" loc="62:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f15a97a5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15a97a5910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15a97a5aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f15a97a5c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15a97a5dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15a97a4020"/>
        <function-ref name="get" scoped="" ref="0x7f15a97a41b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15a97a4340"/>
        <function-ref name="led0On" scoped="" ref="0x7f15a97a4980"/>
        <function-ref name="set" scoped="" ref="0x7f15a97a4660"/>
        <function-ref name="led2On" scoped="" ref="0x7f15a97a44d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15a97a47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15a97aa540" loc="54:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f15a97aa540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15a97aa8e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15a97aaa70"/>
        <function-ref name="request" scoped="" ref="0x7f15a97aac00"/>
        <function-ref name="granted" scoped="" ref="0x7f15a97aad90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15a97a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f15a97a88b0" loc="57:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15a97a88b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15a97a8c30"/>
        <function-ref name="userId" scoped="" ref="0x7f15a97a8dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f15a97a4c50" loc="75:/home/jyxk/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f15a97a4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15a97a3020"/>
        <function-ref name="runTask" scoped="" ref="0x7f15a97a31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f15a9f0e400" loc="72:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f15a9f0e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f15a9f0e780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f15a9f0e9d0" loc="73:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15a9f0e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15a9f0ed50"/>
        <function-ref name="requested" scoped="" ref="0x7f15a9f0d020"/>
        <function-ref name="granted" scoped="" ref="0x7f15a9f0d1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15a9f0d340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15a9f0d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f15a9f24b20" loc="70:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f15a9f24b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15a9f0e020"/>
        <function-ref name="stop" scoped="" ref="0x7f15a9f0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f15a9f0d720" loc="74:/home/jyxk/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15a9f0d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15a9f0daa0"/>
        <function-ref name="userId" scoped="" ref="0x7f15a9f0dc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f15a9774b00" loc="62:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f15a9774b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f15a9774e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f15a97730f0" loc="63:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15a97730f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15a9773470"/>
        <function-ref name="requested" scoped="" ref="0x7f15a9773600"/>
        <function-ref name="granted" scoped="" ref="0x7f15a9773790"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15a9773920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15a9773ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f15a97743a0" loc="60:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f15a97743a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15a9774720"/>
        <function-ref name="stop" scoped="" ref="0x7f15a97748b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f15a9773d00" loc="64:/home/jyxk/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15a9773d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15a97720a0"/>
        <function-ref name="userId" scoped="" ref="0x7f15a9772230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f15a9eee920" loc="3:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f15a9eee920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f15a9eeeca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f15a9eed020" loc="4:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f15a9eed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15a9eed3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15a9eed530"/>
        <function-ref name="request" scoped="" ref="0x7f15a9eed6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f15a9eed850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15a9eed9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f15a9eee0c0" loc="2:/home/jyxk/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f15a9eee0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15a9eee440"/>
        <function-ref name="stop" scoped="" ref="0x7f15a9eee5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f15a9edb8d0" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f15a9edb8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f15a9edbc50"/>
        <function-ref name="offset" scoped="" ref="0x7f15a9edbde0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f15a9ed8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f15a9ebc930" loc="43:/home/jyxk/tinyos-main/tos/system/BigQueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f15a9ebc930"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f15a9e9c790"/>
        <function-ref name="enqueue" scoped="" ref="0x7f15a9e9a0d0"/>
        <function-ref name="element" scoped="" ref="0x7f15a9e9a5a0"/>
        <function-ref name="full" scoped="" ref="0x7f15a9e9d9e0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f15a9e9c310"/>
        <function-ref name="dequeue" scoped="" ref="0x7f15a9e9cc10"/>
        <function-ref name="empty" scoped="" ref="0x7f15a9e9d560"/>
        <function-ref name="size" scoped="" ref="0x7f15a9e9de60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f15a9e95020" loc="93:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f15a9e95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f15a9e94e50"/>
        <function-ref name="enqueue" scoped="" ref="0x7f15a9e91780"/>
        <function-ref name="element" scoped="" ref="0x7f15a9e91c50"/>
        <function-ref name="full" scoped="" ref="0x7f15a9e940d0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f15a9e949d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f15a9e91300"/>
        <function-ref name="empty" scoped="" ref="0x7f15a9e95c10"/>
        <function-ref name="size" scoped="" ref="0x7f15a9e94550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f15a9e90100" loc="94:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f15a9e90100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15a9e90480"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15a9e90610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15a9e907a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15a9e90930"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15a9e90ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f15a9e90d50" loc="95:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f15a9e90d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15a9e8f100"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f15a9e8f290"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15a9e8f420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15a9e8f5b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15a9e8f740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f15a9e891d0" loc="114:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7f15a9e891d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15a9e89550"/>
        <function-ref name="runTask" scoped="" ref="0x7f15a9e896e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15a9e99d70" loc="89:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15a9e99d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15a9e96180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15a9e8f9c0" loc="96:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f15a9e8f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15a9e8fd40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15a9e8e020"/>
        <function-ref name="led1On" scoped="" ref="0x7f15a9e8e1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15a9e8e340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15a9e8e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f15a9e8e660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15a9e8e7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15a9e8ee30"/>
        <function-ref name="set" scoped="" ref="0x7f15a9e8e980"/>
        <function-ref name="led0On" scoped="" ref="0x7f15a9e8eb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f15a9e8eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f15a9e935f0" loc="90:/home/jyxk/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f15a9e935f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f15a9e93970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f15a9e727e0" loc="43:/home/jyxk/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f15a9e727e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f15a9e72b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15a9e6fb20" loc="94:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15a9e6fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15a9e6b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f15a9e6b300" loc="95:/home/jyxk/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f15a9e6b300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f15a9e6b680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f15a9e630f0" loc="39:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f15a9e630f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f15a9e63470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f15a9e63810" loc="40:/home/jyxk/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f15a9e63810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15a9e63b90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15a9e63d20"/>
        <function-ref name="start" scoped="" ref="0x7f15a9e62020"/>
        <function-ref name="stop" scoped="" ref="0x7f15a9e621b0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f15aaaa1e10" loc="62:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f15aaaa2a20" loc="60:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f15aaa71b40" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f15aaa74de0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f15aaa71420" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f15aaa74700" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f15aaa725a0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f15aaa77910" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f15aaa74020" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f15aaa72cc0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f15aabb5020" loc="62:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f15aae7add0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f15aaa1e020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f15aaa1fcc0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f15aaa22390" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f15aaa695a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f15aaa67440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f15aaa1e890" loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f15aaa1d7b0" loc="59:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f15aaa1f560" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f15aaa1d020" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f15aaa22b30" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f15aaa21350" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f15aaa21da0" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f15aaa695a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f15aaa67440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f15aaa21b20" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f15aaa695a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f15aaa67440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f15aaa110e0" loc="44:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f15aaa0e730" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f15aaa0e4b0" loc="84:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f15aaa0d2e0" loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f15aaa0d060" loc="91:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f15aaa0fca0" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f15aaa0f3e0" loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f15aaa11a90" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f15aaa11810" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f15aaa183e0" loc="40:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f15aaa18d60" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f15aaa18ae0" loc="41:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f15aaa16790" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f15aaa16510" loc="42:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f15aaa152a0" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f15aaa15020" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f15aaa15990" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f15aaa28810" loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f15aaa252a0" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f15aaa25020" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f15aaa27020" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f15aaa2eab0" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f15aaa27760" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f15aaa2b9b0" loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f15aaa28120" loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f15aaa2b270" loc="46:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f15aaa290e0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f15aaa299f0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f15aaa29770" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f15aaa25cb0" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f15aaa25a30" loc="56:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f15aa9e71f0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f15aaad8a80" loc="85:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f15aaad71f0" loc="86:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f15aaad82b0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f15aacf1830" loc="52:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f15aaf33020" loc="57:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f15aaf32020" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f15aaf33790" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f15aaf27350" loc="67:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f15aaf27ba0" loc="75:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f15aa866bf0" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15aa866bf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f15aa85c980" loc="136:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f15aa8601f0" loc="83:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f15aa85e020" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f15aa85f9a0" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f15aa85fce0" loc="114:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f15aa85f1f0" loc="98:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f15aa85ba10" loc="151:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f15aa85b190" loc="144:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f15aa8609d0" loc="92:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f15aa863790" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f15aa863510" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f15aa85c020" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f15aa85e9c0" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f15aa85ed00" loc="129:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f15aa8612a0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f15aa861020" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f15aa861aa0" loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f15aa847a60" loc="61:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f15aa845270" loc="67:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f15aa845a50" loc="72:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f15aa844a20" loc="83:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f15aa8421f0" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f15aa842a00" loc="117:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f15aa844270" loc="77:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f15aa8405a0" loc="134:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f15aa840320" loc="134:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f15aa8472d0" loc="56:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f15aa843270" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f15aa843a00" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/jyxk/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f15aa82aa60" loc="44:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f15aa8291f0" loc="45:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f15aa82bbf0" loc="42:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f15aa828070" loc="47:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f15aa82a350" loc="43:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f15aa829910" loc="46:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f15aa82fde0" loc="40:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f15aa82b500" loc="41:/home/jyxk/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f15aa7ffc20" loc="78:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f15aa7fe390" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f15aa7fac10" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f15aa7fa990" loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f15aa8004a0" loc="58:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f15aa7fd270" loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f15aa7f9520" loc="117:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f15aa7fead0" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f15aa7ff480" loc="73:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f15aa7fb940" loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f15aa800c40" loc="66:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f15aa8025f0" loc="48:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f15aa7fd9f0" loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f15aa7fa120" loc="101:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f15aa7fb1f0" loc="94:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f15aa802d20" loc="53:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f15aa5b1c50" loc="53:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15aa5b1c50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f15aa5ad5a0" loc="61:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f15ab593920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f15aa5a85d0" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15aa5a85d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f15aa5a8810" loc="56:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15aa5a8810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f15aa5a3390" loc="109:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15aa5a8810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f15aa5a53b0" loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f15aa5a49d0" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15aa5a8810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15aa5a8810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f15aa5a4400" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15aa5a8810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f15aa5a4740" loc="103:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15aa5a8810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f15aa5a5b90" loc="88:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f15aa5a3b80" loc="116:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15aa5a8810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f15aa5a6390" loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15aa5a8810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f15aa5a6110" loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15aa5a8810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f15aa5a6bc0" loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/jyxk/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f15aa53ae20" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15aa53ae20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f15aa5350d0" loc="57:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15aa5350d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f15aa5359f0" loc="64:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15aa5350d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f15aa534b10" loc="76:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f15aa5342b0" loc="71:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f15aa5332b0" loc="82:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f15aa4010d0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f15aa87bd10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f15aa403730" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f15aa87bd10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f15aa403ab0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f15aa403de0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f15aa3fd6d0" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15aa3fd0d0" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f15aa3fd400" loc="135:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f15aa3fc840" loc="123:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f15aa400430" loc="96:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15aa4001b0" loc="96:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f15aa3ff950" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15aa3ff370" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f15aa3ff6c0" loc="110:/home/jyxk/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f15aa3f8020" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15aa405c60" loc="65:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f15aa3f7110" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15aa3f8e10" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f15aa3f3490" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15aa3f4e50" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f15aa3f31c0" loc="126:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f15aa3f4560" loc="106:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f15aa3f65e0" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15aa3f6020" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f15aa3f6350" loc="94:/home/jyxk/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f15aa3e4d30" loc="177:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f15aa87b930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15aa3e4ab0" loc="177:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f15aa3eda10" loc="88:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f15aa87bd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15aa3ed790" loc="88:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f15aa404e60" loc="68:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f15aa87bd10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f15aa3ef950" loc="78:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f15aa87bd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15aa3ef6d0" loc="78:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f15aa3ea3a0" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f15aa87bd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15aa3eed70" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f15aa3ea110" loc="121:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f15aa87bd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f15aa3ece50" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f15aa87bd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15aa3ec870" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f15aa3ecbc0" loc="103:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f15aa87bd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f15aa3e7810" loc="147:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f15aa87b550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15aa3e7590" loc="147:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f15aa3e5b90" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f15aa87b550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15aa3e55e0" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f15aa3e5900" loc="162:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f15aa87b550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f15aa3e9600" loc="136:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15aa3e9380" loc="136:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f15aa3e22f0" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f15aa87b930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15aa3e6cf0" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f15aa3e2060" loc="187:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f15aa87b930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f15aa3e1190" loc="195:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/jyxk/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f15aa87b930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f15aa3dead0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15aa3de850" loc="59:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f15aa3dccd0" loc="71:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15aa3dca50" loc="71:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f15aa3da020" loc="85:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15aa3ddce0" loc="85:/home/jyxk/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f15aa3d35e0" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15aa3d3020" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f15aa3d3350" loc="75:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f15aa3cebb0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15aa3ce5b0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f15aa3ce8e0" loc="125:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f15aa3d0d20" loc="112:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f15aa3d1900" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15aa3d1680" loc="89:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f15aa3cfe00" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15aa3cf820" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f15aa3cfb70" loc="100:/home/jyxk/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f15aa362ab0" loc="113:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f15aa362830" loc="113:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f15aa360020" loc="138:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f15aa361d30" loc="138:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f15aa365d70" loc="104:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f15aa361350" loc="130:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f15aa35c410" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
              <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15aa363a90" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f15aa363de0" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f15aa35c130" loc="78:/home/jyxk/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f15aa2ef630" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15aa2ef020" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f15aa2ef3a0" loc="31:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f15aa2f1670" loc="15:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f15aa2f0620" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15aa2f0020" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f15aa86a080"/>
                <typename><typedef-ref name="message_t" ref="0x7f15aa8696a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f15aa2f0390" loc="23:/home/jyxk/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f15aa2d20e0" loc="95:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f15aa2d28f0" loc="105:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/jyxk/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f15aa2cf790" loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f15aa2cf020" loc="49:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f15aa2da120" loc="56:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f15aa2d9560" loc="72:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f15aa2d62a0" loc="94:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15aa2d6020" loc="94:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f15aa2d9de0" loc="79:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f15aa2dac90" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15aa2daa10" loc="65:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f15aa2d6b00" loc="100:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f15aa2d76e0" loc="85:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f15aa2e2990" loc="71:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f15aa2e1350" loc="81:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f15aa2e2020" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f15aa2e5c30" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f15aa2e0020" loc="91:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f15aa2e1c50" loc="91:/home/jyxk/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f15aa2e3c60" loc="62:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f15aa2dda60" loc="69:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15aa2dd7e0" loc="69:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f15aa2dc5c0" loc="80:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f15aa2dc340" loc="80:/home/jyxk/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f15aa1a6c40" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f15aa1a6670" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f15aa1a69b0" loc="48:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f15aa1a1a70" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f15aa1a17f0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f15aa1a0890" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f15aa1a02c0" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f15aa1a0600" loc="90:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f15aa1a2610" loc="65:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f15aa19e2c0" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f15aa19d820" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f15aa19db60" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f15aa19e020" loc="99:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f15aa1a1020" loc="72:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f15aa1a3610" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f15aa1a4bd0" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f15aa1a3020" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f15aa1a3370" loc="57:/home/jyxk/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f15aa17e5b0" loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f15aa17e330" loc="50:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f15aa17edf0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f15aa17ccf0" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f15aa17c700" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f15aa17ca60" loc="69:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f15aa17ab50" loc="79:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/jyxk/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f15aa122270" loc="53:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f15aa122ba0" loc="61:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f15aa11d070" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f15aa146450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f15aa146870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f15aa1259c0" loc="120:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f15aa127990" loc="97:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f15aa127020" loc="88:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f15aa1251f0" loc="102:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f15aa124470" loc="128:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/jyxk/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f15aa117510" loc="65:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f15aa11acc0" loc="59:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f15aa10e2a0" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15aa10e020" loc="54:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f15aa10f780" loc="49:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f15aa0e9af0" loc="213:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f15aa0f5790" loc="143:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f15aa101530" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15aa1763b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f15aa176bf0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f15aa1012b0" loc="50:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15aa1763b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f15aa176bf0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f15aa0f7870" loc="123:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f15aa0ffa40" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15aa171360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f15aa171ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f15aa0ff7c0" loc="70:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15aa171360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f15aa171ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f15aa0eee70" loc="180:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f15aa0ea480" loc="197:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f15aa0ff020" loc="65:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15aa173290"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f15aa173a20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f15aa0fe270" loc="75:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15aa171360"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f15aa171ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f15aa0fa020" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f15aa0fbd30" loc="97:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f15aa0fb610" loc="95:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f15aa0ee740" loc="179:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f15aa100780" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15aa173290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f15aa173a20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f15aa100500" loc="60:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15aa173290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f15aa173a20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f15aa0fc420" loc="85:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f15aa0ed5d0" loc="181:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f15aa0fce00" loc="90:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f15aa0fcb80" loc="90:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f15aa0f8910" loc="113:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f15aa0f70e0" loc="118:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f15aa0f0840" loc="177:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f15aa0f2790" loc="163:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f15aa0f67e0" loc="133:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f15aa0ee020" loc="178:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f15aa0f3020" loc="148:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f15aa0edcf0" loc="182:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f15aa0fa800" loc="103:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f15aa17f330"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f15aa178a50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f15aa0ec4c0" loc="187:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f15aa0e9350" loc="207:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f15aa0fec10" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f15aa0fe990" loc="80:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f15aa0e84d0" loc="224:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15aa0e8250" loc="224:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f15aa101d10" loc="55:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15aa1763b0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f15aa176bf0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f15aa0f6020" loc="128:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f15aa0f3770" loc="153:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f15aa0f0020" loc="174:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f15aa146450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f15aa146870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f15aa0f1cf0" loc="174:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f15aa146450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f15aa146870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f15aa0f12a0" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f15aa159420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f15aa159840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f15aa0f1020" loc="168:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f15aa159420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f15aa159840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f15aa0e8d90" loc="231:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f15aa0eccb0" loc="192:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f15aa0f8070" loc="108:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f15aa0eabe0" loc="202:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f15aa0f2020" loc="158:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f15aa0f5020" loc="138:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f15aa070030" loc="95:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f15aa070880" loc="105:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/jyxk/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f15a9fc7020" loc="90:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f15a9fc7880" loc="98:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/jyxk/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f15ab593160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f15a9fb34a0" loc="39:/home/jyxk/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f15a9f99900" loc="56:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f15a9f98a20" loc="73:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f15a9f99070" loc="46:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f15a9f981f0" loc="65:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f15a9f97390" loc="81:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/jyxk/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f15a9f8db60" loc="79:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f15a9f96b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f15a9f8d8e0" loc="79:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f15a9f96b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f15a9f91b90" loc="53:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f15a9f8e6f0" loc="62:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f15a9f96b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f15a9f8e470" loc="62:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f15a9f96b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f15a9f8d030" loc="70:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/jyxk/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f15a9f96b40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f15a9f204b0" loc="62:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/jyxk/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BigQueue" loc="43:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
      <documentation loc="33:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-09-19 17:29:17 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f15a9eb92a0" loc="43:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <interfacedef-ref qname="BigQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f15a9eb92a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f15a9eb7ac0" loc="80:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="74:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f15a9eb92a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f15a9eb6cb0" loc="97:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="90:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param newVal - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f15aaf2ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f15a9eb92a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f15a9eb6a30" loc="97:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f15a9eb92a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f15a9eb4720" loc="108:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="99:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f15a9eb92a0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f15a9eb44a0" loc="108:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f15a9eb8350" loc="57:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="52:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f15a9eb7350" loc="72:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="67:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f15a9eb62b0" loc="88:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="82:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f15a9eb92a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f15a9eb9b50" loc="50:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="45:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15aaf37090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f15a9eb8ae0" loc="65:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
        <documentation loc="59:/home/jyxk/tinyos-main/tos/interfaces/BigQueue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f15ab593520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f15a9e932a0" loc="49:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f15a9e93020" loc="49:/home/jyxk/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
